Checks: >
  -*,
  arcadia-typeid-name-restriction,
  arcadia-ascii-compare-ignorecase,
  # bugprone-use-after-move is disabled as it does not treat . as a synchornization point, as guaranteed by C++17
  # See the discussion in
  # https://github.com/llvm/llvm-project/issues/57758
  # and
  # https://stackoverflow.com/questions/73729536/is-clang-tidy-version-14-right-with-bugprone-use-after-move-error-on-this-co
  #
  # This check should be re-enabled, once the upstream issue is solved.
  # bugprone-use-after-move,
  performance-implicit-conversion-in-loop,
  readability-identifier-naming,
CheckOptions:
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassIgnoredRegexp
    value: "promise_type"
  - key: readability-identifier-naming.PublicMemberCase
    value: CamelCase
  - key: readability-identifier-naming.ProtectedMemberCase
    value: CamelCase
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: _
  - key: readability-identifier-naming.PrivateMemberCase
    value: CamelCase
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.FunctionCase
    value: CamelCase
  # make_error_code is used by std::error_code constructor with enum arg
  - key: readability-identifier-naming.FunctionIgnoredRegexp
    value: "make_error_code"
  - key: readability-identifier-naming.ClassMethodCase
    value: CamelCase
  # do not tide public begin / end methods to workaround clang-tidy bug in range-based for loops
  - key: readability-identifier-naming.PublicMethodIgnoredRegexp
    value: "(begin|end|empty|size|ysize|front|back)"
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier-naming.MacroDefinitionIgnoredRegexp
    value: "^_.*"
  - key: misc-include-cleaner.IgnoreHeaders
    value: "library/cpp/testing/gtest/gtest.h"
  - key: misc-header-include-cycle.IgnoredFilesList
    value: "contrib/.*"
