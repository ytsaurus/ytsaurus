syntax = "proto3";

package NTestShard;

message TStateServer {
    enum EEntityState {
        ABSENT = 0;
        WRITE_PENDING = 1;
        CONFIRMED = 2;
        DELETE_PENDING = 3;
        DELETED = 4;
    }

    enum EStatus {
        OK = 0;
        ERROR = 1;
        RACE = 2;
    }

    message TWrite { // transition between two states
        uint64 TabletId = 1;
        uint32 Generation = 2;
        string Key = 3;
        EEntityState OriginState = 4;
        EEntityState TargetState = 5;
    }

    message TWriteResult {
        EStatus Status = 1;
    }

    message TRead {
        uint64 TabletId = 1;
        uint32 Generation = 2;
        bytes Cookie = 3; // returned from previous read result or empty for new query
    }

    message TReadResult {
        message TItem {
            string Key = 1;
            EEntityState State = 2;
        }

        EStatus Status = 1;
        bytes Cookie = 2;
        repeated TItem Items = 3;
    }

    message TTabletInfo {
        uint64 TabletId = 1;
        uint32 Generation = 2;
    }

    message TRequest {
        oneof Command {
            TWrite Write = 1;
            TRead Read = 2;
            TTabletInfo TabletInfo = 3; // recovery log only
        }
    }
}
