// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.5
// source: yt/yt_proto/yt/core/rpc/proto/rpc.proto

package rpc

import (
	misc "go.ytsaurus.tech/yt/go/proto/core/misc"
	tracing "go.ytsaurus.tech/yt/go/proto/core/tracing"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EWriterFeedback int32

const (
	EWriterFeedback_WF_HANDSHAKE EWriterFeedback = 0
	EWriterFeedback_WF_SUCCESS   EWriterFeedback = 1
)

// Enum value maps for EWriterFeedback.
var (
	EWriterFeedback_name = map[int32]string{
		0: "WF_HANDSHAKE",
		1: "WF_SUCCESS",
	}
	EWriterFeedback_value = map[string]int32{
		"WF_HANDSHAKE": 0,
		"WF_SUCCESS":   1,
	}
)

func (x EWriterFeedback) Enum() *EWriterFeedback {
	p := new(EWriterFeedback)
	*p = x
	return p
}

func (x EWriterFeedback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EWriterFeedback) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_enumTypes[0].Descriptor()
}

func (EWriterFeedback) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_enumTypes[0]
}

func (x EWriterFeedback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EWriterFeedback) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EWriterFeedback(num)
	return nil
}

// Deprecated: Use EWriterFeedback.Descriptor instead.
func (EWriterFeedback) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{0}
}

type TStreamingParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowSize   *int64 `protobuf:"varint,1,opt,name=window_size,json=windowSize" json:"window_size,omitempty"`
	ReadTimeout  *int64 `protobuf:"varint,2,opt,name=read_timeout,json=readTimeout" json:"read_timeout,omitempty"`
	WriteTimeout *int64 `protobuf:"varint,3,opt,name=write_timeout,json=writeTimeout" json:"write_timeout,omitempty"`
}

func (x *TStreamingParameters) Reset() {
	*x = TStreamingParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStreamingParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStreamingParameters) ProtoMessage() {}

func (x *TStreamingParameters) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStreamingParameters.ProtoReflect.Descriptor instead.
func (*TStreamingParameters) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *TStreamingParameters) GetWindowSize() int64 {
	if x != nil && x.WindowSize != nil {
		return *x.WindowSize
	}
	return 0
}

func (x *TStreamingParameters) GetReadTimeout() int64 {
	if x != nil && x.ReadTimeout != nil {
		return *x.ReadTimeout
	}
	return 0
}

func (x *TStreamingParameters) GetWriteTimeout() int64 {
	if x != nil && x.WriteTimeout != nil {
		return *x.WriteTimeout
	}
	return 0
}

type TRequestHeader struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	RequestId                                *misc.TGuid `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Service                                  *string     `protobuf:"bytes,2,req,name=service" json:"service,omitempty"`
	Method                                   *string     `protobuf:"bytes,3,req,name=method" json:"method,omitempty"`
	RealmId                                  *misc.TGuid `protobuf:"bytes,8,opt,name=realm_id,json=realmId" json:"realm_id,omitempty"`
	ProtocolVersionMajor                     *int32      `protobuf:"varint,9,opt,name=protocol_version_major,json=protocolVersionMajor" json:"protocol_version_major,omitempty"`
	ProtocolVersionMinor                     *int32      `protobuf:"varint,19,opt,name=protocol_version_minor,json=protocolVersionMinor" json:"protocol_version_minor,omitempty"`
	StartTime                                *int64      `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Retry                                    *bool       `protobuf:"varint,11,opt,name=retry" json:"retry,omitempty"`
	MutationId                               *misc.TGuid `protobuf:"bytes,13,opt,name=mutation_id,json=mutationId" json:"mutation_id,omitempty"`
	Timeout                                  *int64      `protobuf:"varint,10,opt,name=timeout" json:"timeout,omitempty"`
	User                                     *string     `protobuf:"bytes,12,opt,name=user" json:"user,omitempty"`
	UserTag                                  *string     `protobuf:"bytes,25,opt,name=user_tag,json=userTag" json:"user_tag,omitempty"`
	TosLevel                                 *int32      `protobuf:"varint,14,opt,name=tos_level,json=tosLevel" json:"tos_level,omitempty"`
	RequestFormat                            *int32      `protobuf:"varint,15,opt,name=request_format,json=requestFormat" json:"request_format,omitempty"`    // EMessageFormat
	ResponseFormat                           *int32      `protobuf:"varint,16,opt,name=response_format,json=responseFormat" json:"response_format,omitempty"` // EMessageFormat
	Uncancelable                             *bool       `protobuf:"varint,17,opt,name=uncancelable" json:"uncancelable,omitempty"`
	UserAgent                                *string     `protobuf:"bytes,18,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	LoggingSuppressionTimeout                *int64      `protobuf:"varint,20,opt,name=logging_suppression_timeout,json=loggingSuppressionTimeout" json:"logging_suppression_timeout,omitempty"`
	DisableLoggingSuppressionIfRequestFailed *bool       `protobuf:"varint,21,opt,name=disable_logging_suppression_if_request_failed,json=disableLoggingSuppressionIfRequestFailed" json:"disable_logging_suppression_if_request_failed,omitempty"`
	// COMPAT(kiseloyvp): these are missing when legacy mode is used
	RequestCodec                         *int32                `protobuf:"varint,23,opt,name=request_codec,json=requestCodec" json:"request_codec,omitempty"`    // ECodec
	ResponseCodec                        *int32                `protobuf:"varint,24,opt,name=response_codec,json=responseCodec" json:"response_codec,omitempty"` // ECodec
	ServerAttachmentsStreamingParameters *TStreamingParameters `protobuf:"bytes,33,opt,name=server_attachments_streaming_parameters,json=serverAttachmentsStreamingParameters" json:"server_attachments_streaming_parameters,omitempty"`
	RequestFormatOptions                 []byte                `protobuf:"bytes,34,opt,name=request_format_options,json=requestFormatOptions" json:"request_format_options,omitempty"`    // TYsonString
	ResponseFormatOptions                []byte                `protobuf:"bytes,35,opt,name=response_format_options,json=responseFormatOptions" json:"response_format_options,omitempty"` // TYsonString
	DeclaredClientFeatureIds             []int32               `protobuf:"varint,36,rep,name=declared_client_feature_ids,json=declaredClientFeatureIds" json:"declared_client_feature_ids,omitempty"`
	RequiredServerFeatureIds             []int32               `protobuf:"varint,37,rep,name=required_server_feature_ids,json=requiredServerFeatureIds" json:"required_server_feature_ids,omitempty"`
	LogicalRequestWeight                 *int64                `protobuf:"varint,38,opt,name=logical_request_weight,json=logicalRequestWeight,def=1" json:"logical_request_weight,omitempty"`
}

// Default values for TRequestHeader fields.
const (
	Default_TRequestHeader_LogicalRequestWeight = int64(1)
)

func (x *TRequestHeader) Reset() {
	*x = TRequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRequestHeader) ProtoMessage() {}

func (x *TRequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRequestHeader.ProtoReflect.Descriptor instead.
func (*TRequestHeader) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *TRequestHeader) GetRequestId() *misc.TGuid {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TRequestHeader) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *TRequestHeader) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *TRequestHeader) GetRealmId() *misc.TGuid {
	if x != nil {
		return x.RealmId
	}
	return nil
}

func (x *TRequestHeader) GetProtocolVersionMajor() int32 {
	if x != nil && x.ProtocolVersionMajor != nil {
		return *x.ProtocolVersionMajor
	}
	return 0
}

func (x *TRequestHeader) GetProtocolVersionMinor() int32 {
	if x != nil && x.ProtocolVersionMinor != nil {
		return *x.ProtocolVersionMinor
	}
	return 0
}

func (x *TRequestHeader) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *TRequestHeader) GetRetry() bool {
	if x != nil && x.Retry != nil {
		return *x.Retry
	}
	return false
}

func (x *TRequestHeader) GetMutationId() *misc.TGuid {
	if x != nil {
		return x.MutationId
	}
	return nil
}

func (x *TRequestHeader) GetTimeout() int64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *TRequestHeader) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TRequestHeader) GetUserTag() string {
	if x != nil && x.UserTag != nil {
		return *x.UserTag
	}
	return ""
}

func (x *TRequestHeader) GetTosLevel() int32 {
	if x != nil && x.TosLevel != nil {
		return *x.TosLevel
	}
	return 0
}

func (x *TRequestHeader) GetRequestFormat() int32 {
	if x != nil && x.RequestFormat != nil {
		return *x.RequestFormat
	}
	return 0
}

func (x *TRequestHeader) GetResponseFormat() int32 {
	if x != nil && x.ResponseFormat != nil {
		return *x.ResponseFormat
	}
	return 0
}

func (x *TRequestHeader) GetUncancelable() bool {
	if x != nil && x.Uncancelable != nil {
		return *x.Uncancelable
	}
	return false
}

func (x *TRequestHeader) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *TRequestHeader) GetLoggingSuppressionTimeout() int64 {
	if x != nil && x.LoggingSuppressionTimeout != nil {
		return *x.LoggingSuppressionTimeout
	}
	return 0
}

func (x *TRequestHeader) GetDisableLoggingSuppressionIfRequestFailed() bool {
	if x != nil && x.DisableLoggingSuppressionIfRequestFailed != nil {
		return *x.DisableLoggingSuppressionIfRequestFailed
	}
	return false
}

func (x *TRequestHeader) GetRequestCodec() int32 {
	if x != nil && x.RequestCodec != nil {
		return *x.RequestCodec
	}
	return 0
}

func (x *TRequestHeader) GetResponseCodec() int32 {
	if x != nil && x.ResponseCodec != nil {
		return *x.ResponseCodec
	}
	return 0
}

func (x *TRequestHeader) GetServerAttachmentsStreamingParameters() *TStreamingParameters {
	if x != nil {
		return x.ServerAttachmentsStreamingParameters
	}
	return nil
}

func (x *TRequestHeader) GetRequestFormatOptions() []byte {
	if x != nil {
		return x.RequestFormatOptions
	}
	return nil
}

func (x *TRequestHeader) GetResponseFormatOptions() []byte {
	if x != nil {
		return x.ResponseFormatOptions
	}
	return nil
}

func (x *TRequestHeader) GetDeclaredClientFeatureIds() []int32 {
	if x != nil {
		return x.DeclaredClientFeatureIds
	}
	return nil
}

func (x *TRequestHeader) GetRequiredServerFeatureIds() []int32 {
	if x != nil {
		return x.RequiredServerFeatureIds
	}
	return nil
}

func (x *TRequestHeader) GetLogicalRequestWeight() int64 {
	if x != nil && x.LogicalRequestWeight != nil {
		return *x.LogicalRequestWeight
	}
	return Default_TRequestHeader_LogicalRequestWeight
}

type TBalancingExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableStickiness       *bool   `protobuf:"varint,1,opt,name=enable_stickiness,json=enableStickiness" json:"enable_stickiness,omitempty"`
	StickyGroupSize        *int32  `protobuf:"varint,2,opt,name=sticky_group_size,json=stickyGroupSize,def=1" json:"sticky_group_size,omitempty"`
	EnableClientStickiness *bool   `protobuf:"varint,3,opt,name=enable_client_stickiness,json=enableClientStickiness" json:"enable_client_stickiness,omitempty"`
	BalancingHint          *uint64 `protobuf:"varint,4,opt,name=balancing_hint,json=balancingHint" json:"balancing_hint,omitempty"`
}

// Default values for TBalancingExt fields.
const (
	Default_TBalancingExt_StickyGroupSize = int32(1)
)

func (x *TBalancingExt) Reset() {
	*x = TBalancingExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBalancingExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBalancingExt) ProtoMessage() {}

func (x *TBalancingExt) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBalancingExt.ProtoReflect.Descriptor instead.
func (*TBalancingExt) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *TBalancingExt) GetEnableStickiness() bool {
	if x != nil && x.EnableStickiness != nil {
		return *x.EnableStickiness
	}
	return false
}

func (x *TBalancingExt) GetStickyGroupSize() int32 {
	if x != nil && x.StickyGroupSize != nil {
		return *x.StickyGroupSize
	}
	return Default_TBalancingExt_StickyGroupSize
}

func (x *TBalancingExt) GetEnableClientStickiness() bool {
	if x != nil && x.EnableClientStickiness != nil {
		return *x.EnableClientStickiness
	}
	return false
}

func (x *TBalancingExt) GetBalancingHint() uint64 {
	if x != nil && x.BalancingHint != nil {
		return *x.BalancingHint
	}
	return 0
}

type TCredentialsExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         *string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	SessionId     *string `protobuf:"bytes,4,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	SslSessionId  *string `protobuf:"bytes,5,opt,name=ssl_session_id,json=sslSessionId" json:"ssl_session_id,omitempty"`
	UserTicket    *string `protobuf:"bytes,6,opt,name=user_ticket,json=userTicket" json:"user_ticket,omitempty"`
	ServiceTicket *string `protobuf:"bytes,7,opt,name=service_ticket,json=serviceTicket" json:"service_ticket,omitempty"`
}

func (x *TCredentialsExt) Reset() {
	*x = TCredentialsExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCredentialsExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCredentialsExt) ProtoMessage() {}

func (x *TCredentialsExt) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCredentialsExt.ProtoReflect.Descriptor instead.
func (*TCredentialsExt) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *TCredentialsExt) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *TCredentialsExt) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *TCredentialsExt) GetSslSessionId() string {
	if x != nil && x.SslSessionId != nil {
		return *x.SslSessionId
	}
	return ""
}

func (x *TCredentialsExt) GetUserTicket() string {
	if x != nil && x.UserTicket != nil {
		return *x.UserTicket
	}
	return ""
}

func (x *TCredentialsExt) GetServiceTicket() string {
	if x != nil && x.ServiceTicket != nil {
		return *x.ServiceTicket
	}
	return ""
}

type TCustomMetadataExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string][]byte `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *TCustomMetadataExt) Reset() {
	*x = TCustomMetadataExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCustomMetadataExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCustomMetadataExt) ProtoMessage() {}

func (x *TCustomMetadataExt) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCustomMetadataExt.ProtoReflect.Descriptor instead.
func (*TCustomMetadataExt) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *TCustomMetadataExt) GetEntries() map[string][]byte {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TMultiproxyTargetExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
}

func (x *TMultiproxyTargetExt) Reset() {
	*x = TMultiproxyTargetExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMultiproxyTargetExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMultiproxyTargetExt) ProtoMessage() {}

func (x *TMultiproxyTargetExt) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMultiproxyTargetExt.ProtoReflect.Descriptor instead.
func (*TMultiproxyTargetExt) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *TMultiproxyTargetExt) GetCluster() string {
	if x != nil && x.Cluster != nil {
		return *x.Cluster
	}
	return ""
}

type TResponseHeader struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	RequestId *misc.TGuid `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// NB: In some cases we deliberately omit setting these fields.
	Service *string `protobuf:"bytes,7,opt,name=service" json:"service,omitempty"`
	Method  *string `protobuf:"bytes,8,opt,name=method" json:"method,omitempty"`
	// If omitted then OK is assumed.
	Error  *misc.TError `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Format *int32       `protobuf:"varint,3,opt,name=format" json:"format,omitempty"` // EMessageFormat
	Codec  *int32       `protobuf:"varint,6,opt,name=codec" json:"codec,omitempty"`   // ECodec
}

func (x *TResponseHeader) Reset() {
	*x = TResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TResponseHeader) ProtoMessage() {}

func (x *TResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TResponseHeader.ProtoReflect.Descriptor instead.
func (*TResponseHeader) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *TResponseHeader) GetRequestId() *misc.TGuid {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TResponseHeader) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *TResponseHeader) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *TResponseHeader) GetError() *misc.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TResponseHeader) GetFormat() int32 {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return 0
}

func (x *TResponseHeader) GetCodec() int32 {
	if x != nil && x.Codec != nil {
		return *x.Codec
	}
	return 0
}

type THedgingExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupResponded *bool `protobuf:"varint,1,opt,name=backup_responded,json=backupResponded" json:"backup_responded,omitempty"`
}

func (x *THedgingExt) Reset() {
	*x = THedgingExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *THedgingExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*THedgingExt) ProtoMessage() {}

func (x *THedgingExt) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use THedgingExt.ProtoReflect.Descriptor instead.
func (*THedgingExt) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *THedgingExt) GetBackupResponded() bool {
	if x != nil && x.BackupResponded != nil {
		return *x.BackupResponded
	}
	return false
}

type TRequestCancelationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId *misc.TGuid `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Service   *string     `protobuf:"bytes,2,req,name=service" json:"service,omitempty"`
	Method    *string     `protobuf:"bytes,3,req,name=method" json:"method,omitempty"`
	RealmId   *misc.TGuid `protobuf:"bytes,4,opt,name=realm_id,json=realmId" json:"realm_id,omitempty"`
}

func (x *TRequestCancelationHeader) Reset() {
	*x = TRequestCancelationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRequestCancelationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRequestCancelationHeader) ProtoMessage() {}

func (x *TRequestCancelationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRequestCancelationHeader.ProtoReflect.Descriptor instead.
func (*TRequestCancelationHeader) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *TRequestCancelationHeader) GetRequestId() *misc.TGuid {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TRequestCancelationHeader) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *TRequestCancelationHeader) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *TRequestCancelationHeader) GetRealmId() *misc.TGuid {
	if x != nil {
		return x.RealmId
	}
	return nil
}

type TStreamingPayloadHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      *misc.TGuid `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Service        *string     `protobuf:"bytes,2,req,name=service" json:"service,omitempty"`
	Method         *string     `protobuf:"bytes,3,req,name=method" json:"method,omitempty"`
	RealmId        *misc.TGuid `protobuf:"bytes,4,opt,name=realm_id,json=realmId" json:"realm_id,omitempty"`
	SequenceNumber *int32      `protobuf:"varint,5,req,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	Codec          *int32      `protobuf:"varint,6,opt,name=codec" json:"codec,omitempty"` // ECodec
}

func (x *TStreamingPayloadHeader) Reset() {
	*x = TStreamingPayloadHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStreamingPayloadHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStreamingPayloadHeader) ProtoMessage() {}

func (x *TStreamingPayloadHeader) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStreamingPayloadHeader.ProtoReflect.Descriptor instead.
func (*TStreamingPayloadHeader) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *TStreamingPayloadHeader) GetRequestId() *misc.TGuid {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TStreamingPayloadHeader) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *TStreamingPayloadHeader) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *TStreamingPayloadHeader) GetRealmId() *misc.TGuid {
	if x != nil {
		return x.RealmId
	}
	return nil
}

func (x *TStreamingPayloadHeader) GetSequenceNumber() int32 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *TStreamingPayloadHeader) GetCodec() int32 {
	if x != nil && x.Codec != nil {
		return *x.Codec
	}
	return 0
}

type TStreamingFeedbackHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    *misc.TGuid `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Service      *string     `protobuf:"bytes,2,req,name=service" json:"service,omitempty"`
	Method       *string     `protobuf:"bytes,3,req,name=method" json:"method,omitempty"`
	RealmId      *misc.TGuid `protobuf:"bytes,4,opt,name=realm_id,json=realmId" json:"realm_id,omitempty"`
	ReadPosition *int64      `protobuf:"varint,5,req,name=read_position,json=readPosition" json:"read_position,omitempty"`
}

func (x *TStreamingFeedbackHeader) Reset() {
	*x = TStreamingFeedbackHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStreamingFeedbackHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStreamingFeedbackHeader) ProtoMessage() {}

func (x *TStreamingFeedbackHeader) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStreamingFeedbackHeader.ProtoReflect.Descriptor instead.
func (*TStreamingFeedbackHeader) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *TStreamingFeedbackHeader) GetRequestId() *misc.TGuid {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TStreamingFeedbackHeader) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *TStreamingFeedbackHeader) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *TStreamingFeedbackHeader) GetRealmId() *misc.TGuid {
	if x != nil {
		return x.RealmId
	}
	return nil
}

func (x *TStreamingFeedbackHeader) GetReadPosition() int64 {
	if x != nil && x.ReadPosition != nil {
		return *x.ReadPosition
	}
	return 0
}

type TReqDiscover struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	ReplyDelay *int64 `protobuf:"varint,1,opt,name=reply_delay,json=replyDelay" json:"reply_delay,omitempty"`
}

func (x *TReqDiscover) Reset() {
	*x = TReqDiscover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDiscover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDiscover) ProtoMessage() {}

func (x *TReqDiscover) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDiscover.ProtoReflect.Descriptor instead.
func (*TReqDiscover) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *TReqDiscover) GetReplyDelay() int64 {
	if x != nil && x.ReplyDelay != nil {
		return *x.ReplyDelay
	}
	return 0
}

type TRspDiscover struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Up                 *bool    `protobuf:"varint,1,req,name=up" json:"up,omitempty"`
	SuggestedAddresses []string `protobuf:"bytes,2,rep,name=suggested_addresses,json=suggestedAddresses" json:"suggested_addresses,omitempty"`
}

func (x *TRspDiscover) Reset() {
	*x = TRspDiscover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDiscover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDiscover) ProtoMessage() {}

func (x *TRspDiscover) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDiscover.ProtoReflect.Descriptor instead.
func (*TRspDiscover) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *TRspDiscover) GetUp() bool {
	if x != nil && x.Up != nil {
		return *x.Up
	}
	return false
}

func (x *TRspDiscover) GetSuggestedAddresses() []string {
	if x != nil {
		return x.SuggestedAddresses
	}
	return nil
}

type TWriterFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feedback *EWriterFeedback `protobuf:"varint,1,req,name=feedback,enum=NYT.NRpc.NProto.EWriterFeedback" json:"feedback,omitempty"`
}

func (x *TWriterFeedback) Reset() {
	*x = TWriterFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TWriterFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TWriterFeedback) ProtoMessage() {}

func (x *TWriterFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TWriterFeedback.ProtoReflect.Descriptor instead.
func (*TWriterFeedback) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *TWriterFeedback) GetFeedback() EWriterFeedback {
	if x != nil && x.Feedback != nil {
		return *x.Feedback
	}
	return EWriterFeedback_WF_HANDSHAKE
}

var file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*TRequestHeader)(nil),
		ExtensionType: (*tracing.TTracingExt)(nil),
		Field:         106,
		Name:          "NYT.NRpc.NProto.TRequestHeader.tracing_ext",
		Tag:           "bytes,106,opt,name=tracing_ext",
		Filename:      "yt/yt_proto/yt/core/rpc/proto/rpc.proto",
	},
	{
		ExtendedType:  (*TRequestHeader)(nil),
		ExtensionType: (*TBalancingExt)(nil),
		Field:         111,
		Name:          "NYT.NRpc.NProto.TBalancingExt.balancing_ext",
		Tag:           "bytes,111,opt,name=balancing_ext",
		Filename:      "yt/yt_proto/yt/core/rpc/proto/rpc.proto",
	},
	{
		ExtendedType:  (*TRequestHeader)(nil),
		ExtensionType: (*TCredentialsExt)(nil),
		Field:         110,
		Name:          "NYT.NRpc.NProto.TCredentialsExt.credentials_ext",
		Tag:           "bytes,110,opt,name=credentials_ext",
		Filename:      "yt/yt_proto/yt/core/rpc/proto/rpc.proto",
	},
	{
		ExtendedType:  (*TRequestHeader)(nil),
		ExtensionType: (*TCustomMetadataExt)(nil),
		Field:         115,
		Name:          "NYT.NRpc.NProto.TCustomMetadataExt.custom_metadata_ext",
		Tag:           "bytes,115,opt,name=custom_metadata_ext",
		Filename:      "yt/yt_proto/yt/core/rpc/proto/rpc.proto",
	},
	{
		ExtendedType:  (*TRequestHeader)(nil),
		ExtensionType: (*TMultiproxyTargetExt)(nil),
		Field:         125,
		Name:          "NYT.NRpc.NProto.TMultiproxyTargetExt.multiproxy_target_ext",
		Tag:           "bytes,125,opt,name=multiproxy_target_ext",
		Filename:      "yt/yt_proto/yt/core/rpc/proto/rpc.proto",
	},
	{
		ExtendedType:  (*TResponseHeader)(nil),
		ExtensionType: (*THedgingExt)(nil),
		Field:         100,
		Name:          "NYT.NRpc.NProto.THedgingExt.hedging_ext",
		Tag:           "bytes,100,opt,name=hedging_ext",
		Filename:      "yt/yt_proto/yt/core/rpc/proto/rpc.proto",
	},
}

// Extension fields to TRequestHeader.
var (
	// optional NYT.NTracing.NProto.TTracingExt tracing_ext = 106;
	E_TRequestHeader_TracingExt = &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes[0]
	// optional NYT.NRpc.NProto.TBalancingExt balancing_ext = 111;
	E_TBalancingExt_BalancingExt = &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes[1]
	// optional NYT.NRpc.NProto.TCredentialsExt credentials_ext = 110;
	E_TCredentialsExt_CredentialsExt = &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes[2]
	// optional NYT.NRpc.NProto.TCustomMetadataExt custom_metadata_ext = 115;
	E_TCustomMetadataExt_CustomMetadataExt = &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes[3]
	// optional NYT.NRpc.NProto.TMultiproxyTargetExt multiproxy_target_ext = 125;
	E_TMultiproxyTargetExt_MultiproxyTargetExt = &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes[4]
)

// Extension fields to TResponseHeader.
var (
	// optional NYT.NRpc.NProto.THedgingExt hedging_ext = 100;
	E_THedgingExt_HedgingExt = &file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes[5]
)

var File_yt_yt_proto_yt_core_rpc_proto_rpc_proto protoreflect.FileDescriptor

var file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDesc = []byte{
	0x0a, 0x27, 0x79, 0x74, 0x2f, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x69, 0x73,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x27, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x79, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x72,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a,
	0x14, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xf4,
	0x0a, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0a, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x75, 0x6e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x6e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x3e, 0x0a, 0x1b, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x66, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x7c,
	0x0a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x24, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x16,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x64, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x18, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x25, 0x20, 0x03, 0x28, 0x05, 0x52, 0x18,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x01, 0x31, 0x52, 0x14, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x2a, 0x08, 0x08, 0x64, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x32, 0x62, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x45, 0x78, 0x74, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x4a,
	0x04, 0x08, 0x20, 0x10, 0x21, 0x22, 0xb2, 0x02, 0x0a, 0x0d, 0x54, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x11, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x01, 0x31, 0x52, 0x0f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67,
	0x48, 0x69, 0x6e, 0x74, 0x32, 0x64, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e,
	0x67, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x52, 0x0c, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x22, 0xa6, 0x02, 0x0a, 0x0f, 0x54,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x73, 0x6c, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x73, 0x6c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x32, 0x6a, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x5f, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x22, 0x92, 0x02, 0x0a, 0x12, 0x54, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x12, 0x4a, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74,
	0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0x74, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x78, 0x74, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x54, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x32, 0x7a, 0x0a, 0x15, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45,
	0x78, 0x74, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x45, 0x78, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x0f, 0x54, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2a, 0x08, 0x08, 0x64, 0x10, 0x80, 0x80, 0x80, 0x80,
	0x02, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x54, 0x48, 0x65, 0x64,
	0x67, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x65, 0x64, 0x32, 0x5f, 0x0a, 0x0b, 0x68, 0x65, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78,
	0x74, 0x12, 0x20, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x64,
	0x67, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x52, 0x0a, 0x68, 0x65, 0x64, 0x67, 0x69, 0x6e, 0x67,
	0x45, 0x78, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x19, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x49, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x17, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63,
	0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x22, 0xd1, 0x01, 0x0a, 0x18, 0x54, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65,
	0x61, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0c, 0x54, 0x52,
	0x65, 0x71, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x2a, 0x08, 0x08, 0x64, 0x10,
	0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0x59, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2a, 0x08, 0x08, 0x64, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02,
	0x22, 0x4f, 0x0a, 0x0f, 0x54, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x2a, 0x33, 0x0a, 0x0f, 0x45, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x46, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x53,
	0x48, 0x41, 0x4b, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x46, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x42, 0x3c, 0x0a, 0x11, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x79,
	0x74, 0x73, 0x61, 0x75, 0x72, 0x75, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x25, 0x61,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f,
	0x79, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x70, 0x63,
}

var (
	file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescOnce sync.Once
	file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescData = file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDesc
)

func file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescGZIP() []byte {
	file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescOnce.Do(func() {
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescData)
	})
	return file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDescData
}

var file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_goTypes = []interface{}{
	(EWriterFeedback)(0),              // 0: NYT.NRpc.NProto.EWriterFeedback
	(*TStreamingParameters)(nil),      // 1: NYT.NRpc.NProto.TStreamingParameters
	(*TRequestHeader)(nil),            // 2: NYT.NRpc.NProto.TRequestHeader
	(*TBalancingExt)(nil),             // 3: NYT.NRpc.NProto.TBalancingExt
	(*TCredentialsExt)(nil),           // 4: NYT.NRpc.NProto.TCredentialsExt
	(*TCustomMetadataExt)(nil),        // 5: NYT.NRpc.NProto.TCustomMetadataExt
	(*TMultiproxyTargetExt)(nil),      // 6: NYT.NRpc.NProto.TMultiproxyTargetExt
	(*TResponseHeader)(nil),           // 7: NYT.NRpc.NProto.TResponseHeader
	(*THedgingExt)(nil),               // 8: NYT.NRpc.NProto.THedgingExt
	(*TRequestCancelationHeader)(nil), // 9: NYT.NRpc.NProto.TRequestCancelationHeader
	(*TStreamingPayloadHeader)(nil),   // 10: NYT.NRpc.NProto.TStreamingPayloadHeader
	(*TStreamingFeedbackHeader)(nil),  // 11: NYT.NRpc.NProto.TStreamingFeedbackHeader
	(*TReqDiscover)(nil),              // 12: NYT.NRpc.NProto.TReqDiscover
	(*TRspDiscover)(nil),              // 13: NYT.NRpc.NProto.TRspDiscover
	(*TWriterFeedback)(nil),           // 14: NYT.NRpc.NProto.TWriterFeedback
	nil,                               // 15: NYT.NRpc.NProto.TCustomMetadataExt.EntriesEntry
	(*misc.TGuid)(nil),                // 16: NYT.NProto.TGuid
	(*misc.TError)(nil),               // 17: NYT.NProto.TError
	(*tracing.TTracingExt)(nil),       // 18: NYT.NTracing.NProto.TTracingExt
}
var file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_depIdxs = []int32{
	16, // 0: NYT.NRpc.NProto.TRequestHeader.request_id:type_name -> NYT.NProto.TGuid
	16, // 1: NYT.NRpc.NProto.TRequestHeader.realm_id:type_name -> NYT.NProto.TGuid
	16, // 2: NYT.NRpc.NProto.TRequestHeader.mutation_id:type_name -> NYT.NProto.TGuid
	1,  // 3: NYT.NRpc.NProto.TRequestHeader.server_attachments_streaming_parameters:type_name -> NYT.NRpc.NProto.TStreamingParameters
	15, // 4: NYT.NRpc.NProto.TCustomMetadataExt.entries:type_name -> NYT.NRpc.NProto.TCustomMetadataExt.EntriesEntry
	16, // 5: NYT.NRpc.NProto.TResponseHeader.request_id:type_name -> NYT.NProto.TGuid
	17, // 6: NYT.NRpc.NProto.TResponseHeader.error:type_name -> NYT.NProto.TError
	16, // 7: NYT.NRpc.NProto.TRequestCancelationHeader.request_id:type_name -> NYT.NProto.TGuid
	16, // 8: NYT.NRpc.NProto.TRequestCancelationHeader.realm_id:type_name -> NYT.NProto.TGuid
	16, // 9: NYT.NRpc.NProto.TStreamingPayloadHeader.request_id:type_name -> NYT.NProto.TGuid
	16, // 10: NYT.NRpc.NProto.TStreamingPayloadHeader.realm_id:type_name -> NYT.NProto.TGuid
	16, // 11: NYT.NRpc.NProto.TStreamingFeedbackHeader.request_id:type_name -> NYT.NProto.TGuid
	16, // 12: NYT.NRpc.NProto.TStreamingFeedbackHeader.realm_id:type_name -> NYT.NProto.TGuid
	0,  // 13: NYT.NRpc.NProto.TWriterFeedback.feedback:type_name -> NYT.NRpc.NProto.EWriterFeedback
	2,  // 14: NYT.NRpc.NProto.TRequestHeader.tracing_ext:extendee -> NYT.NRpc.NProto.TRequestHeader
	2,  // 15: NYT.NRpc.NProto.TBalancingExt.balancing_ext:extendee -> NYT.NRpc.NProto.TRequestHeader
	2,  // 16: NYT.NRpc.NProto.TCredentialsExt.credentials_ext:extendee -> NYT.NRpc.NProto.TRequestHeader
	2,  // 17: NYT.NRpc.NProto.TCustomMetadataExt.custom_metadata_ext:extendee -> NYT.NRpc.NProto.TRequestHeader
	2,  // 18: NYT.NRpc.NProto.TMultiproxyTargetExt.multiproxy_target_ext:extendee -> NYT.NRpc.NProto.TRequestHeader
	7,  // 19: NYT.NRpc.NProto.THedgingExt.hedging_ext:extendee -> NYT.NRpc.NProto.TResponseHeader
	18, // 20: NYT.NRpc.NProto.TRequestHeader.tracing_ext:type_name -> NYT.NTracing.NProto.TTracingExt
	3,  // 21: NYT.NRpc.NProto.TBalancingExt.balancing_ext:type_name -> NYT.NRpc.NProto.TBalancingExt
	4,  // 22: NYT.NRpc.NProto.TCredentialsExt.credentials_ext:type_name -> NYT.NRpc.NProto.TCredentialsExt
	5,  // 23: NYT.NRpc.NProto.TCustomMetadataExt.custom_metadata_ext:type_name -> NYT.NRpc.NProto.TCustomMetadataExt
	6,  // 24: NYT.NRpc.NProto.TMultiproxyTargetExt.multiproxy_target_ext:type_name -> NYT.NRpc.NProto.TMultiproxyTargetExt
	8,  // 25: NYT.NRpc.NProto.THedgingExt.hedging_ext:type_name -> NYT.NRpc.NProto.THedgingExt
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	20, // [20:26] is the sub-list for extension type_name
	14, // [14:20] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_init() }
func file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_init() {
	if File_yt_yt_proto_yt_core_rpc_proto_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStreamingParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBalancingExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCredentialsExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCustomMetadataExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMultiproxyTargetExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*THedgingExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRequestCancelationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStreamingPayloadHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStreamingFeedbackHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDiscover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDiscover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TWriterFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_goTypes,
		DependencyIndexes: file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_depIdxs,
		EnumInfos:         file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_enumTypes,
		MessageInfos:      file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_msgTypes,
		ExtensionInfos:    file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_extTypes,
	}.Build()
	File_yt_yt_proto_yt_core_rpc_proto_rpc_proto = out.File
	file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_rawDesc = nil
	file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_goTypes = nil
	file_yt_yt_proto_yt_core_rpc_proto_rpc_proto_depIdxs = nil
}
