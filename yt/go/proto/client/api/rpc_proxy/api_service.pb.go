// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.5
// source: yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.proto

package rpc_proxy

import (
	chaos_client "go.ytsaurus.tech/yt/go/proto/client/chaos_client"
	chunk_client "go.ytsaurus.tech/yt/go/proto/client/chunk_client"
	hive "go.ytsaurus.tech/yt/go/proto/client/hive"
	scheduler "go.ytsaurus.tech/yt/go/proto/client/scheduler"
	table_client "go.ytsaurus.tech/yt/go/proto/client/table_client"
	tablet_client "go.ytsaurus.tech/yt/go/proto/client/tablet_client"
	misc "go.ytsaurus.tech/yt/go/proto/core/misc"
	ytree "go.ytsaurus.tech/yt/go/proto/core/ytree"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ETransactionType int32

const (
	ETransactionType_TT_MASTER ETransactionType = 0
	ETransactionType_TT_TABLET ETransactionType = 1
)

// Enum value maps for ETransactionType.
var (
	ETransactionType_name = map[int32]string{
		0: "TT_MASTER",
		1: "TT_TABLET",
	}
	ETransactionType_value = map[string]int32{
		"TT_MASTER": 0,
		"TT_TABLET": 1,
	}
)

func (x ETransactionType) Enum() *ETransactionType {
	p := new(ETransactionType)
	*p = x
	return p
}

func (x ETransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[0].Descriptor()
}

func (ETransactionType) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[0]
}

func (x ETransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETransactionType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETransactionType(num)
	return nil
}

// Deprecated: Use ETransactionType.Descriptor instead.
func (ETransactionType) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{0}
}

type ERowModificationType int32

const (
	ERowModificationType_RMT_WRITE  ERowModificationType = 0
	ERowModificationType_RMT_DELETE ERowModificationType = 1
	ERowModificationType_RMT_MODIFY ERowModificationType = 3
)

// Enum value maps for ERowModificationType.
var (
	ERowModificationType_name = map[int32]string{
		0: "RMT_WRITE",
		1: "RMT_DELETE",
		3: "RMT_MODIFY",
	}
	ERowModificationType_value = map[string]int32{
		"RMT_WRITE":  0,
		"RMT_DELETE": 1,
		"RMT_MODIFY": 3,
	}
)

func (x ERowModificationType) Enum() *ERowModificationType {
	p := new(ERowModificationType)
	*p = x
	return p
}

func (x ERowModificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERowModificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[1].Descriptor()
}

func (ERowModificationType) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[1]
}

func (x ERowModificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERowModificationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERowModificationType(num)
	return nil
}

// Deprecated: Use ERowModificationType.Descriptor instead.
func (ERowModificationType) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{1}
}

type EAtomicity int32

const (
	EAtomicity_A_FULL EAtomicity = 0
	EAtomicity_A_NONE EAtomicity = 1
)

// Enum value maps for EAtomicity.
var (
	EAtomicity_name = map[int32]string{
		0: "A_FULL",
		1: "A_NONE",
	}
	EAtomicity_value = map[string]int32{
		"A_FULL": 0,
		"A_NONE": 1,
	}
)

func (x EAtomicity) Enum() *EAtomicity {
	p := new(EAtomicity)
	*p = x
	return p
}

func (x EAtomicity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAtomicity) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[2].Descriptor()
}

func (EAtomicity) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[2]
}

func (x EAtomicity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EAtomicity) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EAtomicity(num)
	return nil
}

// Deprecated: Use EAtomicity.Descriptor instead.
func (EAtomicity) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{2}
}

type EDurability int32

const (
	EDurability_D_SYNC  EDurability = 0
	EDurability_D_ASYNC EDurability = 1
)

// Enum value maps for EDurability.
var (
	EDurability_name = map[int32]string{
		0: "D_SYNC",
		1: "D_ASYNC",
	}
	EDurability_value = map[string]int32{
		"D_SYNC":  0,
		"D_ASYNC": 1,
	}
)

func (x EDurability) Enum() *EDurability {
	p := new(EDurability)
	*p = x
	return p
}

func (x EDurability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDurability) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[3].Descriptor()
}

func (EDurability) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[3]
}

func (x EDurability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EDurability) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EDurability(num)
	return nil
}

// Deprecated: Use EDurability.Descriptor instead.
func (EDurability) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{3}
}

type ETableReplicaMode int32

const (
	ETableReplicaMode_TRM_SYNC          ETableReplicaMode = 0
	ETableReplicaMode_TRM_ASYNC         ETableReplicaMode = 1
	ETableReplicaMode_TRM_ASYNC_TO_SYNC ETableReplicaMode = 2
	ETableReplicaMode_TRM_SYNC_TO_SYNC  ETableReplicaMode = 3
)

// Enum value maps for ETableReplicaMode.
var (
	ETableReplicaMode_name = map[int32]string{
		0: "TRM_SYNC",
		1: "TRM_ASYNC",
		2: "TRM_ASYNC_TO_SYNC",
		3: "TRM_SYNC_TO_SYNC",
	}
	ETableReplicaMode_value = map[string]int32{
		"TRM_SYNC":          0,
		"TRM_ASYNC":         1,
		"TRM_ASYNC_TO_SYNC": 2,
		"TRM_SYNC_TO_SYNC":  3,
	}
)

func (x ETableReplicaMode) Enum() *ETableReplicaMode {
	p := new(ETableReplicaMode)
	*p = x
	return p
}

func (x ETableReplicaMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETableReplicaMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[4].Descriptor()
}

func (ETableReplicaMode) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[4]
}

func (x ETableReplicaMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETableReplicaMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETableReplicaMode(num)
	return nil
}

// Deprecated: Use ETableReplicaMode.Descriptor instead.
func (ETableReplicaMode) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{4}
}

type EReplicaConsistency int32

const (
	EReplicaConsistency_RRM_NONE EReplicaConsistency = 0
	EReplicaConsistency_RRM_SYNC EReplicaConsistency = 1
)

// Enum value maps for EReplicaConsistency.
var (
	EReplicaConsistency_name = map[int32]string{
		0: "RRM_NONE",
		1: "RRM_SYNC",
	}
	EReplicaConsistency_value = map[string]int32{
		"RRM_NONE": 0,
		"RRM_SYNC": 1,
	}
)

func (x EReplicaConsistency) Enum() *EReplicaConsistency {
	p := new(EReplicaConsistency)
	*p = x
	return p
}

func (x EReplicaConsistency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EReplicaConsistency) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[5].Descriptor()
}

func (EReplicaConsistency) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[5]
}

func (x EReplicaConsistency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EReplicaConsistency) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EReplicaConsistency(num)
	return nil
}

// Deprecated: Use EReplicaConsistency.Descriptor instead.
func (EReplicaConsistency) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{5}
}

type EMasterReadKind int32

const (
	EMasterReadKind_MRK_LEADER       EMasterReadKind = 0
	EMasterReadKind_MRK_FOLLOWER     EMasterReadKind = 1
	EMasterReadKind_MRK_CACHE        EMasterReadKind = 2
	EMasterReadKind_MRK_MASTER_CACHE EMasterReadKind = 3
)

// Enum value maps for EMasterReadKind.
var (
	EMasterReadKind_name = map[int32]string{
		0: "MRK_LEADER",
		1: "MRK_FOLLOWER",
		2: "MRK_CACHE",
		3: "MRK_MASTER_CACHE",
	}
	EMasterReadKind_value = map[string]int32{
		"MRK_LEADER":       0,
		"MRK_FOLLOWER":     1,
		"MRK_CACHE":        2,
		"MRK_MASTER_CACHE": 3,
	}
)

func (x EMasterReadKind) Enum() *EMasterReadKind {
	p := new(EMasterReadKind)
	*p = x
	return p
}

func (x EMasterReadKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMasterReadKind) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[6].Descriptor()
}

func (EMasterReadKind) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[6]
}

func (x EMasterReadKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMasterReadKind) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMasterReadKind(num)
	return nil
}

// Deprecated: Use EMasterReadKind.Descriptor instead.
func (EMasterReadKind) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{6}
}

type ERowsetKind int32

const (
	ERowsetKind_RK_UNVERSIONED ERowsetKind = 1
	ERowsetKind_RK_VERSIONED   ERowsetKind = 2
)

// Enum value maps for ERowsetKind.
var (
	ERowsetKind_name = map[int32]string{
		1: "RK_UNVERSIONED",
		2: "RK_VERSIONED",
	}
	ERowsetKind_value = map[string]int32{
		"RK_UNVERSIONED": 1,
		"RK_VERSIONED":   2,
	}
)

func (x ERowsetKind) Enum() *ERowsetKind {
	p := new(ERowsetKind)
	*p = x
	return p
}

func (x ERowsetKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERowsetKind) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[7].Descriptor()
}

func (ERowsetKind) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[7]
}

func (x ERowsetKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERowsetKind) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERowsetKind(num)
	return nil
}

// Deprecated: Use ERowsetKind.Descriptor instead.
func (ERowsetKind) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{7}
}

type ERowsetFormat int32

const (
	ERowsetFormat_RF_YT_WIRE ERowsetFormat = 0
	ERowsetFormat_RF_ARROW   ERowsetFormat = 1
	ERowsetFormat_RF_FORMAT  ERowsetFormat = 2
)

// Enum value maps for ERowsetFormat.
var (
	ERowsetFormat_name = map[int32]string{
		0: "RF_YT_WIRE",
		1: "RF_ARROW",
		2: "RF_FORMAT",
	}
	ERowsetFormat_value = map[string]int32{
		"RF_YT_WIRE": 0,
		"RF_ARROW":   1,
		"RF_FORMAT":  2,
	}
)

func (x ERowsetFormat) Enum() *ERowsetFormat {
	p := new(ERowsetFormat)
	*p = x
	return p
}

func (x ERowsetFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERowsetFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[8].Descriptor()
}

func (ERowsetFormat) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[8]
}

func (x ERowsetFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERowsetFormat) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERowsetFormat(num)
	return nil
}

// Deprecated: Use ERowsetFormat.Descriptor instead.
func (ERowsetFormat) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{8}
}

type ETabletReadKind int32

const (
	ETabletReadKind_TRK_LEADER             ETabletReadKind = 0
	ETabletReadKind_TRK_FOLLOWER           ETabletReadKind = 1
	ETabletReadKind_TRK_LEADER_OR_FOLLOWER ETabletReadKind = 2
)

// Enum value maps for ETabletReadKind.
var (
	ETabletReadKind_name = map[int32]string{
		0: "TRK_LEADER",
		1: "TRK_FOLLOWER",
		2: "TRK_LEADER_OR_FOLLOWER",
	}
	ETabletReadKind_value = map[string]int32{
		"TRK_LEADER":             0,
		"TRK_FOLLOWER":           1,
		"TRK_LEADER_OR_FOLLOWER": 2,
	}
)

func (x ETabletReadKind) Enum() *ETabletReadKind {
	p := new(ETabletReadKind)
	*p = x
	return p
}

func (x ETabletReadKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETabletReadKind) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[9].Descriptor()
}

func (ETabletReadKind) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[9]
}

func (x ETabletReadKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETabletReadKind) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETabletReadKind(num)
	return nil
}

// Deprecated: Use ETabletReadKind.Descriptor instead.
func (ETabletReadKind) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{9}
}

type EOperationType int32

const (
	EOperationType_OT_UNKNOWN     EOperationType = 100
	EOperationType_OT_MAP         EOperationType = 0
	EOperationType_OT_MERGE       EOperationType = 1
	EOperationType_OT_ERASE       EOperationType = 2
	EOperationType_OT_SORT        EOperationType = 3
	EOperationType_OT_REDUCE      EOperationType = 4
	EOperationType_OT_MAP_REDUCE  EOperationType = 5
	EOperationType_OT_REMOTE_COPY EOperationType = 6
	EOperationType_OT_JOIN_REDUCE EOperationType = 7
	EOperationType_OT_VANILLA     EOperationType = 8
)

// Enum value maps for EOperationType.
var (
	EOperationType_name = map[int32]string{
		100: "OT_UNKNOWN",
		0:   "OT_MAP",
		1:   "OT_MERGE",
		2:   "OT_ERASE",
		3:   "OT_SORT",
		4:   "OT_REDUCE",
		5:   "OT_MAP_REDUCE",
		6:   "OT_REMOTE_COPY",
		7:   "OT_JOIN_REDUCE",
		8:   "OT_VANILLA",
	}
	EOperationType_value = map[string]int32{
		"OT_UNKNOWN":     100,
		"OT_MAP":         0,
		"OT_MERGE":       1,
		"OT_ERASE":       2,
		"OT_SORT":        3,
		"OT_REDUCE":      4,
		"OT_MAP_REDUCE":  5,
		"OT_REMOTE_COPY": 6,
		"OT_JOIN_REDUCE": 7,
		"OT_VANILLA":     8,
	}
)

func (x EOperationType) Enum() *EOperationType {
	p := new(EOperationType)
	*p = x
	return p
}

func (x EOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[10].Descriptor()
}

func (EOperationType) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[10]
}

func (x EOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EOperationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EOperationType(num)
	return nil
}

// Deprecated: Use EOperationType.Descriptor instead.
func (EOperationType) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{10}
}

type EOperationState int32

const (
	EOperationState_OS_UNKNOWN             EOperationState = 100
	EOperationState_OS_NONE                EOperationState = 0
	EOperationState_OS_STARTING            EOperationState = 1
	EOperationState_OS_ORPHANED            EOperationState = 2
	EOperationState_OS_WAITING_FOR_AGENT   EOperationState = 3
	EOperationState_OS_INITIALIZING        EOperationState = 4
	EOperationState_OS_PREPARING           EOperationState = 5
	EOperationState_OS_MATERIALIZING       EOperationState = 6
	EOperationState_OS_REVIVING            EOperationState = 7
	EOperationState_OS_REVIVING_JOBS       EOperationState = 8
	EOperationState_OS_PENDING             EOperationState = 9
	EOperationState_OS_RUNNING             EOperationState = 10
	EOperationState_OS_COMPLETING          EOperationState = 11
	EOperationState_OS_COMPLETED           EOperationState = 12
	EOperationState_OS_ABORTING            EOperationState = 13
	EOperationState_OS_ABORTED             EOperationState = 14
	EOperationState_OS_FAILING             EOperationState = 15
	EOperationState_OS_FAILED              EOperationState = 16
	EOperationState_OS_REVIVE_INITIALIZING EOperationState = 17
)

// Enum value maps for EOperationState.
var (
	EOperationState_name = map[int32]string{
		100: "OS_UNKNOWN",
		0:   "OS_NONE",
		1:   "OS_STARTING",
		2:   "OS_ORPHANED",
		3:   "OS_WAITING_FOR_AGENT",
		4:   "OS_INITIALIZING",
		5:   "OS_PREPARING",
		6:   "OS_MATERIALIZING",
		7:   "OS_REVIVING",
		8:   "OS_REVIVING_JOBS",
		9:   "OS_PENDING",
		10:  "OS_RUNNING",
		11:  "OS_COMPLETING",
		12:  "OS_COMPLETED",
		13:  "OS_ABORTING",
		14:  "OS_ABORTED",
		15:  "OS_FAILING",
		16:  "OS_FAILED",
		17:  "OS_REVIVE_INITIALIZING",
	}
	EOperationState_value = map[string]int32{
		"OS_UNKNOWN":             100,
		"OS_NONE":                0,
		"OS_STARTING":            1,
		"OS_ORPHANED":            2,
		"OS_WAITING_FOR_AGENT":   3,
		"OS_INITIALIZING":        4,
		"OS_PREPARING":           5,
		"OS_MATERIALIZING":       6,
		"OS_REVIVING":            7,
		"OS_REVIVING_JOBS":       8,
		"OS_PENDING":             9,
		"OS_RUNNING":             10,
		"OS_COMPLETING":          11,
		"OS_COMPLETED":           12,
		"OS_ABORTING":            13,
		"OS_ABORTED":             14,
		"OS_FAILING":             15,
		"OS_FAILED":              16,
		"OS_REVIVE_INITIALIZING": 17,
	}
)

func (x EOperationState) Enum() *EOperationState {
	p := new(EOperationState)
	*p = x
	return p
}

func (x EOperationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOperationState) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[11].Descriptor()
}

func (EOperationState) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[11]
}

func (x EOperationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EOperationState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EOperationState(num)
	return nil
}

// Deprecated: Use EOperationState.Descriptor instead.
func (EOperationState) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{11}
}

type EOperationSortDirection int32

const (
	EOperationSortDirection_OSD_NONE   EOperationSortDirection = 0
	EOperationSortDirection_OSD_PAST   EOperationSortDirection = 1
	EOperationSortDirection_OSD_FUTURE EOperationSortDirection = 2
)

// Enum value maps for EOperationSortDirection.
var (
	EOperationSortDirection_name = map[int32]string{
		0: "OSD_NONE",
		1: "OSD_PAST",
		2: "OSD_FUTURE",
	}
	EOperationSortDirection_value = map[string]int32{
		"OSD_NONE":   0,
		"OSD_PAST":   1,
		"OSD_FUTURE": 2,
	}
)

func (x EOperationSortDirection) Enum() *EOperationSortDirection {
	p := new(EOperationSortDirection)
	*p = x
	return p
}

func (x EOperationSortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOperationSortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[12].Descriptor()
}

func (EOperationSortDirection) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[12]
}

func (x EOperationSortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EOperationSortDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EOperationSortDirection(num)
	return nil
}

// Deprecated: Use EOperationSortDirection.Descriptor instead.
func (EOperationSortDirection) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{12}
}

type EJobType int32

const (
	EJobType_JT_UNKNOWN           EJobType = 1000
	EJobType_JT_MAP               EJobType = 1
	EJobType_JT_PARTITION_MAP     EJobType = 2
	EJobType_JT_SORTED_MERGE      EJobType = 3
	EJobType_JT_ORDERED_MERGE     EJobType = 4
	EJobType_JT_UNORDERED_MERGE   EJobType = 5
	EJobType_JT_PARTITION         EJobType = 6
	EJobType_JT_SIMPLE_SORT       EJobType = 7
	EJobType_JT_FINAL_SORT        EJobType = 8
	EJobType_JT_SORTED_REDUCE     EJobType = 9
	EJobType_JT_PARTITION_REDUCE  EJobType = 10
	EJobType_JT_REDUCE_COMBINER   EJobType = 11
	EJobType_JT_REMOTE_COPY       EJobType = 12
	EJobType_JT_INTERMEDIATE_SORT EJobType = 13
	EJobType_JT_ORDERED_MAP       EJobType = 14
	EJobType_JT_JOIN_REDUCE       EJobType = 15
	EJobType_JT_VANILLA           EJobType = 16
	EJobType_JT_SHALLOW_MERGE     EJobType = 17
	EJobType_JT_SCHEDULER_UNKNOWN EJobType = 98
	// Master jobs
	EJobType_JT_REPLICATE_CHUNK   EJobType = 100
	EJobType_JT_REMOVE_CHUNK      EJobType = 101
	EJobType_JT_REPAIR_CHUNK      EJobType = 102
	EJobType_JT_SEAL_CHUNK        EJobType = 103
	EJobType_JT_MERGE_CHUNKS      EJobType = 104
	EJobType_JT_AUTOTOMIZE_CHUNK  EJobType = 105
	EJobType_JT_REINCARNATE_CHUNK EJobType = 106
)

// Enum value maps for EJobType.
var (
	EJobType_name = map[int32]string{
		1000: "JT_UNKNOWN",
		1:    "JT_MAP",
		2:    "JT_PARTITION_MAP",
		3:    "JT_SORTED_MERGE",
		4:    "JT_ORDERED_MERGE",
		5:    "JT_UNORDERED_MERGE",
		6:    "JT_PARTITION",
		7:    "JT_SIMPLE_SORT",
		8:    "JT_FINAL_SORT",
		9:    "JT_SORTED_REDUCE",
		10:   "JT_PARTITION_REDUCE",
		11:   "JT_REDUCE_COMBINER",
		12:   "JT_REMOTE_COPY",
		13:   "JT_INTERMEDIATE_SORT",
		14:   "JT_ORDERED_MAP",
		15:   "JT_JOIN_REDUCE",
		16:   "JT_VANILLA",
		17:   "JT_SHALLOW_MERGE",
		98:   "JT_SCHEDULER_UNKNOWN",
		100:  "JT_REPLICATE_CHUNK",
		101:  "JT_REMOVE_CHUNK",
		102:  "JT_REPAIR_CHUNK",
		103:  "JT_SEAL_CHUNK",
		104:  "JT_MERGE_CHUNKS",
		105:  "JT_AUTOTOMIZE_CHUNK",
		106:  "JT_REINCARNATE_CHUNK",
	}
	EJobType_value = map[string]int32{
		"JT_UNKNOWN":           1000,
		"JT_MAP":               1,
		"JT_PARTITION_MAP":     2,
		"JT_SORTED_MERGE":      3,
		"JT_ORDERED_MERGE":     4,
		"JT_UNORDERED_MERGE":   5,
		"JT_PARTITION":         6,
		"JT_SIMPLE_SORT":       7,
		"JT_FINAL_SORT":        8,
		"JT_SORTED_REDUCE":     9,
		"JT_PARTITION_REDUCE":  10,
		"JT_REDUCE_COMBINER":   11,
		"JT_REMOTE_COPY":       12,
		"JT_INTERMEDIATE_SORT": 13,
		"JT_ORDERED_MAP":       14,
		"JT_JOIN_REDUCE":       15,
		"JT_VANILLA":           16,
		"JT_SHALLOW_MERGE":     17,
		"JT_SCHEDULER_UNKNOWN": 98,
		"JT_REPLICATE_CHUNK":   100,
		"JT_REMOVE_CHUNK":      101,
		"JT_REPAIR_CHUNK":      102,
		"JT_SEAL_CHUNK":        103,
		"JT_MERGE_CHUNKS":      104,
		"JT_AUTOTOMIZE_CHUNK":  105,
		"JT_REINCARNATE_CHUNK": 106,
	}
)

func (x EJobType) Enum() *EJobType {
	p := new(EJobType)
	*p = x
	return p
}

func (x EJobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJobType) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[13].Descriptor()
}

func (EJobType) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[13]
}

func (x EJobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJobType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJobType(num)
	return nil
}

// Deprecated: Use EJobType.Descriptor instead.
func (EJobType) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{13}
}

type EJobState int32

const (
	EJobState_JS_UNKNOWN   EJobState = 100
	EJobState_JS_WAITING   EJobState = 0
	EJobState_JS_RUNNING   EJobState = 1
	EJobState_JS_ABORTING  EJobState = 2
	EJobState_JS_COMPLETED EJobState = 3
	EJobState_JS_FAILED    EJobState = 4
	EJobState_JS_ABORTED   EJobState = 5
	EJobState_JS_LOST      EJobState = 7
	EJobState_JS_NONE      EJobState = 8
)

// Enum value maps for EJobState.
var (
	EJobState_name = map[int32]string{
		100: "JS_UNKNOWN",
		0:   "JS_WAITING",
		1:   "JS_RUNNING",
		2:   "JS_ABORTING",
		3:   "JS_COMPLETED",
		4:   "JS_FAILED",
		5:   "JS_ABORTED",
		7:   "JS_LOST",
		8:   "JS_NONE",
	}
	EJobState_value = map[string]int32{
		"JS_UNKNOWN":   100,
		"JS_WAITING":   0,
		"JS_RUNNING":   1,
		"JS_ABORTING":  2,
		"JS_COMPLETED": 3,
		"JS_FAILED":    4,
		"JS_ABORTED":   5,
		"JS_LOST":      7,
		"JS_NONE":      8,
	}
)

func (x EJobState) Enum() *EJobState {
	p := new(EJobState)
	*p = x
	return p
}

func (x EJobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJobState) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[14].Descriptor()
}

func (EJobState) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[14]
}

func (x EJobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJobState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJobState(num)
	return nil
}

// Deprecated: Use EJobState.Descriptor instead.
func (EJobState) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{14}
}

type EJobSortField int32

const (
	EJobSortField_JSF_NONE        EJobSortField = 0
	EJobSortField_JSF_TYPE        EJobSortField = 1
	EJobSortField_JSF_STATE       EJobSortField = 2
	EJobSortField_JSF_START_TIME  EJobSortField = 3
	EJobSortField_JSF_FINISH_TIME EJobSortField = 4
	EJobSortField_JSF_ADDRESS     EJobSortField = 5
	EJobSortField_JSF_DURATION    EJobSortField = 6
	EJobSortField_JSF_PROGRESS    EJobSortField = 7
	EJobSortField_JSF_ID          EJobSortField = 8
	EJobSortField_JSF_TASK_NAME   EJobSortField = 9
)

// Enum value maps for EJobSortField.
var (
	EJobSortField_name = map[int32]string{
		0: "JSF_NONE",
		1: "JSF_TYPE",
		2: "JSF_STATE",
		3: "JSF_START_TIME",
		4: "JSF_FINISH_TIME",
		5: "JSF_ADDRESS",
		6: "JSF_DURATION",
		7: "JSF_PROGRESS",
		8: "JSF_ID",
		9: "JSF_TASK_NAME",
	}
	EJobSortField_value = map[string]int32{
		"JSF_NONE":        0,
		"JSF_TYPE":        1,
		"JSF_STATE":       2,
		"JSF_START_TIME":  3,
		"JSF_FINISH_TIME": 4,
		"JSF_ADDRESS":     5,
		"JSF_DURATION":    6,
		"JSF_PROGRESS":    7,
		"JSF_ID":          8,
		"JSF_TASK_NAME":   9,
	}
)

func (x EJobSortField) Enum() *EJobSortField {
	p := new(EJobSortField)
	*p = x
	return p
}

func (x EJobSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJobSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[15].Descriptor()
}

func (EJobSortField) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[15]
}

func (x EJobSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJobSortField) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJobSortField(num)
	return nil
}

// Deprecated: Use EJobSortField.Descriptor instead.
func (EJobSortField) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{15}
}

type EJobSortDirection int32

const (
	EJobSortDirection_JSD_ASCENDING  EJobSortDirection = 0
	EJobSortDirection_JSD_DESCENDING EJobSortDirection = 1
)

// Enum value maps for EJobSortDirection.
var (
	EJobSortDirection_name = map[int32]string{
		0: "JSD_ASCENDING",
		1: "JSD_DESCENDING",
	}
	EJobSortDirection_value = map[string]int32{
		"JSD_ASCENDING":  0,
		"JSD_DESCENDING": 1,
	}
)

func (x EJobSortDirection) Enum() *EJobSortDirection {
	p := new(EJobSortDirection)
	*p = x
	return p
}

func (x EJobSortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJobSortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[16].Descriptor()
}

func (EJobSortDirection) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[16]
}

func (x EJobSortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJobSortDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJobSortDirection(num)
	return nil
}

// Deprecated: Use EJobSortDirection.Descriptor instead.
func (EJobSortDirection) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{16}
}

type EDataSource int32

const (
	EDataSource_DS_ARCHIVE EDataSource = 0
	EDataSource_DS_RUNTIME EDataSource = 1
	EDataSource_DS_AUTO    EDataSource = 2
	EDataSource_DS_MANUAL  EDataSource = 3
)

// Enum value maps for EDataSource.
var (
	EDataSource_name = map[int32]string{
		0: "DS_ARCHIVE",
		1: "DS_RUNTIME",
		2: "DS_AUTO",
		3: "DS_MANUAL",
	}
	EDataSource_value = map[string]int32{
		"DS_ARCHIVE": 0,
		"DS_RUNTIME": 1,
		"DS_AUTO":    2,
		"DS_MANUAL":  3,
	}
)

func (x EDataSource) Enum() *EDataSource {
	p := new(EDataSource)
	*p = x
	return p
}

func (x EDataSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDataSource) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[17].Descriptor()
}

func (EDataSource) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[17]
}

func (x EDataSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EDataSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EDataSource(num)
	return nil
}

// Deprecated: Use EDataSource.Descriptor instead.
func (EDataSource) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{17}
}

type ESecurityAction int32

const (
	ESecurityAction_SA_UNDEFINED ESecurityAction = 0
	ESecurityAction_SA_ALLOW     ESecurityAction = 1
	ESecurityAction_SA_DENY      ESecurityAction = 2
)

// Enum value maps for ESecurityAction.
var (
	ESecurityAction_name = map[int32]string{
		0: "SA_UNDEFINED",
		1: "SA_ALLOW",
		2: "SA_DENY",
	}
	ESecurityAction_value = map[string]int32{
		"SA_UNDEFINED": 0,
		"SA_ALLOW":     1,
		"SA_DENY":      2,
	}
)

func (x ESecurityAction) Enum() *ESecurityAction {
	p := new(ESecurityAction)
	*p = x
	return p
}

func (x ESecurityAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESecurityAction) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[18].Descriptor()
}

func (ESecurityAction) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[18]
}

func (x ESecurityAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESecurityAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESecurityAction(num)
	return nil
}

// Deprecated: Use ESecurityAction.Descriptor instead.
func (ESecurityAction) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{18}
}

type EMultiplexingBand int32

const (
	EMultiplexingBand_MB_DEFAULT     EMultiplexingBand = 0
	EMultiplexingBand_MB_CONTROL     EMultiplexingBand = 1
	EMultiplexingBand_MB_HEAVY       EMultiplexingBand = 2
	EMultiplexingBand_MB_INTERACTIVE EMultiplexingBand = 3
)

// Enum value maps for EMultiplexingBand.
var (
	EMultiplexingBand_name = map[int32]string{
		0: "MB_DEFAULT",
		1: "MB_CONTROL",
		2: "MB_HEAVY",
		3: "MB_INTERACTIVE",
	}
	EMultiplexingBand_value = map[string]int32{
		"MB_DEFAULT":     0,
		"MB_CONTROL":     1,
		"MB_HEAVY":       2,
		"MB_INTERACTIVE": 3,
	}
)

func (x EMultiplexingBand) Enum() *EMultiplexingBand {
	p := new(EMultiplexingBand)
	*p = x
	return p
}

func (x EMultiplexingBand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMultiplexingBand) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[19].Descriptor()
}

func (EMultiplexingBand) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[19]
}

func (x EMultiplexingBand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMultiplexingBand) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMultiplexingBand(num)
	return nil
}

// Deprecated: Use EMultiplexingBand.Descriptor instead.
func (EMultiplexingBand) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{19}
}

type ETableSchemaModification int32

const (
	ETableSchemaModification_TSM_NONE                        ETableSchemaModification = 0
	ETableSchemaModification_TSM_UNVERSIONED_UPDATE          ETableSchemaModification = 1
	ETableSchemaModification_TSM_UNVERSIONED_UPDATE_UNSORTED ETableSchemaModification = 2
)

// Enum value maps for ETableSchemaModification.
var (
	ETableSchemaModification_name = map[int32]string{
		0: "TSM_NONE",
		1: "TSM_UNVERSIONED_UPDATE",
		2: "TSM_UNVERSIONED_UPDATE_UNSORTED",
	}
	ETableSchemaModification_value = map[string]int32{
		"TSM_NONE":                        0,
		"TSM_UNVERSIONED_UPDATE":          1,
		"TSM_UNVERSIONED_UPDATE_UNSORTED": 2,
	}
)

func (x ETableSchemaModification) Enum() *ETableSchemaModification {
	p := new(ETableSchemaModification)
	*p = x
	return p
}

func (x ETableSchemaModification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETableSchemaModification) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[20].Descriptor()
}

func (ETableSchemaModification) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[20]
}

func (x ETableSchemaModification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETableSchemaModification) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETableSchemaModification(num)
	return nil
}

// Deprecated: Use ETableSchemaModification.Descriptor instead.
func (ETableSchemaModification) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{20}
}

type EColumnarStatisticsFetcherMode int32

const (
	EColumnarStatisticsFetcherMode_CSFM_FROM_NODES  EColumnarStatisticsFetcherMode = 0
	EColumnarStatisticsFetcherMode_CSFM_FROM_MASTER EColumnarStatisticsFetcherMode = 1
	EColumnarStatisticsFetcherMode_CSFM_FALLBACK    EColumnarStatisticsFetcherMode = 2
)

// Enum value maps for EColumnarStatisticsFetcherMode.
var (
	EColumnarStatisticsFetcherMode_name = map[int32]string{
		0: "CSFM_FROM_NODES",
		1: "CSFM_FROM_MASTER",
		2: "CSFM_FALLBACK",
	}
	EColumnarStatisticsFetcherMode_value = map[string]int32{
		"CSFM_FROM_NODES":  0,
		"CSFM_FROM_MASTER": 1,
		"CSFM_FALLBACK":    2,
	}
)

func (x EColumnarStatisticsFetcherMode) Enum() *EColumnarStatisticsFetcherMode {
	p := new(EColumnarStatisticsFetcherMode)
	*p = x
	return p
}

func (x EColumnarStatisticsFetcherMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EColumnarStatisticsFetcherMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[21].Descriptor()
}

func (EColumnarStatisticsFetcherMode) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[21]
}

func (x EColumnarStatisticsFetcherMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EColumnarStatisticsFetcherMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EColumnarStatisticsFetcherMode(num)
	return nil
}

// Deprecated: Use EColumnarStatisticsFetcherMode.Descriptor instead.
func (EColumnarStatisticsFetcherMode) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{21}
}

type EPartitionTablesMode int32

const (
	EPartitionTablesMode_TPM_SORTED    EPartitionTablesMode = 0
	EPartitionTablesMode_TPM_ORDERED   EPartitionTablesMode = 1
	EPartitionTablesMode_TPM_UNORDERED EPartitionTablesMode = 2
)

// Enum value maps for EPartitionTablesMode.
var (
	EPartitionTablesMode_name = map[int32]string{
		0: "TPM_SORTED",
		1: "TPM_ORDERED",
		2: "TPM_UNORDERED",
	}
	EPartitionTablesMode_value = map[string]int32{
		"TPM_SORTED":    0,
		"TPM_ORDERED":   1,
		"TPM_UNORDERED": 2,
	}
)

func (x EPartitionTablesMode) Enum() *EPartitionTablesMode {
	p := new(EPartitionTablesMode)
	*p = x
	return p
}

func (x EPartitionTablesMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPartitionTablesMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[22].Descriptor()
}

func (EPartitionTablesMode) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[22]
}

func (x EPartitionTablesMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPartitionTablesMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPartitionTablesMode(num)
	return nil
}

// Deprecated: Use EPartitionTablesMode.Descriptor instead.
func (EPartitionTablesMode) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{22}
}

type EMaintenanceType int32

const (
	EMaintenanceType_MT_BAN                    EMaintenanceType = 1
	EMaintenanceType_MT_DECOMMISSION           EMaintenanceType = 2
	EMaintenanceType_MT_DISABLE_SCHEDULER_JOBS EMaintenanceType = 3
	EMaintenanceType_MT_DISABLE_WRITE_SESSIONS EMaintenanceType = 4
	EMaintenanceType_MT_DISABLE_TABLET_CELLS   EMaintenanceType = 5
	EMaintenanceType_MT_PENDING_RESTART        EMaintenanceType = 6
)

// Enum value maps for EMaintenanceType.
var (
	EMaintenanceType_name = map[int32]string{
		1: "MT_BAN",
		2: "MT_DECOMMISSION",
		3: "MT_DISABLE_SCHEDULER_JOBS",
		4: "MT_DISABLE_WRITE_SESSIONS",
		5: "MT_DISABLE_TABLET_CELLS",
		6: "MT_PENDING_RESTART",
	}
	EMaintenanceType_value = map[string]int32{
		"MT_BAN":                    1,
		"MT_DECOMMISSION":           2,
		"MT_DISABLE_SCHEDULER_JOBS": 3,
		"MT_DISABLE_WRITE_SESSIONS": 4,
		"MT_DISABLE_TABLET_CELLS":   5,
		"MT_PENDING_RESTART":        6,
	}
)

func (x EMaintenanceType) Enum() *EMaintenanceType {
	p := new(EMaintenanceType)
	*p = x
	return p
}

func (x EMaintenanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMaintenanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[23].Descriptor()
}

func (EMaintenanceType) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[23]
}

func (x EMaintenanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMaintenanceType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMaintenanceType(num)
	return nil
}

// Deprecated: Use EMaintenanceType.Descriptor instead.
func (EMaintenanceType) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{23}
}

type EMaintenanceComponent int32

const (
	EMaintenanceComponent_MC_CLUSTER_NODE EMaintenanceComponent = 1
	EMaintenanceComponent_MC_HTTP_PROXY   EMaintenanceComponent = 2
	EMaintenanceComponent_MC_RPC_PROXY    EMaintenanceComponent = 3
	EMaintenanceComponent_MC_HOST         EMaintenanceComponent = 4
)

// Enum value maps for EMaintenanceComponent.
var (
	EMaintenanceComponent_name = map[int32]string{
		1: "MC_CLUSTER_NODE",
		2: "MC_HTTP_PROXY",
		3: "MC_RPC_PROXY",
		4: "MC_HOST",
	}
	EMaintenanceComponent_value = map[string]int32{
		"MC_CLUSTER_NODE": 1,
		"MC_HTTP_PROXY":   2,
		"MC_RPC_PROXY":    3,
		"MC_HOST":         4,
	}
)

func (x EMaintenanceComponent) Enum() *EMaintenanceComponent {
	p := new(EMaintenanceComponent)
	*p = x
	return p
}

func (x EMaintenanceComponent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMaintenanceComponent) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[24].Descriptor()
}

func (EMaintenanceComponent) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[24]
}

func (x EMaintenanceComponent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMaintenanceComponent) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMaintenanceComponent(num)
	return nil
}

// Deprecated: Use EMaintenanceComponent.Descriptor instead.
func (EMaintenanceComponent) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{24}
}

type EJobSpecSource int32

const (
	EJobSpecSource_JSS_NODE    EJobSpecSource = 1
	EJobSpecSource_JSS_ARCHIVE EJobSpecSource = 2
	EJobSpecSource_JSS_AUTO    EJobSpecSource = 65535
)

// Enum value maps for EJobSpecSource.
var (
	EJobSpecSource_name = map[int32]string{
		1:     "JSS_NODE",
		2:     "JSS_ARCHIVE",
		65535: "JSS_AUTO",
	}
	EJobSpecSource_value = map[string]int32{
		"JSS_NODE":    1,
		"JSS_ARCHIVE": 2,
		"JSS_AUTO":    65535,
	}
)

func (x EJobSpecSource) Enum() *EJobSpecSource {
	p := new(EJobSpecSource)
	*p = x
	return p
}

func (x EJobSpecSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJobSpecSource) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[25].Descriptor()
}

func (EJobSpecSource) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[25]
}

func (x EJobSpecSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJobSpecSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJobSpecSource(num)
	return nil
}

// Deprecated: Use EJobSpecSource.Descriptor instead.
func (EJobSpecSource) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{25}
}

type EQueryEngine int32

const (
	EQueryEngine_QE_UNKNOWN EQueryEngine = 100
	EQueryEngine_QE_QL      EQueryEngine = 0
	EQueryEngine_QE_YQL     EQueryEngine = 1
	EQueryEngine_QE_CHYT    EQueryEngine = 2
	EQueryEngine_QE_MOCK    EQueryEngine = 3
	EQueryEngine_QE_SPYT    EQueryEngine = 4
)

// Enum value maps for EQueryEngine.
var (
	EQueryEngine_name = map[int32]string{
		100: "QE_UNKNOWN",
		0:   "QE_QL",
		1:   "QE_YQL",
		2:   "QE_CHYT",
		3:   "QE_MOCK",
		4:   "QE_SPYT",
	}
	EQueryEngine_value = map[string]int32{
		"QE_UNKNOWN": 100,
		"QE_QL":      0,
		"QE_YQL":     1,
		"QE_CHYT":    2,
		"QE_MOCK":    3,
		"QE_SPYT":    4,
	}
)

func (x EQueryEngine) Enum() *EQueryEngine {
	p := new(EQueryEngine)
	*p = x
	return p
}

func (x EQueryEngine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EQueryEngine) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[26].Descriptor()
}

func (EQueryEngine) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[26]
}

func (x EQueryEngine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EQueryEngine) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EQueryEngine(num)
	return nil
}

// Deprecated: Use EQueryEngine.Descriptor instead.
func (EQueryEngine) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{26}
}

type EContentType int32

const (
	EContentType_CT_RAW_INLINE_DATA EContentType = 0
	EContentType_CT_URL             EContentType = 1
)

// Enum value maps for EContentType.
var (
	EContentType_name = map[int32]string{
		0: "CT_RAW_INLINE_DATA",
		1: "CT_URL",
	}
	EContentType_value = map[string]int32{
		"CT_RAW_INLINE_DATA": 0,
		"CT_URL":             1,
	}
)

func (x EContentType) Enum() *EContentType {
	p := new(EContentType)
	*p = x
	return p
}

func (x EContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[27].Descriptor()
}

func (EContentType) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[27]
}

func (x EContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EContentType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EContentType(num)
	return nil
}

// Deprecated: Use EContentType.Descriptor instead.
func (EContentType) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{27}
}

type EQueryState int32

const (
	EQueryState_QS_UNKNOWN    EQueryState = 100
	EQueryState_QS_DRAFT      EQueryState = 0
	EQueryState_QS_PENDING    EQueryState = 1
	EQueryState_QS_RUNNING    EQueryState = 2
	EQueryState_QS_ABORTING   EQueryState = 3
	EQueryState_QS_ABORTED    EQueryState = 4
	EQueryState_QS_COMPLETING EQueryState = 5
	EQueryState_QS_COMPLETED  EQueryState = 6
	EQueryState_QS_FAILING    EQueryState = 7
	EQueryState_QS_FAILED     EQueryState = 8
)

// Enum value maps for EQueryState.
var (
	EQueryState_name = map[int32]string{
		100: "QS_UNKNOWN",
		0:   "QS_DRAFT",
		1:   "QS_PENDING",
		2:   "QS_RUNNING",
		3:   "QS_ABORTING",
		4:   "QS_ABORTED",
		5:   "QS_COMPLETING",
		6:   "QS_COMPLETED",
		7:   "QS_FAILING",
		8:   "QS_FAILED",
	}
	EQueryState_value = map[string]int32{
		"QS_UNKNOWN":    100,
		"QS_DRAFT":      0,
		"QS_PENDING":    1,
		"QS_RUNNING":    2,
		"QS_ABORTING":   3,
		"QS_ABORTED":    4,
		"QS_COMPLETING": 5,
		"QS_COMPLETED":  6,
		"QS_FAILING":    7,
		"QS_FAILED":     8,
	}
)

func (x EQueryState) Enum() *EQueryState {
	p := new(EQueryState)
	*p = x
	return p
}

func (x EQueryState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EQueryState) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[28].Descriptor()
}

func (EQueryState) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes[28]
}

func (x EQueryState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EQueryState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EQueryState(num)
	return nil
}

// Deprecated: Use EQueryState.Descriptor instead.
func (EQueryState) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{28}
}

// COMPAT(max42).
// A legacy analog of NYT.NYTree.NProto.TAttributeFilter.
// It is different in that universal filter is encoded via all = true
// rather than absence of filter at all.
// Modern clients serialize attribute filters using TAttributeFilter, so
// hopefully in a couple of years we will be able to drop support of it...
type TLegacyAttributeKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All  *bool    `protobuf:"varint,1,opt,name=all" json:"all,omitempty"`
	Keys []string `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
}

func (x *TLegacyAttributeKeys) Reset() {
	*x = TLegacyAttributeKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLegacyAttributeKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLegacyAttributeKeys) ProtoMessage() {}

func (x *TLegacyAttributeKeys) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLegacyAttributeKeys.ProtoReflect.Descriptor instead.
func (*TLegacyAttributeKeys) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{0}
}

func (x *TLegacyAttributeKeys) GetAll() bool {
	if x != nil && x.All != nil {
		return *x.All
	}
	return false
}

func (x *TLegacyAttributeKeys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Each rowset is decodeable solely with the descriptor, which encodes rowset kind,
// column names and column types. Actual data is passed via attachments in the wire
// protocol.
type TRowsetDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currently, there is only one version. This field is reserved for future changes.
	WireFormatVersion *int32 `protobuf:"varint,1,opt,name=wire_format_version,json=wireFormatVersion,def=1" json:"wire_format_version,omitempty"`
	// Specifies the kind of rows comprising the rowset.
	RowsetKind *ERowsetKind `protobuf:"varint,2,opt,name=rowset_kind,json=rowsetKind,enum=NYT.NApi.NRpcProxy.NProto.ERowsetKind,def=1" json:"rowset_kind,omitempty"`
	// Specifies the format of data representation.
	RowsetFormat *ERowsetFormat `protobuf:"varint,4,opt,name=rowset_format,json=rowsetFormat,enum=NYT.NApi.NRpcProxy.NProto.ERowsetFormat,def=0" json:"rowset_format,omitempty"`
	// Specifies column names.
	// COMPAT(babenko): also types.
	NameTableEntries []*TRowsetDescriptor_TNameTableEntry `protobuf:"bytes,3,rep,name=name_table_entries,json=nameTableEntries" json:"name_table_entries,omitempty"`
	// Specifies rowset schema.
	// Could be missing (in this case name table is always present).
	Schema *TTableSchema `protobuf:"bytes,5,opt,name=schema" json:"schema,omitempty"`
}

// Default values for TRowsetDescriptor fields.
const (
	Default_TRowsetDescriptor_WireFormatVersion = int32(1)
	Default_TRowsetDescriptor_RowsetKind        = ERowsetKind_RK_UNVERSIONED
	Default_TRowsetDescriptor_RowsetFormat      = ERowsetFormat_RF_YT_WIRE
)

func (x *TRowsetDescriptor) Reset() {
	*x = TRowsetDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRowsetDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRowsetDescriptor) ProtoMessage() {}

func (x *TRowsetDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRowsetDescriptor.ProtoReflect.Descriptor instead.
func (*TRowsetDescriptor) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{1}
}

func (x *TRowsetDescriptor) GetWireFormatVersion() int32 {
	if x != nil && x.WireFormatVersion != nil {
		return *x.WireFormatVersion
	}
	return Default_TRowsetDescriptor_WireFormatVersion
}

func (x *TRowsetDescriptor) GetRowsetKind() ERowsetKind {
	if x != nil && x.RowsetKind != nil {
		return *x.RowsetKind
	}
	return Default_TRowsetDescriptor_RowsetKind
}

func (x *TRowsetDescriptor) GetRowsetFormat() ERowsetFormat {
	if x != nil && x.RowsetFormat != nil {
		return *x.RowsetFormat
	}
	return Default_TRowsetDescriptor_RowsetFormat
}

func (x *TRowsetDescriptor) GetNameTableEntries() []*TRowsetDescriptor_TNameTableEntry {
	if x != nil {
		return x.NameTableEntries
	}
	return nil
}

func (x *TRowsetDescriptor) GetSchema() *TTableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

// Could be embedded into response attachment block sequence along with the actual data
// to indidate the progress of table reader/writer.
type TRowsetStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRowCount  *int64                        `protobuf:"varint,1,req,name=total_row_count,json=totalRowCount" json:"total_row_count,omitempty"`
	DataStatistics *chunk_client.TDataStatistics `protobuf:"bytes,2,req,name=data_statistics,json=dataStatistics" json:"data_statistics,omitempty"`
}

func (x *TRowsetStatistics) Reset() {
	*x = TRowsetStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRowsetStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRowsetStatistics) ProtoMessage() {}

func (x *TRowsetStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRowsetStatistics.ProtoReflect.Descriptor instead.
func (*TRowsetStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{2}
}

func (x *TRowsetStatistics) GetTotalRowCount() int64 {
	if x != nil && x.TotalRowCount != nil {
		return *x.TotalRowCount
	}
	return 0
}

func (x *TRowsetStatistics) GetDataStatistics() *chunk_client.TDataStatistics {
	if x != nil {
		return x.DataStatistics
	}
	return nil
}

type TReqStartTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *ETransactionType `protobuf:"varint,1,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.ETransactionType" json:"type,omitempty"`
	Timeout *int64            `protobuf:"varint,2,opt,name=timeout" json:"timeout,omitempty"`
	// If not null then the transaction must use this externally provided id.
	// Only applicable to tablet transactions.
	Id       *misc.TGuid `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	ParentId *misc.TGuid `protobuf:"bytes,4,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	// COMPAT(kiselyovp) next option is unused and should get removed
	AutoAbort                  *bool                                            `protobuf:"varint,5,opt,name=auto_abort,json=autoAbort,def=0" json:"auto_abort,omitempty"`
	Sticky                     *bool                                            `protobuf:"varint,6,opt,name=sticky,def=0" json:"sticky,omitempty"`
	Ping                       *bool                                            `protobuf:"varint,7,opt,name=ping,def=1" json:"ping,omitempty"`
	PingAncestors              *bool                                            `protobuf:"varint,8,opt,name=ping_ancestors,json=pingAncestors,def=1" json:"ping_ancestors,omitempty"`
	Atomicity                  *EAtomicity                                      `protobuf:"varint,9,opt,name=atomicity,enum=NYT.NApi.NRpcProxy.NProto.EAtomicity,def=0" json:"atomicity,omitempty"`
	Durability                 *EDurability                                     `protobuf:"varint,10,opt,name=durability,enum=NYT.NApi.NRpcProxy.NProto.EDurability,def=0" json:"durability,omitempty"`
	Attributes                 *ytree.TAttributeDictionary                      `protobuf:"bytes,11,opt,name=attributes" json:"attributes,omitempty"`
	Deadline                   *uint64                                          `protobuf:"varint,12,opt,name=deadline" json:"deadline,omitempty"`
	PrerequisiteTransactionIds []*misc.TGuid                                    `protobuf:"bytes,13,rep,name=prerequisite_transaction_ids,json=prerequisiteTransactionIds" json:"prerequisite_transaction_ids,omitempty"`
	StartTimestamp             *uint64                                          `protobuf:"varint,14,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	ReplicateToMasterCellTags  *TReqStartTransaction_TReplicateToMasterCellTags `protobuf:"bytes,15,opt,name=replicate_to_master_cell_tags,json=replicateToMasterCellTags" json:"replicate_to_master_cell_tags,omitempty"`
	MutatingOptions            *TMutatingOptions                                `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqStartTransaction fields.
const (
	Default_TReqStartTransaction_AutoAbort     = bool(false)
	Default_TReqStartTransaction_Sticky        = bool(false)
	Default_TReqStartTransaction_Ping          = bool(true)
	Default_TReqStartTransaction_PingAncestors = bool(true)
	Default_TReqStartTransaction_Atomicity     = EAtomicity_A_FULL
	Default_TReqStartTransaction_Durability    = EDurability_D_SYNC
)

func (x *TReqStartTransaction) Reset() {
	*x = TReqStartTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartTransaction) ProtoMessage() {}

func (x *TReqStartTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartTransaction.ProtoReflect.Descriptor instead.
func (*TReqStartTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{3}
}

func (x *TReqStartTransaction) GetType() ETransactionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ETransactionType_TT_MASTER
}

func (x *TReqStartTransaction) GetTimeout() int64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *TReqStartTransaction) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TReqStartTransaction) GetParentId() *misc.TGuid {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *TReqStartTransaction) GetAutoAbort() bool {
	if x != nil && x.AutoAbort != nil {
		return *x.AutoAbort
	}
	return Default_TReqStartTransaction_AutoAbort
}

func (x *TReqStartTransaction) GetSticky() bool {
	if x != nil && x.Sticky != nil {
		return *x.Sticky
	}
	return Default_TReqStartTransaction_Sticky
}

func (x *TReqStartTransaction) GetPing() bool {
	if x != nil && x.Ping != nil {
		return *x.Ping
	}
	return Default_TReqStartTransaction_Ping
}

func (x *TReqStartTransaction) GetPingAncestors() bool {
	if x != nil && x.PingAncestors != nil {
		return *x.PingAncestors
	}
	return Default_TReqStartTransaction_PingAncestors
}

func (x *TReqStartTransaction) GetAtomicity() EAtomicity {
	if x != nil && x.Atomicity != nil {
		return *x.Atomicity
	}
	return Default_TReqStartTransaction_Atomicity
}

func (x *TReqStartTransaction) GetDurability() EDurability {
	if x != nil && x.Durability != nil {
		return *x.Durability
	}
	return Default_TReqStartTransaction_Durability
}

func (x *TReqStartTransaction) GetAttributes() *ytree.TAttributeDictionary {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqStartTransaction) GetDeadline() uint64 {
	if x != nil && x.Deadline != nil {
		return *x.Deadline
	}
	return 0
}

func (x *TReqStartTransaction) GetPrerequisiteTransactionIds() []*misc.TGuid {
	if x != nil {
		return x.PrerequisiteTransactionIds
	}
	return nil
}

func (x *TReqStartTransaction) GetStartTimestamp() uint64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *TReqStartTransaction) GetReplicateToMasterCellTags() *TReqStartTransaction_TReplicateToMasterCellTags {
	if x != nil {
		return x.ReplicateToMasterCellTags
	}
	return nil
}

func (x *TReqStartTransaction) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspStartTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *misc.TGuid `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	StartTimestamp *uint64     `protobuf:"varint,2,req,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	// Sequence number source id allocated for this client if transaction is tablet.
	// Client is free not to use this source id and generate source id on its own,
	// for example, for backward compatibility. In this case client is responsible for
	// source id uniqueness between all transaction clients.
	// See TReqModifyRows.sequence_number_source_id for details.
	SequenceNumberSourceId *int64 `protobuf:"varint,3,opt,name=sequence_number_source_id,json=sequenceNumberSourceId" json:"sequence_number_source_id,omitempty"`
}

func (x *TRspStartTransaction) Reset() {
	*x = TRspStartTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStartTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStartTransaction) ProtoMessage() {}

func (x *TRspStartTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStartTransaction.ProtoReflect.Descriptor instead.
func (*TRspStartTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{4}
}

func (x *TRspStartTransaction) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TRspStartTransaction) GetStartTimestamp() uint64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *TRspStartTransaction) GetSequenceNumberSourceId() int64 {
	if x != nil && x.SequenceNumberSourceId != nil {
		return *x.SequenceNumberSourceId
	}
	return 0
}

type TReqPingTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId *misc.TGuid `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	PingAncestors *bool       `protobuf:"varint,7,opt,name=ping_ancestors,json=pingAncestors,def=1" json:"ping_ancestors,omitempty"`
}

// Default values for TReqPingTransaction fields.
const (
	Default_TReqPingTransaction_PingAncestors = bool(true)
)

func (x *TReqPingTransaction) Reset() {
	*x = TReqPingTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPingTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPingTransaction) ProtoMessage() {}

func (x *TReqPingTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPingTransaction.ProtoReflect.Descriptor instead.
func (*TReqPingTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{5}
}

func (x *TReqPingTransaction) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqPingTransaction) GetPingAncestors() bool {
	if x != nil && x.PingAncestors != nil {
		return *x.PingAncestors
	}
	return Default_TReqPingTransaction_PingAncestors
}

type TRspPingTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspPingTransaction) Reset() {
	*x = TRspPingTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPingTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPingTransaction) ProtoMessage() {}

func (x *TRspPingTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPingTransaction.ProtoReflect.Descriptor instead.
func (*TRspPingTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{6}
}

type TReqCommitTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId                *misc.TGuid           `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	AdditionalParticipantCellIds []*misc.TGuid         `protobuf:"bytes,7,rep,name=additional_participant_cell_ids,json=additionalParticipantCellIds" json:"additional_participant_cell_ids,omitempty"`
	PrerequisiteOptions          *TPrerequisiteOptions `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions              *TMutatingOptions     `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqCommitTransaction) Reset() {
	*x = TReqCommitTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCommitTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCommitTransaction) ProtoMessage() {}

func (x *TReqCommitTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCommitTransaction.ProtoReflect.Descriptor instead.
func (*TReqCommitTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{7}
}

func (x *TReqCommitTransaction) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqCommitTransaction) GetAdditionalParticipantCellIds() []*misc.TGuid {
	if x != nil {
		return x.AdditionalParticipantCellIds
	}
	return nil
}

func (x *TReqCommitTransaction) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqCommitTransaction) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspCommitTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitTimestamps       *hive.TTimestampMap `protobuf:"bytes,1,opt,name=commit_timestamps,json=commitTimestamps" json:"commit_timestamps,omitempty"`
	PrimaryCommitTimestamp *uint64             `protobuf:"varint,2,opt,name=primary_commit_timestamp,json=primaryCommitTimestamp" json:"primary_commit_timestamp,omitempty"`
}

func (x *TRspCommitTransaction) Reset() {
	*x = TRspCommitTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCommitTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCommitTransaction) ProtoMessage() {}

func (x *TRspCommitTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCommitTransaction.ProtoReflect.Descriptor instead.
func (*TRspCommitTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{8}
}

func (x *TRspCommitTransaction) GetCommitTimestamps() *hive.TTimestampMap {
	if x != nil {
		return x.CommitTimestamps
	}
	return nil
}

func (x *TRspCommitTransaction) GetPrimaryCommitTimestamp() uint64 {
	if x != nil && x.PrimaryCommitTimestamp != nil {
		return *x.PrimaryCommitTimestamp
	}
	return 0
}

type TReqFlushTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId *misc.TGuid `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (x *TReqFlushTransaction) Reset() {
	*x = TReqFlushTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqFlushTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqFlushTransaction) ProtoMessage() {}

func (x *TReqFlushTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqFlushTransaction.ProtoReflect.Descriptor instead.
func (*TReqFlushTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{9}
}

func (x *TReqFlushTransaction) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

type TRspFlushTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantCellIds []*misc.TGuid `protobuf:"bytes,1,rep,name=participant_cell_ids,json=participantCellIds" json:"participant_cell_ids,omitempty"`
}

func (x *TRspFlushTransaction) Reset() {
	*x = TRspFlushTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspFlushTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspFlushTransaction) ProtoMessage() {}

func (x *TRspFlushTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspFlushTransaction.ProtoReflect.Descriptor instead.
func (*TRspFlushTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{10}
}

func (x *TRspFlushTransaction) GetParticipantCellIds() []*misc.TGuid {
	if x != nil {
		return x.ParticipantCellIds
	}
	return nil
}

type TReqAbortTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId   *misc.TGuid       `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	MutatingOptions *TMutatingOptions `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqAbortTransaction) Reset() {
	*x = TReqAbortTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAbortTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAbortTransaction) ProtoMessage() {}

func (x *TReqAbortTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAbortTransaction.ProtoReflect.Descriptor instead.
func (*TReqAbortTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{11}
}

func (x *TReqAbortTransaction) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqAbortTransaction) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspAbortTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAbortTransaction) Reset() {
	*x = TRspAbortTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAbortTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAbortTransaction) ProtoMessage() {}

func (x *TRspAbortTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAbortTransaction.ProtoReflect.Descriptor instead.
func (*TRspAbortTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{12}
}

type TReqLookupRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Timestamp            *uint64                             `protobuf:"varint,3,opt,name=timestamp,def=4611686018427387649" json:"timestamp,omitempty"`
	RetentionTimestamp   *uint64                             `protobuf:"varint,10,opt,name=retention_timestamp,json=retentionTimestamp,def=0" json:"retention_timestamp,omitempty"`
	Columns              []string                            `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	KeepMissingRows      *bool                               `protobuf:"varint,4,opt,name=keep_missing_rows,json=keepMissingRows,def=1" json:"keep_missing_rows,omitempty"`
	EnablePartialResult  *bool                               `protobuf:"varint,7,opt,name=enable_partial_result,json=enablePartialResult,def=0" json:"enable_partial_result,omitempty"`
	UseLookupCache       *bool                               `protobuf:"varint,9,opt,name=use_lookup_cache,json=useLookupCache,def=0" json:"use_lookup_cache,omitempty"`
	TabletReadOptions    *TTabletReadOptions                 `protobuf:"bytes,106,opt,name=tablet_read_options,json=tabletReadOptions" json:"tablet_read_options,omitempty"`
	ReplicaConsistency   *EReplicaConsistency                `protobuf:"varint,11,opt,name=replica_consistency,json=replicaConsistency,enum=NYT.NApi.NRpcProxy.NProto.EReplicaConsistency" json:"replica_consistency,omitempty"`
	MultiplexingBand     *EMultiplexingBand                  `protobuf:"varint,8,opt,name=multiplexing_band,json=multiplexingBand,enum=NYT.NApi.NRpcProxy.NProto.EMultiplexingBand" json:"multiplexing_band,omitempty"`
	RowsetDescriptor     *TRowsetDescriptor                  `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	VersionedReadOptions *table_client.TVersionedReadOptions `protobuf:"bytes,12,opt,name=versioned_read_options,json=versionedReadOptions" json:"versioned_read_options,omitempty"`
}

// Default values for TReqLookupRows fields.
const (
	Default_TReqLookupRows_Timestamp           = uint64(4611686018427387649)
	Default_TReqLookupRows_RetentionTimestamp  = uint64(0)
	Default_TReqLookupRows_KeepMissingRows     = bool(true)
	Default_TReqLookupRows_EnablePartialResult = bool(false)
	Default_TReqLookupRows_UseLookupCache      = bool(false)
)

func (x *TReqLookupRows) Reset() {
	*x = TReqLookupRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqLookupRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqLookupRows) ProtoMessage() {}

func (x *TReqLookupRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqLookupRows.ProtoReflect.Descriptor instead.
func (*TReqLookupRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{13}
}

func (x *TReqLookupRows) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqLookupRows) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return Default_TReqLookupRows_Timestamp
}

func (x *TReqLookupRows) GetRetentionTimestamp() uint64 {
	if x != nil && x.RetentionTimestamp != nil {
		return *x.RetentionTimestamp
	}
	return Default_TReqLookupRows_RetentionTimestamp
}

func (x *TReqLookupRows) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TReqLookupRows) GetKeepMissingRows() bool {
	if x != nil && x.KeepMissingRows != nil {
		return *x.KeepMissingRows
	}
	return Default_TReqLookupRows_KeepMissingRows
}

func (x *TReqLookupRows) GetEnablePartialResult() bool {
	if x != nil && x.EnablePartialResult != nil {
		return *x.EnablePartialResult
	}
	return Default_TReqLookupRows_EnablePartialResult
}

func (x *TReqLookupRows) GetUseLookupCache() bool {
	if x != nil && x.UseLookupCache != nil {
		return *x.UseLookupCache
	}
	return Default_TReqLookupRows_UseLookupCache
}

func (x *TReqLookupRows) GetTabletReadOptions() *TTabletReadOptions {
	if x != nil {
		return x.TabletReadOptions
	}
	return nil
}

func (x *TReqLookupRows) GetReplicaConsistency() EReplicaConsistency {
	if x != nil && x.ReplicaConsistency != nil {
		return *x.ReplicaConsistency
	}
	return EReplicaConsistency_RRM_NONE
}

func (x *TReqLookupRows) GetMultiplexingBand() EMultiplexingBand {
	if x != nil && x.MultiplexingBand != nil {
		return *x.MultiplexingBand
	}
	return EMultiplexingBand_MB_DEFAULT
}

func (x *TReqLookupRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TReqLookupRows) GetVersionedReadOptions() *table_client.TVersionedReadOptions {
	if x != nil {
		return x.VersionedReadOptions
	}
	return nil
}

type TRspLookupRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor      *TRowsetDescriptor `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	UnavailableKeyIndexes []int32            `protobuf:"varint,201,rep,name=unavailable_key_indexes,json=unavailableKeyIndexes" json:"unavailable_key_indexes,omitempty"`
}

func (x *TRspLookupRows) Reset() {
	*x = TRspLookupRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspLookupRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspLookupRows) ProtoMessage() {}

func (x *TRspLookupRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspLookupRows.ProtoReflect.Descriptor instead.
func (*TRspLookupRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{14}
}

func (x *TRspLookupRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspLookupRows) GetUnavailableKeyIndexes() []int32 {
	if x != nil {
		return x.UnavailableKeyIndexes
	}
	return nil
}

type TRetentionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinDataVersions      *uint64 `protobuf:"varint,1,opt,name=min_data_versions,json=minDataVersions,def=1" json:"min_data_versions,omitempty"`
	MaxDataVersions      *uint64 `protobuf:"varint,2,opt,name=max_data_versions,json=maxDataVersions,def=1" json:"max_data_versions,omitempty"`
	MinDataTtl           *uint64 `protobuf:"varint,3,opt,name=min_data_ttl,json=minDataTtl,def=1800000000" json:"min_data_ttl,omitempty"` // TDuration, 30 minutes by default
	MaxDataTtl           *uint64 `protobuf:"varint,4,opt,name=max_data_ttl,json=maxDataTtl,def=1800000000" json:"max_data_ttl,omitempty"` // TDuration, 30 minutes by default
	IgnoreMajorTimestamp *bool   `protobuf:"varint,5,opt,name=ignore_major_timestamp,json=ignoreMajorTimestamp,def=0" json:"ignore_major_timestamp,omitempty"`
}

// Default values for TRetentionConfig fields.
const (
	Default_TRetentionConfig_MinDataVersions      = uint64(1)
	Default_TRetentionConfig_MaxDataVersions      = uint64(1)
	Default_TRetentionConfig_MinDataTtl           = uint64(1800000000)
	Default_TRetentionConfig_MaxDataTtl           = uint64(1800000000)
	Default_TRetentionConfig_IgnoreMajorTimestamp = bool(false)
)

func (x *TRetentionConfig) Reset() {
	*x = TRetentionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRetentionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRetentionConfig) ProtoMessage() {}

func (x *TRetentionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRetentionConfig.ProtoReflect.Descriptor instead.
func (*TRetentionConfig) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{15}
}

func (x *TRetentionConfig) GetMinDataVersions() uint64 {
	if x != nil && x.MinDataVersions != nil {
		return *x.MinDataVersions
	}
	return Default_TRetentionConfig_MinDataVersions
}

func (x *TRetentionConfig) GetMaxDataVersions() uint64 {
	if x != nil && x.MaxDataVersions != nil {
		return *x.MaxDataVersions
	}
	return Default_TRetentionConfig_MaxDataVersions
}

func (x *TRetentionConfig) GetMinDataTtl() uint64 {
	if x != nil && x.MinDataTtl != nil {
		return *x.MinDataTtl
	}
	return Default_TRetentionConfig_MinDataTtl
}

func (x *TRetentionConfig) GetMaxDataTtl() uint64 {
	if x != nil && x.MaxDataTtl != nil {
		return *x.MaxDataTtl
	}
	return Default_TRetentionConfig_MaxDataTtl
}

func (x *TRetentionConfig) GetIgnoreMajorTimestamp() bool {
	if x != nil && x.IgnoreMajorTimestamp != nil {
		return *x.IgnoreMajorTimestamp
	}
	return Default_TRetentionConfig_IgnoreMajorTimestamp
}

type TReqVersionedLookupRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Timestamp           *uint64              `protobuf:"varint,3,opt,name=timestamp,def=4611686018427387649" json:"timestamp,omitempty"`
	Columns             []string             `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	KeepMissingRows     *bool                `protobuf:"varint,4,opt,name=keep_missing_rows,json=keepMissingRows,def=1" json:"keep_missing_rows,omitempty"`
	RetentionConfig     *TRetentionConfig    `protobuf:"bytes,6,opt,name=retention_config,json=retentionConfig" json:"retention_config,omitempty"`
	EnablePartialResult *bool                `protobuf:"varint,7,opt,name=enable_partial_result,json=enablePartialResult,def=0" json:"enable_partial_result,omitempty"`
	UseLookupCache      *bool                `protobuf:"varint,9,opt,name=use_lookup_cache,json=useLookupCache,def=0" json:"use_lookup_cache,omitempty"`
	TabletReadOptions   *TTabletReadOptions  `protobuf:"bytes,106,opt,name=tablet_read_options,json=tabletReadOptions" json:"tablet_read_options,omitempty"`
	ReplicaConsistency  *EReplicaConsistency `protobuf:"varint,10,opt,name=replica_consistency,json=replicaConsistency,enum=NYT.NApi.NRpcProxy.NProto.EReplicaConsistency" json:"replica_consistency,omitempty"`
	MultiplexingBand    *EMultiplexingBand   `protobuf:"varint,8,opt,name=multiplexing_band,json=multiplexingBand,enum=NYT.NApi.NRpcProxy.NProto.EMultiplexingBand" json:"multiplexing_band,omitempty"`
	RowsetDescriptor    *TRowsetDescriptor   `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
}

// Default values for TReqVersionedLookupRows fields.
const (
	Default_TReqVersionedLookupRows_Timestamp           = uint64(4611686018427387649)
	Default_TReqVersionedLookupRows_KeepMissingRows     = bool(true)
	Default_TReqVersionedLookupRows_EnablePartialResult = bool(false)
	Default_TReqVersionedLookupRows_UseLookupCache      = bool(false)
)

func (x *TReqVersionedLookupRows) Reset() {
	*x = TReqVersionedLookupRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqVersionedLookupRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqVersionedLookupRows) ProtoMessage() {}

func (x *TReqVersionedLookupRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqVersionedLookupRows.ProtoReflect.Descriptor instead.
func (*TReqVersionedLookupRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{16}
}

func (x *TReqVersionedLookupRows) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqVersionedLookupRows) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return Default_TReqVersionedLookupRows_Timestamp
}

func (x *TReqVersionedLookupRows) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TReqVersionedLookupRows) GetKeepMissingRows() bool {
	if x != nil && x.KeepMissingRows != nil {
		return *x.KeepMissingRows
	}
	return Default_TReqVersionedLookupRows_KeepMissingRows
}

func (x *TReqVersionedLookupRows) GetRetentionConfig() *TRetentionConfig {
	if x != nil {
		return x.RetentionConfig
	}
	return nil
}

func (x *TReqVersionedLookupRows) GetEnablePartialResult() bool {
	if x != nil && x.EnablePartialResult != nil {
		return *x.EnablePartialResult
	}
	return Default_TReqVersionedLookupRows_EnablePartialResult
}

func (x *TReqVersionedLookupRows) GetUseLookupCache() bool {
	if x != nil && x.UseLookupCache != nil {
		return *x.UseLookupCache
	}
	return Default_TReqVersionedLookupRows_UseLookupCache
}

func (x *TReqVersionedLookupRows) GetTabletReadOptions() *TTabletReadOptions {
	if x != nil {
		return x.TabletReadOptions
	}
	return nil
}

func (x *TReqVersionedLookupRows) GetReplicaConsistency() EReplicaConsistency {
	if x != nil && x.ReplicaConsistency != nil {
		return *x.ReplicaConsistency
	}
	return EReplicaConsistency_RRM_NONE
}

func (x *TReqVersionedLookupRows) GetMultiplexingBand() EMultiplexingBand {
	if x != nil && x.MultiplexingBand != nil {
		return *x.MultiplexingBand
	}
	return EMultiplexingBand_MB_DEFAULT
}

func (x *TReqVersionedLookupRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

type TRspVersionedLookupRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor      *TRowsetDescriptor `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	UnavailableKeyIndexes []int32            `protobuf:"varint,201,rep,name=unavailable_key_indexes,json=unavailableKeyIndexes" json:"unavailable_key_indexes,omitempty"`
}

func (x *TRspVersionedLookupRows) Reset() {
	*x = TRspVersionedLookupRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspVersionedLookupRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspVersionedLookupRows) ProtoMessage() {}

func (x *TRspVersionedLookupRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspVersionedLookupRows.ProtoReflect.Descriptor instead.
func (*TRspVersionedLookupRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{17}
}

func (x *TRspVersionedLookupRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspVersionedLookupRows) GetUnavailableKeyIndexes() []int32 {
	if x != nil {
		return x.UnavailableKeyIndexes
	}
	return nil
}

type TReqMultiLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subrequests        []*TReqMultiLookup_TSubrequest `protobuf:"bytes,1,rep,name=subrequests" json:"subrequests,omitempty"`
	Timestamp          *uint64                        `protobuf:"varint,2,opt,name=timestamp,def=4611686018427387649" json:"timestamp,omitempty"`
	RetentionTimestamp *uint64                        `protobuf:"varint,5,opt,name=retention_timestamp,json=retentionTimestamp,def=0" json:"retention_timestamp,omitempty"`
	TabletReadOptions  *TTabletReadOptions            `protobuf:"bytes,3,opt,name=tablet_read_options,json=tabletReadOptions" json:"tablet_read_options,omitempty"`
	ReplicaConsistency *EReplicaConsistency           `protobuf:"varint,6,opt,name=replica_consistency,json=replicaConsistency,enum=NYT.NApi.NRpcProxy.NProto.EReplicaConsistency" json:"replica_consistency,omitempty"`
	MultiplexingBand   *EMultiplexingBand             `protobuf:"varint,4,opt,name=multiplexing_band,json=multiplexingBand,enum=NYT.NApi.NRpcProxy.NProto.EMultiplexingBand" json:"multiplexing_band,omitempty"`
}

// Default values for TReqMultiLookup fields.
const (
	Default_TReqMultiLookup_Timestamp          = uint64(4611686018427387649)
	Default_TReqMultiLookup_RetentionTimestamp = uint64(0)
)

func (x *TReqMultiLookup) Reset() {
	*x = TReqMultiLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMultiLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMultiLookup) ProtoMessage() {}

func (x *TReqMultiLookup) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMultiLookup.ProtoReflect.Descriptor instead.
func (*TReqMultiLookup) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{18}
}

func (x *TReqMultiLookup) GetSubrequests() []*TReqMultiLookup_TSubrequest {
	if x != nil {
		return x.Subrequests
	}
	return nil
}

func (x *TReqMultiLookup) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return Default_TReqMultiLookup_Timestamp
}

func (x *TReqMultiLookup) GetRetentionTimestamp() uint64 {
	if x != nil && x.RetentionTimestamp != nil {
		return *x.RetentionTimestamp
	}
	return Default_TReqMultiLookup_RetentionTimestamp
}

func (x *TReqMultiLookup) GetTabletReadOptions() *TTabletReadOptions {
	if x != nil {
		return x.TabletReadOptions
	}
	return nil
}

func (x *TReqMultiLookup) GetReplicaConsistency() EReplicaConsistency {
	if x != nil && x.ReplicaConsistency != nil {
		return *x.ReplicaConsistency
	}
	return EReplicaConsistency_RRM_NONE
}

func (x *TReqMultiLookup) GetMultiplexingBand() EMultiplexingBand {
	if x != nil && x.MultiplexingBand != nil {
		return *x.MultiplexingBand
	}
	return EMultiplexingBand_MB_DEFAULT
}

type TRspMultiLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subresponses []*TRspMultiLookup_TSubresponse `protobuf:"bytes,1,rep,name=subresponses" json:"subresponses,omitempty"`
}

func (x *TRspMultiLookup) Reset() {
	*x = TRspMultiLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMultiLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMultiLookup) ProtoMessage() {}

func (x *TRspMultiLookup) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMultiLookup.ProtoReflect.Descriptor instead.
func (*TRspMultiLookup) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{19}
}

func (x *TRspMultiLookup) GetSubresponses() []*TRspMultiLookup_TSubresponse {
	if x != nil {
		return x.Subresponses
	}
	return nil
}

type TQueryStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsRead             *int64              `protobuf:"varint,1,opt,name=rows_read,json=rowsRead" json:"rows_read,omitempty"`
	DataWeightRead       *int64              `protobuf:"varint,2,opt,name=data_weight_read,json=dataWeightRead" json:"data_weight_read,omitempty"`
	RowsWritten          *int64              `protobuf:"varint,3,opt,name=rows_written,json=rowsWritten" json:"rows_written,omitempty"`
	SyncTime             *uint64             `protobuf:"varint,4,opt,name=sync_time,json=syncTime" json:"sync_time,omitempty"`                                            // TDuration
	AsyncTime            *uint64             `protobuf:"varint,5,opt,name=async_time,json=asyncTime" json:"async_time,omitempty"`                                         // TDuration
	ExecuteTime          *uint64             `protobuf:"varint,6,opt,name=execute_time,json=executeTime" json:"execute_time,omitempty"`                                   // TDuration
	ReadTime             *uint64             `protobuf:"varint,7,opt,name=read_time,json=readTime" json:"read_time,omitempty"`                                            // TDuration
	WriteTime            *uint64             `protobuf:"varint,8,opt,name=write_time,json=writeTime" json:"write_time,omitempty"`                                         // TDuration
	CodegenTime          *uint64             `protobuf:"varint,9,opt,name=codegen_time,json=codegenTime" json:"codegen_time,omitempty"`                                   // TDuration
	WaitOnReadyEventTime *uint64             `protobuf:"varint,10,opt,name=wait_on_ready_event_time,json=waitOnReadyEventTime" json:"wait_on_ready_event_time,omitempty"` // TDuration
	IncompleteInput      *bool               `protobuf:"varint,11,opt,name=incomplete_input,json=incompleteInput" json:"incomplete_input,omitempty"`
	IncompleteOutput     *bool               `protobuf:"varint,12,opt,name=incomplete_output,json=incompleteOutput" json:"incomplete_output,omitempty"`
	MemoryUsage          *uint64             `protobuf:"varint,15,opt,name=memory_usage,json=memoryUsage" json:"memory_usage,omitempty"`
	TotalGroupedRowCount *int64              `protobuf:"varint,16,opt,name=total_grouped_row_count,json=totalGroupedRowCount" json:"total_grouped_row_count,omitempty"`
	InnerStatistics      []*TQueryStatistics `protobuf:"bytes,14,rep,name=inner_statistics,json=innerStatistics" json:"inner_statistics,omitempty"`
}

func (x *TQueryStatistics) Reset() {
	*x = TQueryStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TQueryStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TQueryStatistics) ProtoMessage() {}

func (x *TQueryStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TQueryStatistics.ProtoReflect.Descriptor instead.
func (*TQueryStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{20}
}

func (x *TQueryStatistics) GetRowsRead() int64 {
	if x != nil && x.RowsRead != nil {
		return *x.RowsRead
	}
	return 0
}

func (x *TQueryStatistics) GetDataWeightRead() int64 {
	if x != nil && x.DataWeightRead != nil {
		return *x.DataWeightRead
	}
	return 0
}

func (x *TQueryStatistics) GetRowsWritten() int64 {
	if x != nil && x.RowsWritten != nil {
		return *x.RowsWritten
	}
	return 0
}

func (x *TQueryStatistics) GetSyncTime() uint64 {
	if x != nil && x.SyncTime != nil {
		return *x.SyncTime
	}
	return 0
}

func (x *TQueryStatistics) GetAsyncTime() uint64 {
	if x != nil && x.AsyncTime != nil {
		return *x.AsyncTime
	}
	return 0
}

func (x *TQueryStatistics) GetExecuteTime() uint64 {
	if x != nil && x.ExecuteTime != nil {
		return *x.ExecuteTime
	}
	return 0
}

func (x *TQueryStatistics) GetReadTime() uint64 {
	if x != nil && x.ReadTime != nil {
		return *x.ReadTime
	}
	return 0
}

func (x *TQueryStatistics) GetWriteTime() uint64 {
	if x != nil && x.WriteTime != nil {
		return *x.WriteTime
	}
	return 0
}

func (x *TQueryStatistics) GetCodegenTime() uint64 {
	if x != nil && x.CodegenTime != nil {
		return *x.CodegenTime
	}
	return 0
}

func (x *TQueryStatistics) GetWaitOnReadyEventTime() uint64 {
	if x != nil && x.WaitOnReadyEventTime != nil {
		return *x.WaitOnReadyEventTime
	}
	return 0
}

func (x *TQueryStatistics) GetIncompleteInput() bool {
	if x != nil && x.IncompleteInput != nil {
		return *x.IncompleteInput
	}
	return false
}

func (x *TQueryStatistics) GetIncompleteOutput() bool {
	if x != nil && x.IncompleteOutput != nil {
		return *x.IncompleteOutput
	}
	return false
}

func (x *TQueryStatistics) GetMemoryUsage() uint64 {
	if x != nil && x.MemoryUsage != nil {
		return *x.MemoryUsage
	}
	return 0
}

func (x *TQueryStatistics) GetTotalGroupedRowCount() int64 {
	if x != nil && x.TotalGroupedRowCount != nil {
		return *x.TotalGroupedRowCount
	}
	return 0
}

func (x *TQueryStatistics) GetInnerStatistics() []*TQueryStatistics {
	if x != nil {
		return x.InnerStatistics
	}
	return nil
}

type TReqSelectRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *string `protobuf:"bytes,1,req,name=query" json:"query,omitempty"`
	// optional NYT.NProto.TGuid transaction_id = 2;
	Timestamp                         *uint64                             `protobuf:"varint,3,opt,name=timestamp,def=4611686018427387649" json:"timestamp,omitempty"`
	RetentionTimestamp                *uint64                             `protobuf:"varint,16,opt,name=retention_timestamp,json=retentionTimestamp,def=0" json:"retention_timestamp,omitempty"`
	InputRowLimit                     *uint64                             `protobuf:"varint,4,opt,name=input_row_limit,json=inputRowLimit" json:"input_row_limit,omitempty"`
	OutputRowLimit                    *uint64                             `protobuf:"varint,5,opt,name=output_row_limit,json=outputRowLimit" json:"output_row_limit,omitempty"`
	RangeExpansionLimit               *uint64                             `protobuf:"varint,6,opt,name=range_expansion_limit,json=rangeExpansionLimit" json:"range_expansion_limit,omitempty"`
	FailOnIncompleteResult            *bool                               `protobuf:"varint,7,opt,name=fail_on_incomplete_result,json=failOnIncompleteResult" json:"fail_on_incomplete_result,omitempty"`
	VerboseLogging                    *bool                               `protobuf:"varint,8,opt,name=verbose_logging,json=verboseLogging" json:"verbose_logging,omitempty"`
	EnableCodeCache                   *bool                               `protobuf:"varint,9,opt,name=enable_code_cache,json=enableCodeCache" json:"enable_code_cache,omitempty"`
	MaxSubqueries                     *int32                              `protobuf:"varint,10,opt,name=max_subqueries,json=maxSubqueries" json:"max_subqueries,omitempty"`
	AllowFullScan                     *bool                               `protobuf:"varint,11,opt,name=allow_full_scan,json=allowFullScan" json:"allow_full_scan,omitempty"`
	AllowJoinWithoutIndex             *bool                               `protobuf:"varint,12,opt,name=allow_join_without_index,json=allowJoinWithoutIndex" json:"allow_join_without_index,omitempty"`
	UdfRegistryPath                   []byte                              `protobuf:"bytes,13,opt,name=udf_registry_path,json=udfRegistryPath" json:"udf_registry_path,omitempty"` // YPath
	MemoryLimitPerNode                *uint64                             `protobuf:"varint,14,opt,name=memory_limit_per_node,json=memoryLimitPerNode" json:"memory_limit_per_node,omitempty"`
	ExecutionPool                     *string                             `protobuf:"bytes,15,opt,name=execution_pool,json=executionPool" json:"execution_pool,omitempty"`
	ReplicaConsistency                *EReplicaConsistency                `protobuf:"varint,17,opt,name=replica_consistency,json=replicaConsistency,enum=NYT.NApi.NRpcProxy.NProto.EReplicaConsistency" json:"replica_consistency,omitempty"`
	PlaceholderValues                 []byte                              `protobuf:"bytes,18,opt,name=placeholder_values,json=placeholderValues" json:"placeholder_values,omitempty"` // YSON
	NewRangeInference                 *bool                               `protobuf:"varint,19,opt,name=new_range_inference,json=newRangeInference" json:"new_range_inference,omitempty"`
	UseCanonicalNullRelations         *bool                               `protobuf:"varint,20,opt,name=use_canonical_null_relations,json=useCanonicalNullRelations" json:"use_canonical_null_relations,omitempty"`
	MergeVersionedRows                *bool                               `protobuf:"varint,21,opt,name=merge_versioned_rows,json=mergeVersionedRows" json:"merge_versioned_rows,omitempty"`
	SyntaxVersion                     *int32                              `protobuf:"varint,22,opt,name=syntax_version,json=syntaxVersion,def=1" json:"syntax_version,omitempty"`
	ExecutionBackend                  *int32                              `protobuf:"varint,23,opt,name=execution_backend,json=executionBackend" json:"execution_backend,omitempty"` // EExecutionBackend
	VersionedReadOptions              *table_client.TVersionedReadOptions `protobuf:"bytes,25,opt,name=versioned_read_options,json=versionedReadOptions" json:"versioned_read_options,omitempty"`
	UseLookupCache                    *bool                               `protobuf:"varint,26,opt,name=use_lookup_cache,json=useLookupCache" json:"use_lookup_cache,omitempty"`
	MinRowCountPerSubquery            *int64                              `protobuf:"varint,27,opt,name=min_row_count_per_subquery,json=minRowCountPerSubquery" json:"min_row_count_per_subquery,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

// Default values for TReqSelectRows fields.
const (
	Default_TReqSelectRows_Timestamp          = uint64(4611686018427387649)
	Default_TReqSelectRows_RetentionTimestamp = uint64(0)
	Default_TReqSelectRows_SyntaxVersion      = int32(1)
)

func (x *TReqSelectRows) Reset() {
	*x = TReqSelectRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSelectRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSelectRows) ProtoMessage() {}

func (x *TReqSelectRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSelectRows.ProtoReflect.Descriptor instead.
func (*TReqSelectRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{21}
}

func (x *TReqSelectRows) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *TReqSelectRows) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return Default_TReqSelectRows_Timestamp
}

func (x *TReqSelectRows) GetRetentionTimestamp() uint64 {
	if x != nil && x.RetentionTimestamp != nil {
		return *x.RetentionTimestamp
	}
	return Default_TReqSelectRows_RetentionTimestamp
}

func (x *TReqSelectRows) GetInputRowLimit() uint64 {
	if x != nil && x.InputRowLimit != nil {
		return *x.InputRowLimit
	}
	return 0
}

func (x *TReqSelectRows) GetOutputRowLimit() uint64 {
	if x != nil && x.OutputRowLimit != nil {
		return *x.OutputRowLimit
	}
	return 0
}

func (x *TReqSelectRows) GetRangeExpansionLimit() uint64 {
	if x != nil && x.RangeExpansionLimit != nil {
		return *x.RangeExpansionLimit
	}
	return 0
}

func (x *TReqSelectRows) GetFailOnIncompleteResult() bool {
	if x != nil && x.FailOnIncompleteResult != nil {
		return *x.FailOnIncompleteResult
	}
	return false
}

func (x *TReqSelectRows) GetVerboseLogging() bool {
	if x != nil && x.VerboseLogging != nil {
		return *x.VerboseLogging
	}
	return false
}

func (x *TReqSelectRows) GetEnableCodeCache() bool {
	if x != nil && x.EnableCodeCache != nil {
		return *x.EnableCodeCache
	}
	return false
}

func (x *TReqSelectRows) GetMaxSubqueries() int32 {
	if x != nil && x.MaxSubqueries != nil {
		return *x.MaxSubqueries
	}
	return 0
}

func (x *TReqSelectRows) GetAllowFullScan() bool {
	if x != nil && x.AllowFullScan != nil {
		return *x.AllowFullScan
	}
	return false
}

func (x *TReqSelectRows) GetAllowJoinWithoutIndex() bool {
	if x != nil && x.AllowJoinWithoutIndex != nil {
		return *x.AllowJoinWithoutIndex
	}
	return false
}

func (x *TReqSelectRows) GetUdfRegistryPath() []byte {
	if x != nil {
		return x.UdfRegistryPath
	}
	return nil
}

func (x *TReqSelectRows) GetMemoryLimitPerNode() uint64 {
	if x != nil && x.MemoryLimitPerNode != nil {
		return *x.MemoryLimitPerNode
	}
	return 0
}

func (x *TReqSelectRows) GetExecutionPool() string {
	if x != nil && x.ExecutionPool != nil {
		return *x.ExecutionPool
	}
	return ""
}

func (x *TReqSelectRows) GetReplicaConsistency() EReplicaConsistency {
	if x != nil && x.ReplicaConsistency != nil {
		return *x.ReplicaConsistency
	}
	return EReplicaConsistency_RRM_NONE
}

func (x *TReqSelectRows) GetPlaceholderValues() []byte {
	if x != nil {
		return x.PlaceholderValues
	}
	return nil
}

func (x *TReqSelectRows) GetNewRangeInference() bool {
	if x != nil && x.NewRangeInference != nil {
		return *x.NewRangeInference
	}
	return false
}

func (x *TReqSelectRows) GetUseCanonicalNullRelations() bool {
	if x != nil && x.UseCanonicalNullRelations != nil {
		return *x.UseCanonicalNullRelations
	}
	return false
}

func (x *TReqSelectRows) GetMergeVersionedRows() bool {
	if x != nil && x.MergeVersionedRows != nil {
		return *x.MergeVersionedRows
	}
	return false
}

func (x *TReqSelectRows) GetSyntaxVersion() int32 {
	if x != nil && x.SyntaxVersion != nil {
		return *x.SyntaxVersion
	}
	return Default_TReqSelectRows_SyntaxVersion
}

func (x *TReqSelectRows) GetExecutionBackend() int32 {
	if x != nil && x.ExecutionBackend != nil {
		return *x.ExecutionBackend
	}
	return 0
}

func (x *TReqSelectRows) GetVersionedReadOptions() *table_client.TVersionedReadOptions {
	if x != nil {
		return x.VersionedReadOptions
	}
	return nil
}

func (x *TReqSelectRows) GetUseLookupCache() bool {
	if x != nil && x.UseLookupCache != nil {
		return *x.UseLookupCache
	}
	return false
}

func (x *TReqSelectRows) GetMinRowCountPerSubquery() int64 {
	if x != nil && x.MinRowCountPerSubquery != nil {
		return *x.MinRowCountPerSubquery
	}
	return 0
}

func (x *TReqSelectRows) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspSelectRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor *TRowsetDescriptor `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	Statistics       *TQueryStatistics  `protobuf:"bytes,201,opt,name=statistics" json:"statistics,omitempty"`
}

func (x *TRspSelectRows) Reset() {
	*x = TRspSelectRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSelectRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSelectRows) ProtoMessage() {}

func (x *TRspSelectRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSelectRows.ProtoReflect.Descriptor instead.
func (*TRspSelectRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{22}
}

func (x *TRspSelectRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspSelectRows) GetStatistics() *TQueryStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type TReqAdvanceQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId  *misc.TGuid `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	ConsumerPath   []byte      `protobuf:"bytes,2,opt,name=consumer_path,json=consumerPath" json:"consumer_path,omitempty"` // RichYPath
	QueuePath      []byte      `protobuf:"bytes,3,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	PartitionIndex *int32      `protobuf:"varint,4,opt,name=partition_index,json=partitionIndex" json:"partition_index,omitempty"`
	OldOffset      *int64      `protobuf:"varint,5,opt,name=old_offset,json=oldOffset" json:"old_offset,omitempty"`
	NewOffset      *int64      `protobuf:"varint,6,opt,name=new_offset,json=newOffset" json:"new_offset,omitempty"`
}

func (x *TReqAdvanceQueueConsumer) Reset() {
	*x = TReqAdvanceQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAdvanceQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAdvanceQueueConsumer) ProtoMessage() {}

func (x *TReqAdvanceQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAdvanceQueueConsumer.ProtoReflect.Descriptor instead.
func (*TReqAdvanceQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{23}
}

func (x *TReqAdvanceQueueConsumer) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqAdvanceQueueConsumer) GetConsumerPath() []byte {
	if x != nil {
		return x.ConsumerPath
	}
	return nil
}

func (x *TReqAdvanceQueueConsumer) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqAdvanceQueueConsumer) GetPartitionIndex() int32 {
	if x != nil && x.PartitionIndex != nil {
		return *x.PartitionIndex
	}
	return 0
}

func (x *TReqAdvanceQueueConsumer) GetOldOffset() int64 {
	if x != nil && x.OldOffset != nil {
		return *x.OldOffset
	}
	return 0
}

func (x *TReqAdvanceQueueConsumer) GetNewOffset() int64 {
	if x != nil && x.NewOffset != nil {
		return *x.NewOffset
	}
	return 0
}

type TRspAdvanceQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAdvanceQueueConsumer) Reset() {
	*x = TRspAdvanceQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAdvanceQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAdvanceQueueConsumer) ProtoMessage() {}

func (x *TRspAdvanceQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAdvanceQueueConsumer.ProtoReflect.Descriptor instead.
func (*TRspAdvanceQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{24}
}

type TReqPushQueueProducer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId      *misc.TGuid        `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	ProducerPath       []byte             `protobuf:"bytes,2,opt,name=producer_path,json=producerPath" json:"producer_path,omitempty"` // RichYPath
	QueuePath          []byte             `protobuf:"bytes,3,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	SessionId          *string            `protobuf:"bytes,4,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Epoch              *int64             `protobuf:"varint,5,opt,name=epoch" json:"epoch,omitempty"`
	UserMeta           []byte             `protobuf:"bytes,6,opt,name=user_meta,json=userMeta" json:"user_meta,omitempty"` // YSON
	SequenceNumber     *int64             `protobuf:"varint,7,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	RequireSyncReplica *bool              `protobuf:"varint,8,opt,name=require_sync_replica,json=requireSyncReplica" json:"require_sync_replica,omitempty"`
	RowsetDescriptor   *TRowsetDescriptor `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
}

func (x *TReqPushQueueProducer) Reset() {
	*x = TReqPushQueueProducer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPushQueueProducer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPushQueueProducer) ProtoMessage() {}

func (x *TReqPushQueueProducer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPushQueueProducer.ProtoReflect.Descriptor instead.
func (*TReqPushQueueProducer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{25}
}

func (x *TReqPushQueueProducer) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqPushQueueProducer) GetProducerPath() []byte {
	if x != nil {
		return x.ProducerPath
	}
	return nil
}

func (x *TReqPushQueueProducer) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqPushQueueProducer) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *TReqPushQueueProducer) GetEpoch() int64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *TReqPushQueueProducer) GetUserMeta() []byte {
	if x != nil {
		return x.UserMeta
	}
	return nil
}

func (x *TReqPushQueueProducer) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *TReqPushQueueProducer) GetRequireSyncReplica() bool {
	if x != nil && x.RequireSyncReplica != nil {
		return *x.RequireSyncReplica
	}
	return false
}

func (x *TReqPushQueueProducer) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

type TRspPushQueueProducer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastSequenceNumber *int64 `protobuf:"varint,1,opt,name=last_sequence_number,json=lastSequenceNumber" json:"last_sequence_number,omitempty"`
	SkippedRowCount    *int64 `protobuf:"varint,2,opt,name=skipped_row_count,json=skippedRowCount" json:"skipped_row_count,omitempty"`
}

func (x *TRspPushQueueProducer) Reset() {
	*x = TRspPushQueueProducer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPushQueueProducer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPushQueueProducer) ProtoMessage() {}

func (x *TRspPushQueueProducer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPushQueueProducer.ProtoReflect.Descriptor instead.
func (*TRspPushQueueProducer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{26}
}

func (x *TRspPushQueueProducer) GetLastSequenceNumber() int64 {
	if x != nil && x.LastSequenceNumber != nil {
		return *x.LastSequenceNumber
	}
	return 0
}

func (x *TRspPushQueueProducer) GetSkippedRowCount() int64 {
	if x != nil && x.SkippedRowCount != nil {
		return *x.SkippedRowCount
	}
	return 0
}

type TRowBatchReadOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxRowCount          *int64 `protobuf:"varint,1,opt,name=max_row_count,json=maxRowCount" json:"max_row_count,omitempty"`
	MaxDataWeight        *int64 `protobuf:"varint,2,opt,name=max_data_weight,json=maxDataWeight" json:"max_data_weight,omitempty"`
	DataWeightPerRowHint *int64 `protobuf:"varint,3,opt,name=data_weight_per_row_hint,json=dataWeightPerRowHint" json:"data_weight_per_row_hint,omitempty"`
}

func (x *TRowBatchReadOptions) Reset() {
	*x = TRowBatchReadOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRowBatchReadOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRowBatchReadOptions) ProtoMessage() {}

func (x *TRowBatchReadOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRowBatchReadOptions.ProtoReflect.Descriptor instead.
func (*TRowBatchReadOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{27}
}

func (x *TRowBatchReadOptions) GetMaxRowCount() int64 {
	if x != nil && x.MaxRowCount != nil {
		return *x.MaxRowCount
	}
	return 0
}

func (x *TRowBatchReadOptions) GetMaxDataWeight() int64 {
	if x != nil && x.MaxDataWeight != nil {
		return *x.MaxDataWeight
	}
	return 0
}

func (x *TRowBatchReadOptions) GetDataWeightPerRowHint() int64 {
	if x != nil && x.DataWeightPerRowHint != nil {
		return *x.DataWeightPerRowHint
	}
	return 0
}

type TReqPullQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePath              []byte                `protobuf:"bytes,1,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"` // RichYPath
	Offset                 *int64                `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	PartitionIndex         *int32                `protobuf:"varint,3,opt,name=partition_index,json=partitionIndex" json:"partition_index,omitempty"`
	RowBatchReadOptions    *TRowBatchReadOptions `protobuf:"bytes,4,opt,name=row_batch_read_options,json=rowBatchReadOptions" json:"row_batch_read_options,omitempty"`
	UseNativeTabletNodeApi *bool                 `protobuf:"varint,5,opt,name=use_native_tablet_node_api,json=useNativeTabletNodeApi,def=0" json:"use_native_tablet_node_api,omitempty"`
	ReplicaConsistency     *EReplicaConsistency  `protobuf:"varint,6,opt,name=replica_consistency,json=replicaConsistency,enum=NYT.NApi.NRpcProxy.NProto.EReplicaConsistency" json:"replica_consistency,omitempty"`
}

// Default values for TReqPullQueue fields.
const (
	Default_TReqPullQueue_UseNativeTabletNodeApi = bool(false)
)

func (x *TReqPullQueue) Reset() {
	*x = TReqPullQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPullQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPullQueue) ProtoMessage() {}

func (x *TReqPullQueue) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPullQueue.ProtoReflect.Descriptor instead.
func (*TReqPullQueue) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{28}
}

func (x *TReqPullQueue) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqPullQueue) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *TReqPullQueue) GetPartitionIndex() int32 {
	if x != nil && x.PartitionIndex != nil {
		return *x.PartitionIndex
	}
	return 0
}

func (x *TReqPullQueue) GetRowBatchReadOptions() *TRowBatchReadOptions {
	if x != nil {
		return x.RowBatchReadOptions
	}
	return nil
}

func (x *TReqPullQueue) GetUseNativeTabletNodeApi() bool {
	if x != nil && x.UseNativeTabletNodeApi != nil {
		return *x.UseNativeTabletNodeApi
	}
	return Default_TReqPullQueue_UseNativeTabletNodeApi
}

func (x *TReqPullQueue) GetReplicaConsistency() EReplicaConsistency {
	if x != nil && x.ReplicaConsistency != nil {
		return *x.ReplicaConsistency
	}
	return EReplicaConsistency_RRM_NONE
}

type TRspPullQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor *TRowsetDescriptor `protobuf:"bytes,1,opt,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	StartOffset      *int64             `protobuf:"varint,2,opt,name=start_offset,json=startOffset" json:"start_offset,omitempty"`
}

func (x *TRspPullQueue) Reset() {
	*x = TRspPullQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPullQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPullQueue) ProtoMessage() {}

func (x *TRspPullQueue) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPullQueue.ProtoReflect.Descriptor instead.
func (*TRspPullQueue) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{29}
}

func (x *TRspPullQueue) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspPullQueue) GetStartOffset() int64 {
	if x != nil && x.StartOffset != nil {
		return *x.StartOffset
	}
	return 0
}

type TReqPullQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerPath        []byte                `protobuf:"bytes,1,opt,name=consumer_path,json=consumerPath" json:"consumer_path,omitempty"` // RichYPath
	QueuePath           []byte                `protobuf:"bytes,2,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	Offset              *int64                `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	PartitionIndex      *int32                `protobuf:"varint,4,opt,name=partition_index,json=partitionIndex" json:"partition_index,omitempty"`
	RowBatchReadOptions *TRowBatchReadOptions `protobuf:"bytes,5,opt,name=row_batch_read_options,json=rowBatchReadOptions" json:"row_batch_read_options,omitempty"`
	ReplicaConsistency  *EReplicaConsistency  `protobuf:"varint,6,opt,name=replica_consistency,json=replicaConsistency,enum=NYT.NApi.NRpcProxy.NProto.EReplicaConsistency" json:"replica_consistency,omitempty"`
}

func (x *TReqPullQueueConsumer) Reset() {
	*x = TReqPullQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPullQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPullQueueConsumer) ProtoMessage() {}

func (x *TReqPullQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPullQueueConsumer.ProtoReflect.Descriptor instead.
func (*TReqPullQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{30}
}

func (x *TReqPullQueueConsumer) GetConsumerPath() []byte {
	if x != nil {
		return x.ConsumerPath
	}
	return nil
}

func (x *TReqPullQueueConsumer) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqPullQueueConsumer) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *TReqPullQueueConsumer) GetPartitionIndex() int32 {
	if x != nil && x.PartitionIndex != nil {
		return *x.PartitionIndex
	}
	return 0
}

func (x *TReqPullQueueConsumer) GetRowBatchReadOptions() *TRowBatchReadOptions {
	if x != nil {
		return x.RowBatchReadOptions
	}
	return nil
}

func (x *TReqPullQueueConsumer) GetReplicaConsistency() EReplicaConsistency {
	if x != nil && x.ReplicaConsistency != nil {
		return *x.ReplicaConsistency
	}
	return EReplicaConsistency_RRM_NONE
}

type TRspPullQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor *TRowsetDescriptor `protobuf:"bytes,1,opt,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	StartOffset      *int64             `protobuf:"varint,2,opt,name=start_offset,json=startOffset" json:"start_offset,omitempty"`
}

func (x *TRspPullQueueConsumer) Reset() {
	*x = TRspPullQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPullQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPullQueueConsumer) ProtoMessage() {}

func (x *TRspPullQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPullQueueConsumer.ProtoReflect.Descriptor instead.
func (*TRspPullQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{31}
}

func (x *TRspPullQueueConsumer) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspPullQueueConsumer) GetStartOffset() int64 {
	if x != nil && x.StartOffset != nil {
		return *x.StartOffset
	}
	return 0
}

type TReqRegisterQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePath    []byte                                             `protobuf:"bytes,1,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	ConsumerPath []byte                                             `protobuf:"bytes,2,opt,name=consumer_path,json=consumerPath" json:"consumer_path,omitempty"` // RichYPath
	Vital        *bool                                              `protobuf:"varint,3,opt,name=vital" json:"vital,omitempty"`
	Partitions   *TReqRegisterQueueConsumer_TRegistrationPartitions `protobuf:"bytes,4,opt,name=partitions" json:"partitions,omitempty"`
}

func (x *TReqRegisterQueueConsumer) Reset() {
	*x = TReqRegisterQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRegisterQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRegisterQueueConsumer) ProtoMessage() {}

func (x *TReqRegisterQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRegisterQueueConsumer.ProtoReflect.Descriptor instead.
func (*TReqRegisterQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{32}
}

func (x *TReqRegisterQueueConsumer) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqRegisterQueueConsumer) GetConsumerPath() []byte {
	if x != nil {
		return x.ConsumerPath
	}
	return nil
}

func (x *TReqRegisterQueueConsumer) GetVital() bool {
	if x != nil && x.Vital != nil {
		return *x.Vital
	}
	return false
}

func (x *TReqRegisterQueueConsumer) GetPartitions() *TReqRegisterQueueConsumer_TRegistrationPartitions {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type TRspRegisterQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRegisterQueueConsumer) Reset() {
	*x = TRspRegisterQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRegisterQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRegisterQueueConsumer) ProtoMessage() {}

func (x *TRspRegisterQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRegisterQueueConsumer.ProtoReflect.Descriptor instead.
func (*TRspRegisterQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{33}
}

type TReqUnregisterQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePath    []byte `protobuf:"bytes,1,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	ConsumerPath []byte `protobuf:"bytes,2,opt,name=consumer_path,json=consumerPath" json:"consumer_path,omitempty"` // RichYPath
}

func (x *TReqUnregisterQueueConsumer) Reset() {
	*x = TReqUnregisterQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqUnregisterQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqUnregisterQueueConsumer) ProtoMessage() {}

func (x *TReqUnregisterQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqUnregisterQueueConsumer.ProtoReflect.Descriptor instead.
func (*TReqUnregisterQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{34}
}

func (x *TReqUnregisterQueueConsumer) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqUnregisterQueueConsumer) GetConsumerPath() []byte {
	if x != nil {
		return x.ConsumerPath
	}
	return nil
}

type TRspUnregisterQueueConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspUnregisterQueueConsumer) Reset() {
	*x = TRspUnregisterQueueConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspUnregisterQueueConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspUnregisterQueueConsumer) ProtoMessage() {}

func (x *TRspUnregisterQueueConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspUnregisterQueueConsumer.ProtoReflect.Descriptor instead.
func (*TRspUnregisterQueueConsumer) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{35}
}

type TReqListQueueConsumerRegistrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePath    []byte `protobuf:"bytes,1,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	ConsumerPath []byte `protobuf:"bytes,2,opt,name=consumer_path,json=consumerPath" json:"consumer_path,omitempty"` // RichYPath
}

func (x *TReqListQueueConsumerRegistrations) Reset() {
	*x = TReqListQueueConsumerRegistrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqListQueueConsumerRegistrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqListQueueConsumerRegistrations) ProtoMessage() {}

func (x *TReqListQueueConsumerRegistrations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqListQueueConsumerRegistrations.ProtoReflect.Descriptor instead.
func (*TReqListQueueConsumerRegistrations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{36}
}

func (x *TReqListQueueConsumerRegistrations) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqListQueueConsumerRegistrations) GetConsumerPath() []byte {
	if x != nil {
		return x.ConsumerPath
	}
	return nil
}

type TRspListQueueConsumerRegistrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registrations []*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration `protobuf:"bytes,1,rep,name=registrations" json:"registrations,omitempty"`
}

func (x *TRspListQueueConsumerRegistrations) Reset() {
	*x = TRspListQueueConsumerRegistrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListQueueConsumerRegistrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListQueueConsumerRegistrations) ProtoMessage() {}

func (x *TRspListQueueConsumerRegistrations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListQueueConsumerRegistrations.ProtoReflect.Descriptor instead.
func (*TRspListQueueConsumerRegistrations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{37}
}

func (x *TRspListQueueConsumerRegistrations) GetRegistrations() []*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration {
	if x != nil {
		return x.Registrations
	}
	return nil
}

type TReqCreateQueueProducerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerPath []byte  `protobuf:"bytes,1,opt,name=producer_path,json=producerPath" json:"producer_path,omitempty"` // RichYPath
	QueuePath    []byte  `protobuf:"bytes,2,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	SessionId    *string `protobuf:"bytes,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	UserMeta     []byte  `protobuf:"bytes,4,opt,name=user_meta,json=userMeta" json:"user_meta,omitempty"` // YSON
}

func (x *TReqCreateQueueProducerSession) Reset() {
	*x = TReqCreateQueueProducerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCreateQueueProducerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCreateQueueProducerSession) ProtoMessage() {}

func (x *TReqCreateQueueProducerSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCreateQueueProducerSession.ProtoReflect.Descriptor instead.
func (*TReqCreateQueueProducerSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{38}
}

func (x *TReqCreateQueueProducerSession) GetProducerPath() []byte {
	if x != nil {
		return x.ProducerPath
	}
	return nil
}

func (x *TReqCreateQueueProducerSession) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqCreateQueueProducerSession) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *TReqCreateQueueProducerSession) GetUserMeta() []byte {
	if x != nil {
		return x.UserMeta
	}
	return nil
}

type TRspCreateQueueProducerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber *int64 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	Epoch          *int64 `protobuf:"varint,2,opt,name=epoch" json:"epoch,omitempty"`
	UserMeta       []byte `protobuf:"bytes,3,opt,name=user_meta,json=userMeta" json:"user_meta,omitempty"` // YSON
}

func (x *TRspCreateQueueProducerSession) Reset() {
	*x = TRspCreateQueueProducerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCreateQueueProducerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCreateQueueProducerSession) ProtoMessage() {}

func (x *TRspCreateQueueProducerSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCreateQueueProducerSession.ProtoReflect.Descriptor instead.
func (*TRspCreateQueueProducerSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{39}
}

func (x *TRspCreateQueueProducerSession) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *TRspCreateQueueProducerSession) GetEpoch() int64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *TRspCreateQueueProducerSession) GetUserMeta() []byte {
	if x != nil {
		return x.UserMeta
	}
	return nil
}

type TReqRemoveQueueProducerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerPath []byte  `protobuf:"bytes,1,opt,name=producer_path,json=producerPath" json:"producer_path,omitempty"` // RichYPath
	QueuePath    []byte  `protobuf:"bytes,2,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	SessionId    *string `protobuf:"bytes,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *TReqRemoveQueueProducerSession) Reset() {
	*x = TReqRemoveQueueProducerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRemoveQueueProducerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRemoveQueueProducerSession) ProtoMessage() {}

func (x *TReqRemoveQueueProducerSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRemoveQueueProducerSession.ProtoReflect.Descriptor instead.
func (*TReqRemoveQueueProducerSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{40}
}

func (x *TReqRemoveQueueProducerSession) GetProducerPath() []byte {
	if x != nil {
		return x.ProducerPath
	}
	return nil
}

func (x *TReqRemoveQueueProducerSession) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TReqRemoveQueueProducerSession) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type TRspRemoveQueueProducerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRemoveQueueProducerSession) Reset() {
	*x = TRspRemoveQueueProducerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRemoveQueueProducerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRemoveQueueProducerSession) ProtoMessage() {}

func (x *TRspRemoveQueueProducerSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRemoveQueueProducerSession.ProtoReflect.Descriptor instead.
func (*TRspRemoveQueueProducerSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{41}
}

type TReqExplainQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query                  *string `protobuf:"bytes,1,req,name=query" json:"query,omitempty"`
	Timestamp              *uint64 `protobuf:"varint,3,opt,name=timestamp,def=4611686018427387649" json:"timestamp,omitempty"`
	InputRowLimit          *uint64 `protobuf:"varint,4,opt,name=input_row_limit,json=inputRowLimit" json:"input_row_limit,omitempty"`
	OutputRowLimit         *uint64 `protobuf:"varint,5,opt,name=output_row_limit,json=outputRowLimit" json:"output_row_limit,omitempty"`
	RangeExpansionLimit    *uint64 `protobuf:"varint,6,opt,name=range_expansion_limit,json=rangeExpansionLimit" json:"range_expansion_limit,omitempty"`
	MaxSubqueries          *int32  `protobuf:"varint,7,opt,name=max_subqueries,json=maxSubqueries" json:"max_subqueries,omitempty"`
	AllowFullScan          *bool   `protobuf:"varint,8,opt,name=allow_full_scan,json=allowFullScan" json:"allow_full_scan,omitempty"`
	AllowJoinWithoutIndex  *bool   `protobuf:"varint,9,opt,name=allow_join_without_index,json=allowJoinWithoutIndex" json:"allow_join_without_index,omitempty"`
	UdfRegistryPath        []byte  `protobuf:"bytes,10,opt,name=udf_registry_path,json=udfRegistryPath" json:"udf_registry_path,omitempty"` // YPath
	ExecutionPool          *string `protobuf:"bytes,11,opt,name=execution_pool,json=executionPool" json:"execution_pool,omitempty"`
	NewRangeInference      *bool   `protobuf:"varint,12,opt,name=new_range_inference,json=newRangeInference" json:"new_range_inference,omitempty"`
	SyntaxVersion          *int32  `protobuf:"varint,13,opt,name=syntax_version,json=syntaxVersion,def=1" json:"syntax_version,omitempty"`
	MinRowCountPerSubquery *int64  `protobuf:"varint,14,opt,name=min_row_count_per_subquery,json=minRowCountPerSubquery" json:"min_row_count_per_subquery,omitempty"`
}

// Default values for TReqExplainQuery fields.
const (
	Default_TReqExplainQuery_Timestamp     = uint64(4611686018427387649)
	Default_TReqExplainQuery_SyntaxVersion = int32(1)
)

func (x *TReqExplainQuery) Reset() {
	*x = TReqExplainQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqExplainQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqExplainQuery) ProtoMessage() {}

func (x *TReqExplainQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqExplainQuery.ProtoReflect.Descriptor instead.
func (*TReqExplainQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{42}
}

func (x *TReqExplainQuery) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *TReqExplainQuery) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return Default_TReqExplainQuery_Timestamp
}

func (x *TReqExplainQuery) GetInputRowLimit() uint64 {
	if x != nil && x.InputRowLimit != nil {
		return *x.InputRowLimit
	}
	return 0
}

func (x *TReqExplainQuery) GetOutputRowLimit() uint64 {
	if x != nil && x.OutputRowLimit != nil {
		return *x.OutputRowLimit
	}
	return 0
}

func (x *TReqExplainQuery) GetRangeExpansionLimit() uint64 {
	if x != nil && x.RangeExpansionLimit != nil {
		return *x.RangeExpansionLimit
	}
	return 0
}

func (x *TReqExplainQuery) GetMaxSubqueries() int32 {
	if x != nil && x.MaxSubqueries != nil {
		return *x.MaxSubqueries
	}
	return 0
}

func (x *TReqExplainQuery) GetAllowFullScan() bool {
	if x != nil && x.AllowFullScan != nil {
		return *x.AllowFullScan
	}
	return false
}

func (x *TReqExplainQuery) GetAllowJoinWithoutIndex() bool {
	if x != nil && x.AllowJoinWithoutIndex != nil {
		return *x.AllowJoinWithoutIndex
	}
	return false
}

func (x *TReqExplainQuery) GetUdfRegistryPath() []byte {
	if x != nil {
		return x.UdfRegistryPath
	}
	return nil
}

func (x *TReqExplainQuery) GetExecutionPool() string {
	if x != nil && x.ExecutionPool != nil {
		return *x.ExecutionPool
	}
	return ""
}

func (x *TReqExplainQuery) GetNewRangeInference() bool {
	if x != nil && x.NewRangeInference != nil {
		return *x.NewRangeInference
	}
	return false
}

func (x *TReqExplainQuery) GetSyntaxVersion() int32 {
	if x != nil && x.SyntaxVersion != nil {
		return *x.SyntaxVersion
	}
	return Default_TReqExplainQuery_SyntaxVersion
}

func (x *TReqExplainQuery) GetMinRowCountPerSubquery() int64 {
	if x != nil && x.MinRowCountPerSubquery != nil {
		return *x.MinRowCountPerSubquery
	}
	return 0
}

type TRspExplainQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"` // YSON
}

func (x *TRspExplainQuery) Reset() {
	*x = TRspExplainQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspExplainQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspExplainQuery) ProtoMessage() {}

func (x *TRspExplainQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspExplainQuery.ProtoReflect.Descriptor instead.
func (*TRspExplainQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{43}
}

func (x *TRspExplainQuery) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TReplicationRowIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId *misc.TGuid `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	RowIndex *int64      `protobuf:"varint,2,req,name=row_index,json=rowIndex" json:"row_index,omitempty"`
}

func (x *TReplicationRowIndex) Reset() {
	*x = TReplicationRowIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReplicationRowIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReplicationRowIndex) ProtoMessage() {}

func (x *TReplicationRowIndex) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReplicationRowIndex.ProtoReflect.Descriptor instead.
func (*TReplicationRowIndex) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{44}
}

func (x *TReplicationRowIndex) GetTabletId() *misc.TGuid {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *TReplicationRowIndex) GetRowIndex() int64 {
	if x != nil && x.RowIndex != nil {
		return *x.RowIndex
	}
	return 0
}

type TReqPullRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                       []byte                             `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	UpstreamReplicaId          *misc.TGuid                        `protobuf:"bytes,2,req,name=upstream_replica_id,json=upstreamReplicaId" json:"upstream_replica_id,omitempty"`
	OrderRowsByTimestamp       *bool                              `protobuf:"varint,3,req,name=order_rows_by_timestamp,json=orderRowsByTimestamp" json:"order_rows_by_timestamp,omitempty"`
	TabletRowsPerRead          *int64                             `protobuf:"varint,4,req,name=tablet_rows_per_read,json=tabletRowsPerRead" json:"tablet_rows_per_read,omitempty"`
	ReplicationProgress        *chaos_client.TReplicationProgress `protobuf:"bytes,5,req,name=replication_progress,json=replicationProgress" json:"replication_progress,omitempty"`
	UpperTimestamp             *uint64                            `protobuf:"varint,6,opt,name=upper_timestamp,json=upperTimestamp" json:"upper_timestamp,omitempty"`
	StartReplicationRowIndexes []*TReplicationRowIndex            `protobuf:"bytes,7,rep,name=start_replication_row_indexes,json=startReplicationRowIndexes" json:"start_replication_row_indexes,omitempty"`
}

func (x *TReqPullRows) Reset() {
	*x = TReqPullRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPullRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPullRows) ProtoMessage() {}

func (x *TReqPullRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPullRows.ProtoReflect.Descriptor instead.
func (*TReqPullRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{45}
}

func (x *TReqPullRows) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqPullRows) GetUpstreamReplicaId() *misc.TGuid {
	if x != nil {
		return x.UpstreamReplicaId
	}
	return nil
}

func (x *TReqPullRows) GetOrderRowsByTimestamp() bool {
	if x != nil && x.OrderRowsByTimestamp != nil {
		return *x.OrderRowsByTimestamp
	}
	return false
}

func (x *TReqPullRows) GetTabletRowsPerRead() int64 {
	if x != nil && x.TabletRowsPerRead != nil {
		return *x.TabletRowsPerRead
	}
	return 0
}

func (x *TReqPullRows) GetReplicationProgress() *chaos_client.TReplicationProgress {
	if x != nil {
		return x.ReplicationProgress
	}
	return nil
}

func (x *TReqPullRows) GetUpperTimestamp() uint64 {
	if x != nil && x.UpperTimestamp != nil {
		return *x.UpperTimestamp
	}
	return 0
}

func (x *TReqPullRows) GetStartReplicationRowIndexes() []*TReplicationRowIndex {
	if x != nil {
		return x.StartReplicationRowIndexes
	}
	return nil
}

type TRspPullRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowCount                 *int64                             `protobuf:"varint,1,req,name=row_count,json=rowCount" json:"row_count,omitempty"`
	DataWeight               *int64                             `protobuf:"varint,2,req,name=data_weight,json=dataWeight" json:"data_weight,omitempty"`
	ReplicationProgress      *chaos_client.TReplicationProgress `protobuf:"bytes,3,req,name=replication_progress,json=replicationProgress" json:"replication_progress,omitempty"`
	EndReplicationRowIndexes []*TReplicationRowIndex            `protobuf:"bytes,4,rep,name=end_replication_row_indexes,json=endReplicationRowIndexes" json:"end_replication_row_indexes,omitempty"`
	RowsetDescriptor         *TRowsetDescriptor                 `protobuf:"bytes,5,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	Versioned                *bool                              `protobuf:"varint,6,opt,name=versioned,def=1" json:"versioned,omitempty"`
}

// Default values for TRspPullRows fields.
const (
	Default_TRspPullRows_Versioned = bool(true)
)

func (x *TRspPullRows) Reset() {
	*x = TRspPullRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPullRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPullRows) ProtoMessage() {}

func (x *TRspPullRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPullRows.ProtoReflect.Descriptor instead.
func (*TRspPullRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{46}
}

func (x *TRspPullRows) GetRowCount() int64 {
	if x != nil && x.RowCount != nil {
		return *x.RowCount
	}
	return 0
}

func (x *TRspPullRows) GetDataWeight() int64 {
	if x != nil && x.DataWeight != nil {
		return *x.DataWeight
	}
	return 0
}

func (x *TRspPullRows) GetReplicationProgress() *chaos_client.TReplicationProgress {
	if x != nil {
		return x.ReplicationProgress
	}
	return nil
}

func (x *TRspPullRows) GetEndReplicationRowIndexes() []*TReplicationRowIndex {
	if x != nil {
		return x.EndReplicationRowIndexes
	}
	return nil
}

func (x *TRspPullRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspPullRows) GetVersioned() bool {
	if x != nil && x.Versioned != nil {
		return *x.Versioned
	}
	return Default_TRspPullRows_Versioned
}

type TReqGetInSyncReplicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                      []byte             `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Timestamp                 *uint64            `protobuf:"varint,2,opt,name=timestamp,def=0" json:"timestamp,omitempty"`
	CachedSyncReplicasTimeout *uint64            `protobuf:"varint,3,opt,name=cached_sync_replicas_timeout,json=cachedSyncReplicasTimeout" json:"cached_sync_replicas_timeout,omitempty"` // TDuration
	RowsetDescriptor          *TRowsetDescriptor `protobuf:"bytes,200,opt,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
}

// Default values for TReqGetInSyncReplicas fields.
const (
	Default_TReqGetInSyncReplicas_Timestamp = uint64(0)
)

func (x *TReqGetInSyncReplicas) Reset() {
	*x = TReqGetInSyncReplicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetInSyncReplicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetInSyncReplicas) ProtoMessage() {}

func (x *TReqGetInSyncReplicas) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetInSyncReplicas.ProtoReflect.Descriptor instead.
func (*TReqGetInSyncReplicas) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{47}
}

func (x *TReqGetInSyncReplicas) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqGetInSyncReplicas) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return Default_TReqGetInSyncReplicas_Timestamp
}

func (x *TReqGetInSyncReplicas) GetCachedSyncReplicasTimeout() uint64 {
	if x != nil && x.CachedSyncReplicasTimeout != nil {
		return *x.CachedSyncReplicasTimeout
	}
	return 0
}

func (x *TReqGetInSyncReplicas) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

type TRspGetInSyncReplicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaIds []*misc.TGuid `protobuf:"bytes,1,rep,name=replica_ids,json=replicaIds" json:"replica_ids,omitempty"`
}

func (x *TRspGetInSyncReplicas) Reset() {
	*x = TRspGetInSyncReplicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetInSyncReplicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetInSyncReplicas) ProtoMessage() {}

func (x *TRspGetInSyncReplicas) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetInSyncReplicas.ProtoReflect.Descriptor instead.
func (*TRspGetInSyncReplicas) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{48}
}

func (x *TRspGetInSyncReplicas) GetReplicaIds() []*misc.TGuid {
	if x != nil {
		return x.ReplicaIds
	}
	return nil
}

type TReqGetTabletInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          []byte  `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	TabletIndexes []int32 `protobuf:"varint,2,rep,name=tablet_indexes,json=tabletIndexes" json:"tablet_indexes,omitempty"`
	RequestErrors *bool   `protobuf:"varint,3,opt,name=request_errors,json=requestErrors,def=0" json:"request_errors,omitempty"`
}

// Default values for TReqGetTabletInfos fields.
const (
	Default_TReqGetTabletInfos_RequestErrors = bool(false)
)

func (x *TReqGetTabletInfos) Reset() {
	*x = TReqGetTabletInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetTabletInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetTabletInfos) ProtoMessage() {}

func (x *TReqGetTabletInfos) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetTabletInfos.ProtoReflect.Descriptor instead.
func (*TReqGetTabletInfos) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{49}
}

func (x *TReqGetTabletInfos) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqGetTabletInfos) GetTabletIndexes() []int32 {
	if x != nil {
		return x.TabletIndexes
	}
	return nil
}

func (x *TReqGetTabletInfos) GetRequestErrors() bool {
	if x != nil && x.RequestErrors != nil {
		return *x.RequestErrors
	}
	return Default_TReqGetTabletInfos_RequestErrors
}

type TRspGetTabletInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tablets []*TRspGetTabletInfos_TTabletInfo `protobuf:"bytes,1,rep,name=tablets" json:"tablets,omitempty"`
}

func (x *TRspGetTabletInfos) Reset() {
	*x = TRspGetTabletInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTabletInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTabletInfos) ProtoMessage() {}

func (x *TRspGetTabletInfos) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTabletInfos.ProtoReflect.Descriptor instead.
func (*TRspGetTabletInfos) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{50}
}

func (x *TRspGetTabletInfos) GetTablets() []*TRspGetTabletInfos_TTabletInfo {
	if x != nil {
		return x.Tablets
	}
	return nil
}

type TReqGetTabletErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Limit *int64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (x *TReqGetTabletErrors) Reset() {
	*x = TReqGetTabletErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetTabletErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetTabletErrors) ProtoMessage() {}

func (x *TReqGetTabletErrors) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetTabletErrors.ProtoReflect.Descriptor instead.
func (*TReqGetTabletErrors) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{51}
}

func (x *TReqGetTabletErrors) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqGetTabletErrors) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type TRspGetTabletErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletIds         []*misc.TGuid                     `protobuf:"bytes,1,rep,name=tablet_ids,json=tabletIds" json:"tablet_ids,omitempty"`
	TabletErrors      []*TRspGetTabletErrors_TErrorList `protobuf:"bytes,2,rep,name=tablet_errors,json=tabletErrors" json:"tablet_errors,omitempty"`
	ReplicaIds        []*misc.TGuid                     `protobuf:"bytes,3,rep,name=replica_ids,json=replicaIds" json:"replica_ids,omitempty"`
	ReplicationErrors []*TRspGetTabletErrors_TErrorList `protobuf:"bytes,4,rep,name=replication_errors,json=replicationErrors" json:"replication_errors,omitempty"`
	Incomplete        *bool                             `protobuf:"varint,5,opt,name=incomplete" json:"incomplete,omitempty"`
}

func (x *TRspGetTabletErrors) Reset() {
	*x = TRspGetTabletErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTabletErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTabletErrors) ProtoMessage() {}

func (x *TRspGetTabletErrors) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTabletErrors.ProtoReflect.Descriptor instead.
func (*TRspGetTabletErrors) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{52}
}

func (x *TRspGetTabletErrors) GetTabletIds() []*misc.TGuid {
	if x != nil {
		return x.TabletIds
	}
	return nil
}

func (x *TRspGetTabletErrors) GetTabletErrors() []*TRspGetTabletErrors_TErrorList {
	if x != nil {
		return x.TabletErrors
	}
	return nil
}

func (x *TRspGetTabletErrors) GetReplicaIds() []*misc.TGuid {
	if x != nil {
		return x.ReplicaIds
	}
	return nil
}

func (x *TRspGetTabletErrors) GetReplicationErrors() []*TRspGetTabletErrors_TErrorList {
	if x != nil {
		return x.ReplicationErrors
	}
	return nil
}

func (x *TRspGetTabletErrors) GetIncomplete() bool {
	if x != nil && x.Incomplete != nil {
		return *x.Incomplete
	}
	return false
}

type TReqModifyRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Modifications are sent asynchronously. Sequential numbering is
	// required to restore their order (optional for compatibility).
	SequenceNumber *int64 `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	// Modifications can be sent from several sources in case of several clients
	// attached to the same transaction.
	//
	// Modifications within one source will be serialized by this source sequence numbers.
	// Modifications from different sources will be serialized arbitrarily, that is why
	// different sources must send independent modifications.
	//
	// If sequence number is missing, source id is ignored.
	// Otherwise missing source id is interpreted as source id = 0.
	SequenceNumberSourceId *int64                 `protobuf:"varint,9,opt,name=sequence_number_source_id,json=sequenceNumberSourceId" json:"sequence_number_source_id,omitempty"`
	TransactionId          *misc.TGuid            `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	Path                   []byte                 `protobuf:"bytes,2,req,name=path" json:"path,omitempty"` // YPath
	RowModificationTypes   []ERowModificationType `protobuf:"varint,3,rep,name=row_modification_types,json=rowModificationTypes,enum=NYT.NApi.NRpcProxy.NProto.ERowModificationType" json:"row_modification_types,omitempty"`
	// COMPAT(lukyan): Remove after RPC protocol version update
	RowLegacyReadLocks []uint32 `protobuf:"varint,7,rep,name=row_legacy_read_locks,json=rowLegacyReadLocks" json:"row_legacy_read_locks,omitempty"`
	// COMPAT(ponasenko-rs): Remove after RPC protocol version update
	RowLegacyLocks         []uint64                   `protobuf:"varint,8,rep,name=row_legacy_locks,json=rowLegacyLocks" json:"row_legacy_locks,omitempty"`
	RequireSyncReplica     *bool                      `protobuf:"varint,4,opt,name=require_sync_replica,json=requireSyncReplica" json:"require_sync_replica,omitempty"`
	UpstreamReplicaId      *misc.TGuid                `protobuf:"bytes,5,opt,name=upstream_replica_id,json=upstreamReplicaId" json:"upstream_replica_id,omitempty"`
	AllowMissingKeyColumns *bool                      `protobuf:"varint,10,opt,name=allow_missing_key_columns,json=allowMissingKeyColumns" json:"allow_missing_key_columns,omitempty"`
	RowLocks               []*tablet_client.TLockMask `protobuf:"bytes,11,rep,name=row_locks,json=rowLocks" json:"row_locks,omitempty"`
	RowsetDescriptor       *TRowsetDescriptor         `protobuf:"bytes,200,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
}

func (x *TReqModifyRows) Reset() {
	*x = TReqModifyRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqModifyRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqModifyRows) ProtoMessage() {}

func (x *TReqModifyRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqModifyRows.ProtoReflect.Descriptor instead.
func (*TReqModifyRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{53}
}

func (x *TReqModifyRows) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *TReqModifyRows) GetSequenceNumberSourceId() int64 {
	if x != nil && x.SequenceNumberSourceId != nil {
		return *x.SequenceNumberSourceId
	}
	return 0
}

func (x *TReqModifyRows) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqModifyRows) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqModifyRows) GetRowModificationTypes() []ERowModificationType {
	if x != nil {
		return x.RowModificationTypes
	}
	return nil
}

func (x *TReqModifyRows) GetRowLegacyReadLocks() []uint32 {
	if x != nil {
		return x.RowLegacyReadLocks
	}
	return nil
}

func (x *TReqModifyRows) GetRowLegacyLocks() []uint64 {
	if x != nil {
		return x.RowLegacyLocks
	}
	return nil
}

func (x *TReqModifyRows) GetRequireSyncReplica() bool {
	if x != nil && x.RequireSyncReplica != nil {
		return *x.RequireSyncReplica
	}
	return false
}

func (x *TReqModifyRows) GetUpstreamReplicaId() *misc.TGuid {
	if x != nil {
		return x.UpstreamReplicaId
	}
	return nil
}

func (x *TReqModifyRows) GetAllowMissingKeyColumns() bool {
	if x != nil && x.AllowMissingKeyColumns != nil {
		return *x.AllowMissingKeyColumns
	}
	return false
}

func (x *TReqModifyRows) GetRowLocks() []*tablet_client.TLockMask {
	if x != nil {
		return x.RowLocks
	}
	return nil
}

func (x *TReqModifyRows) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

type TRspModifyRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspModifyRows) Reset() {
	*x = TRspModifyRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspModifyRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspModifyRows) ProtoMessage() {}

func (x *TRspModifyRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspModifyRows.ProtoReflect.Descriptor instead.
func (*TRspModifyRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{54}
}

type TReqBatchModifyRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId *misc.TGuid `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	PartCounts    []int64     `protobuf:"varint,2,rep,name=part_counts,json=partCounts" json:"part_counts,omitempty"`
}

func (x *TReqBatchModifyRows) Reset() {
	*x = TReqBatchModifyRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqBatchModifyRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqBatchModifyRows) ProtoMessage() {}

func (x *TReqBatchModifyRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqBatchModifyRows.ProtoReflect.Descriptor instead.
func (*TReqBatchModifyRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{55}
}

func (x *TReqBatchModifyRows) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqBatchModifyRows) GetPartCounts() []int64 {
	if x != nil {
		return x.PartCounts
	}
	return nil
}

type TRspBatchModifyRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspBatchModifyRows) Reset() {
	*x = TRspBatchModifyRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspBatchModifyRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspBatchModifyRows) ProtoMessage() {}

func (x *TRspBatchModifyRows) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspBatchModifyRows.ProtoReflect.Descriptor instead.
func (*TRspBatchModifyRows) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{56}
}

type TReqBuildSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId                    *misc.TGuid `protobuf:"bytes,1,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	SetReadOnly               *bool       `protobuf:"varint,2,opt,name=set_read_only,json=setReadOnly,def=0" json:"set_read_only,omitempty"`
	WaitForSnapshotCompletion *bool       `protobuf:"varint,3,opt,name=wait_for_snapshot_completion,json=waitForSnapshotCompletion,def=1" json:"wait_for_snapshot_completion,omitempty"`
}

// Default values for TReqBuildSnapshot fields.
const (
	Default_TReqBuildSnapshot_SetReadOnly               = bool(false)
	Default_TReqBuildSnapshot_WaitForSnapshotCompletion = bool(true)
)

func (x *TReqBuildSnapshot) Reset() {
	*x = TReqBuildSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqBuildSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqBuildSnapshot) ProtoMessage() {}

func (x *TReqBuildSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqBuildSnapshot.ProtoReflect.Descriptor instead.
func (*TReqBuildSnapshot) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{57}
}

func (x *TReqBuildSnapshot) GetCellId() *misc.TGuid {
	if x != nil {
		return x.CellId
	}
	return nil
}

func (x *TReqBuildSnapshot) GetSetReadOnly() bool {
	if x != nil && x.SetReadOnly != nil {
		return *x.SetReadOnly
	}
	return Default_TReqBuildSnapshot_SetReadOnly
}

func (x *TReqBuildSnapshot) GetWaitForSnapshotCompletion() bool {
	if x != nil && x.WaitForSnapshotCompletion != nil {
		return *x.WaitForSnapshotCompletion
	}
	return Default_TReqBuildSnapshot_WaitForSnapshotCompletion
}

type TRspBuildSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId *int64 `protobuf:"varint,1,req,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
}

func (x *TRspBuildSnapshot) Reset() {
	*x = TRspBuildSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspBuildSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspBuildSnapshot) ProtoMessage() {}

func (x *TRspBuildSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspBuildSnapshot.ProtoReflect.Descriptor instead.
func (*TRspBuildSnapshot) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{58}
}

func (x *TRspBuildSnapshot) GetSnapshotId() int64 {
	if x != nil && x.SnapshotId != nil {
		return *x.SnapshotId
	}
	return 0
}

type TReqExitReadOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId *misc.TGuid `protobuf:"bytes,1,req,name=cell_id,json=cellId" json:"cell_id,omitempty"`
}

func (x *TReqExitReadOnly) Reset() {
	*x = TReqExitReadOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqExitReadOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqExitReadOnly) ProtoMessage() {}

func (x *TReqExitReadOnly) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqExitReadOnly.ProtoReflect.Descriptor instead.
func (*TReqExitReadOnly) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{59}
}

func (x *TReqExitReadOnly) GetCellId() *misc.TGuid {
	if x != nil {
		return x.CellId
	}
	return nil
}

type TRspExitReadOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspExitReadOnly) Reset() {
	*x = TRspExitReadOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspExitReadOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspExitReadOnly) ProtoMessage() {}

func (x *TRspExitReadOnly) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspExitReadOnly.ProtoReflect.Descriptor instead.
func (*TRspExitReadOnly) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{60}
}

type TReqMasterExitReadOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retry *bool `protobuf:"varint,1,req,name=retry" json:"retry,omitempty"`
}

func (x *TReqMasterExitReadOnly) Reset() {
	*x = TReqMasterExitReadOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMasterExitReadOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMasterExitReadOnly) ProtoMessage() {}

func (x *TReqMasterExitReadOnly) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMasterExitReadOnly.ProtoReflect.Descriptor instead.
func (*TReqMasterExitReadOnly) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{61}
}

func (x *TReqMasterExitReadOnly) GetRetry() bool {
	if x != nil && x.Retry != nil {
		return *x.Retry
	}
	return false
}

type TRspMasterExitReadOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspMasterExitReadOnly) Reset() {
	*x = TRspMasterExitReadOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMasterExitReadOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMasterExitReadOnly) ProtoMessage() {}

func (x *TRspMasterExitReadOnly) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMasterExitReadOnly.ProtoReflect.Descriptor instead.
func (*TRspMasterExitReadOnly) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{62}
}

type TReqDiscombobulateNonvotingPeers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId *misc.TGuid `protobuf:"bytes,1,req,name=cell_id,json=cellId" json:"cell_id,omitempty"`
}

func (x *TReqDiscombobulateNonvotingPeers) Reset() {
	*x = TReqDiscombobulateNonvotingPeers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDiscombobulateNonvotingPeers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDiscombobulateNonvotingPeers) ProtoMessage() {}

func (x *TReqDiscombobulateNonvotingPeers) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDiscombobulateNonvotingPeers.ProtoReflect.Descriptor instead.
func (*TReqDiscombobulateNonvotingPeers) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{63}
}

func (x *TReqDiscombobulateNonvotingPeers) GetCellId() *misc.TGuid {
	if x != nil {
		return x.CellId
	}
	return nil
}

type TRspDiscombobulateNonvotingPeers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspDiscombobulateNonvotingPeers) Reset() {
	*x = TRspDiscombobulateNonvotingPeers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDiscombobulateNonvotingPeers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDiscombobulateNonvotingPeers) ProtoMessage() {}

func (x *TRspDiscombobulateNonvotingPeers) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDiscombobulateNonvotingPeers.ProtoReflect.Descriptor instead.
func (*TRspDiscombobulateNonvotingPeers) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{64}
}

type TReqGCCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId *misc.TGuid `protobuf:"bytes,1,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
}

func (x *TReqGCCollect) Reset() {
	*x = TReqGCCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGCCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGCCollect) ProtoMessage() {}

func (x *TReqGCCollect) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGCCollect.ProtoReflect.Descriptor instead.
func (*TReqGCCollect) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{65}
}

func (x *TReqGCCollect) GetCellId() *misc.TGuid {
	if x != nil {
		return x.CellId
	}
	return nil
}

type TRspGCCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspGCCollect) Reset() {
	*x = TRspGCCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGCCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGCCollect) ProtoMessage() {}

func (x *TRspGCCollect) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGCCollect.ProtoReflect.Descriptor instead.
func (*TRspGCCollect) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{66}
}

type TReqSuspendCoordinator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoordinatorCellId *misc.TGuid `protobuf:"bytes,1,opt,name=coordinator_cell_id,json=coordinatorCellId" json:"coordinator_cell_id,omitempty"`
}

func (x *TReqSuspendCoordinator) Reset() {
	*x = TReqSuspendCoordinator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSuspendCoordinator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSuspendCoordinator) ProtoMessage() {}

func (x *TReqSuspendCoordinator) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSuspendCoordinator.ProtoReflect.Descriptor instead.
func (*TReqSuspendCoordinator) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{67}
}

func (x *TReqSuspendCoordinator) GetCoordinatorCellId() *misc.TGuid {
	if x != nil {
		return x.CoordinatorCellId
	}
	return nil
}

type TRspSuspendCoordinator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspSuspendCoordinator) Reset() {
	*x = TRspSuspendCoordinator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSuspendCoordinator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSuspendCoordinator) ProtoMessage() {}

func (x *TRspSuspendCoordinator) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSuspendCoordinator.ProtoReflect.Descriptor instead.
func (*TRspSuspendCoordinator) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{68}
}

type TReqResumeCoordinator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoordinatorCellId *misc.TGuid `protobuf:"bytes,1,opt,name=coordinator_cell_id,json=coordinatorCellId" json:"coordinator_cell_id,omitempty"`
}

func (x *TReqResumeCoordinator) Reset() {
	*x = TReqResumeCoordinator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqResumeCoordinator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqResumeCoordinator) ProtoMessage() {}

func (x *TReqResumeCoordinator) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqResumeCoordinator.ProtoReflect.Descriptor instead.
func (*TReqResumeCoordinator) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{69}
}

func (x *TReqResumeCoordinator) GetCoordinatorCellId() *misc.TGuid {
	if x != nil {
		return x.CoordinatorCellId
	}
	return nil
}

type TRspResumeCoordinator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspResumeCoordinator) Reset() {
	*x = TRspResumeCoordinator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspResumeCoordinator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspResumeCoordinator) ProtoMessage() {}

func (x *TRspResumeCoordinator) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspResumeCoordinator.ProtoReflect.Descriptor instead.
func (*TRspResumeCoordinator) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{70}
}

type TReqMigrateReplicationCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChaosCellId        *misc.TGuid   `protobuf:"bytes,1,req,name=chaos_cell_id,json=chaosCellId" json:"chaos_cell_id,omitempty"`
	DestinationCellId  *misc.TGuid   `protobuf:"bytes,2,opt,name=destination_cell_id,json=destinationCellId" json:"destination_cell_id,omitempty"`
	ReplicationCardIds []*misc.TGuid `protobuf:"bytes,3,rep,name=replication_card_ids,json=replicationCardIds" json:"replication_card_ids,omitempty"`
}

func (x *TReqMigrateReplicationCards) Reset() {
	*x = TReqMigrateReplicationCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMigrateReplicationCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMigrateReplicationCards) ProtoMessage() {}

func (x *TReqMigrateReplicationCards) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMigrateReplicationCards.ProtoReflect.Descriptor instead.
func (*TReqMigrateReplicationCards) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{71}
}

func (x *TReqMigrateReplicationCards) GetChaosCellId() *misc.TGuid {
	if x != nil {
		return x.ChaosCellId
	}
	return nil
}

func (x *TReqMigrateReplicationCards) GetDestinationCellId() *misc.TGuid {
	if x != nil {
		return x.DestinationCellId
	}
	return nil
}

func (x *TReqMigrateReplicationCards) GetReplicationCardIds() []*misc.TGuid {
	if x != nil {
		return x.ReplicationCardIds
	}
	return nil
}

type TRspMigrateReplicationCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspMigrateReplicationCards) Reset() {
	*x = TRspMigrateReplicationCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMigrateReplicationCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMigrateReplicationCards) ProtoMessage() {}

func (x *TRspMigrateReplicationCards) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMigrateReplicationCards.ProtoReflect.Descriptor instead.
func (*TRspMigrateReplicationCards) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{72}
}

type TReqSuspendChaosCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellIds []*misc.TGuid `protobuf:"bytes,1,rep,name=cell_ids,json=cellIds" json:"cell_ids,omitempty"`
}

func (x *TReqSuspendChaosCells) Reset() {
	*x = TReqSuspendChaosCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSuspendChaosCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSuspendChaosCells) ProtoMessage() {}

func (x *TReqSuspendChaosCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSuspendChaosCells.ProtoReflect.Descriptor instead.
func (*TReqSuspendChaosCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{73}
}

func (x *TReqSuspendChaosCells) GetCellIds() []*misc.TGuid {
	if x != nil {
		return x.CellIds
	}
	return nil
}

type TRspSuspendChaosCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspSuspendChaosCells) Reset() {
	*x = TRspSuspendChaosCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSuspendChaosCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSuspendChaosCells) ProtoMessage() {}

func (x *TRspSuspendChaosCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSuspendChaosCells.ProtoReflect.Descriptor instead.
func (*TRspSuspendChaosCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{74}
}

type TReqResumeChaosCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellIds []*misc.TGuid `protobuf:"bytes,1,rep,name=cell_ids,json=cellIds" json:"cell_ids,omitempty"`
}

func (x *TReqResumeChaosCells) Reset() {
	*x = TReqResumeChaosCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqResumeChaosCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqResumeChaosCells) ProtoMessage() {}

func (x *TReqResumeChaosCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqResumeChaosCells.ProtoReflect.Descriptor instead.
func (*TReqResumeChaosCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{75}
}

func (x *TReqResumeChaosCells) GetCellIds() []*misc.TGuid {
	if x != nil {
		return x.CellIds
	}
	return nil
}

type TRspResumeChaosCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspResumeChaosCells) Reset() {
	*x = TRspResumeChaosCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspResumeChaosCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspResumeChaosCells) ProtoMessage() {}

func (x *TRspResumeChaosCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspResumeChaosCells.ProtoReflect.Descriptor instead.
func (*TRspResumeChaosCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{76}
}

type TReqSuspendTabletCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellIds []*misc.TGuid `protobuf:"bytes,1,rep,name=cell_ids,json=cellIds" json:"cell_ids,omitempty"`
}

func (x *TReqSuspendTabletCells) Reset() {
	*x = TReqSuspendTabletCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSuspendTabletCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSuspendTabletCells) ProtoMessage() {}

func (x *TReqSuspendTabletCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSuspendTabletCells.ProtoReflect.Descriptor instead.
func (*TReqSuspendTabletCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{77}
}

func (x *TReqSuspendTabletCells) GetCellIds() []*misc.TGuid {
	if x != nil {
		return x.CellIds
	}
	return nil
}

type TRspSuspendTabletCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspSuspendTabletCells) Reset() {
	*x = TRspSuspendTabletCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSuspendTabletCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSuspendTabletCells) ProtoMessage() {}

func (x *TRspSuspendTabletCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSuspendTabletCells.ProtoReflect.Descriptor instead.
func (*TRspSuspendTabletCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{78}
}

type TReqResumeTabletCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellIds []*misc.TGuid `protobuf:"bytes,1,rep,name=cell_ids,json=cellIds" json:"cell_ids,omitempty"`
}

func (x *TReqResumeTabletCells) Reset() {
	*x = TReqResumeTabletCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqResumeTabletCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqResumeTabletCells) ProtoMessage() {}

func (x *TReqResumeTabletCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqResumeTabletCells.ProtoReflect.Descriptor instead.
func (*TReqResumeTabletCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{79}
}

func (x *TReqResumeTabletCells) GetCellIds() []*misc.TGuid {
	if x != nil {
		return x.CellIds
	}
	return nil
}

type TRspResumeTabletCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspResumeTabletCells) Reset() {
	*x = TRspResumeTabletCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspResumeTabletCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspResumeTabletCells) ProtoMessage() {}

func (x *TRspResumeTabletCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspResumeTabletCells.ProtoReflect.Descriptor instead.
func (*TRspResumeTabletCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{80}
}

type TReqAddMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *EMaintenanceComponent `protobuf:"varint,1,req,name=component,enum=NYT.NApi.NRpcProxy.NProto.EMaintenanceComponent" json:"component,omitempty"`
	Address   *string                `protobuf:"bytes,2,req,name=address" json:"address,omitempty"`
	Type      *EMaintenanceType      `protobuf:"varint,3,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.EMaintenanceType" json:"type,omitempty"`
	Comment   *string                `protobuf:"bytes,4,req,name=comment" json:"comment,omitempty"`
	// COMPAT(kvk1920): For compatibility with pre-24.2 RPC clients.
	SupportsPerTargetResponse *bool `protobuf:"varint,5,opt,name=supports_per_target_response,json=supportsPerTargetResponse,def=0" json:"supports_per_target_response,omitempty"`
}

// Default values for TReqAddMaintenance fields.
const (
	Default_TReqAddMaintenance_SupportsPerTargetResponse = bool(false)
)

func (x *TReqAddMaintenance) Reset() {
	*x = TReqAddMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAddMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAddMaintenance) ProtoMessage() {}

func (x *TReqAddMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAddMaintenance.ProtoReflect.Descriptor instead.
func (*TReqAddMaintenance) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{81}
}

func (x *TReqAddMaintenance) GetComponent() EMaintenanceComponent {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return EMaintenanceComponent_MC_CLUSTER_NODE
}

func (x *TReqAddMaintenance) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *TReqAddMaintenance) GetType() EMaintenanceType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EMaintenanceType_MT_BAN
}

func (x *TReqAddMaintenance) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *TReqAddMaintenance) GetSupportsPerTargetResponse() bool {
	if x != nil && x.SupportsPerTargetResponse != nil {
		return *x.SupportsPerTargetResponse
	}
	return Default_TReqAddMaintenance_SupportsPerTargetResponse
}

type TRspAddMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// COMPAT(kvk1920): For compatibility with pre-24.2 RPC clients.
	Id *misc.TGuid `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"` // TMaintenanceId
	// Key: component address
	// Value: TMaintenanceId
	IdPerTarget map[string]*misc.TGuid `protobuf:"bytes,2,rep,name=id_per_target,json=idPerTarget" json:"id_per_target,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *TRspAddMaintenance) Reset() {
	*x = TRspAddMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAddMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAddMaintenance) ProtoMessage() {}

func (x *TRspAddMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAddMaintenance.ProtoReflect.Descriptor instead.
func (*TRspAddMaintenance) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{82}
}

func (x *TRspAddMaintenance) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TRspAddMaintenance) GetIdPerTarget() map[string]*misc.TGuid {
	if x != nil {
		return x.IdPerTarget
	}
	return nil
}

type TReqRemoveMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *EMaintenanceComponent `protobuf:"varint,1,req,name=component,enum=NYT.NApi.NRpcProxy.NProto.EMaintenanceComponent" json:"component,omitempty"`
	Address   *string                `protobuf:"bytes,2,req,name=address" json:"address,omitempty"`
	Ids       []*misc.TGuid          `protobuf:"bytes,3,rep,name=ids" json:"ids,omitempty"` // TMaintenanceId
	Type      *EMaintenanceType      `protobuf:"varint,4,opt,name=type,enum=NYT.NApi.NRpcProxy.NProto.EMaintenanceType" json:"type,omitempty"`
	User      *string                `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	Mine      *bool                  `protobuf:"varint,6,opt,name=mine,def=0" json:"mine,omitempty"`
	// COMPAT(kvk1920): Compatibility with pre-24.2 RPC clients.
	SupportsPerTargetResponse *bool `protobuf:"varint,7,opt,name=supports_per_target_response,json=supportsPerTargetResponse,def=0" json:"supports_per_target_response,omitempty"`
}

// Default values for TReqRemoveMaintenance fields.
const (
	Default_TReqRemoveMaintenance_Mine                      = bool(false)
	Default_TReqRemoveMaintenance_SupportsPerTargetResponse = bool(false)
)

func (x *TReqRemoveMaintenance) Reset() {
	*x = TReqRemoveMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRemoveMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRemoveMaintenance) ProtoMessage() {}

func (x *TReqRemoveMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRemoveMaintenance.ProtoReflect.Descriptor instead.
func (*TReqRemoveMaintenance) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{83}
}

func (x *TReqRemoveMaintenance) GetComponent() EMaintenanceComponent {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return EMaintenanceComponent_MC_CLUSTER_NODE
}

func (x *TReqRemoveMaintenance) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *TReqRemoveMaintenance) GetIds() []*misc.TGuid {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TReqRemoveMaintenance) GetType() EMaintenanceType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EMaintenanceType_MT_BAN
}

func (x *TReqRemoveMaintenance) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TReqRemoveMaintenance) GetMine() bool {
	if x != nil && x.Mine != nil {
		return *x.Mine
	}
	return Default_TReqRemoveMaintenance_Mine
}

func (x *TReqRemoveMaintenance) GetSupportsPerTargetResponse() bool {
	if x != nil && x.SupportsPerTargetResponse != nil {
		return *x.SupportsPerTargetResponse
	}
	return Default_TReqRemoveMaintenance_SupportsPerTargetResponse
}

type TRspRemoveMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// COMPAT(kvk1920): For compatibility with pre-23.2.
	Ban                   *int32 `protobuf:"varint,1,opt,name=ban" json:"ban,omitempty"`
	Decommission          *int32 `protobuf:"varint,2,opt,name=decommission" json:"decommission,omitempty"`
	DisableSchedulerJobs  *int32 `protobuf:"varint,3,opt,name=disable_scheduler_jobs,json=disableSchedulerJobs" json:"disable_scheduler_jobs,omitempty"`
	DisableWriteSessions  *int32 `protobuf:"varint,4,opt,name=disable_write_sessions,json=disableWriteSessions" json:"disable_write_sessions,omitempty"`
	DisableTabletCells    *int32 `protobuf:"varint,5,opt,name=disable_tablet_cells,json=disableTabletCells" json:"disable_tablet_cells,omitempty"`
	PendingRestart        *int32 `protobuf:"varint,8,opt,name=pending_restart,json=pendingRestart" json:"pending_restart,omitempty"`
	UseMapInsteadOfFields *bool  `protobuf:"varint,6,opt,name=use_map_instead_of_fields,json=useMapInsteadOfFields,def=0" json:"use_map_instead_of_fields,omitempty"`
	// COMPAT(kvk1920): For compatibility with pre-24.2 RPC clients.
	RemovedMaintenanceCounts map[int32]int32 `protobuf:"bytes,7,rep,name=removed_maintenance_counts,json=removedMaintenanceCounts" json:"removed_maintenance_counts,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Key: EMaintenanceType
	// COMPAT(kvk1920): For compatibility with pre-24.2 RPC proxies.
	SupportsPerTargetResponse *bool `protobuf:"varint,9,opt,name=supports_per_target_response,json=supportsPerTargetResponse,def=0" json:"supports_per_target_response,omitempty"`
	// Key: component address
	RemovedMaintenanceCountsPerTarget map[string]*TRspRemoveMaintenance_TMaintenanceCounts `protobuf:"bytes,10,rep,name=removed_maintenance_counts_per_target,json=removedMaintenanceCountsPerTarget" json:"removed_maintenance_counts_per_target,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

// Default values for TRspRemoveMaintenance fields.
const (
	Default_TRspRemoveMaintenance_UseMapInsteadOfFields     = bool(false)
	Default_TRspRemoveMaintenance_SupportsPerTargetResponse = bool(false)
)

func (x *TRspRemoveMaintenance) Reset() {
	*x = TRspRemoveMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRemoveMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRemoveMaintenance) ProtoMessage() {}

func (x *TRspRemoveMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRemoveMaintenance.ProtoReflect.Descriptor instead.
func (*TRspRemoveMaintenance) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{84}
}

func (x *TRspRemoveMaintenance) GetBan() int32 {
	if x != nil && x.Ban != nil {
		return *x.Ban
	}
	return 0
}

func (x *TRspRemoveMaintenance) GetDecommission() int32 {
	if x != nil && x.Decommission != nil {
		return *x.Decommission
	}
	return 0
}

func (x *TRspRemoveMaintenance) GetDisableSchedulerJobs() int32 {
	if x != nil && x.DisableSchedulerJobs != nil {
		return *x.DisableSchedulerJobs
	}
	return 0
}

func (x *TRspRemoveMaintenance) GetDisableWriteSessions() int32 {
	if x != nil && x.DisableWriteSessions != nil {
		return *x.DisableWriteSessions
	}
	return 0
}

func (x *TRspRemoveMaintenance) GetDisableTabletCells() int32 {
	if x != nil && x.DisableTabletCells != nil {
		return *x.DisableTabletCells
	}
	return 0
}

func (x *TRspRemoveMaintenance) GetPendingRestart() int32 {
	if x != nil && x.PendingRestart != nil {
		return *x.PendingRestart
	}
	return 0
}

func (x *TRspRemoveMaintenance) GetUseMapInsteadOfFields() bool {
	if x != nil && x.UseMapInsteadOfFields != nil {
		return *x.UseMapInsteadOfFields
	}
	return Default_TRspRemoveMaintenance_UseMapInsteadOfFields
}

func (x *TRspRemoveMaintenance) GetRemovedMaintenanceCounts() map[int32]int32 {
	if x != nil {
		return x.RemovedMaintenanceCounts
	}
	return nil
}

func (x *TRspRemoveMaintenance) GetSupportsPerTargetResponse() bool {
	if x != nil && x.SupportsPerTargetResponse != nil {
		return *x.SupportsPerTargetResponse
	}
	return Default_TRspRemoveMaintenance_SupportsPerTargetResponse
}

func (x *TRspRemoveMaintenance) GetRemovedMaintenanceCountsPerTarget() map[string]*TRspRemoveMaintenance_TMaintenanceCounts {
	if x != nil {
		return x.RemovedMaintenanceCountsPerTarget
	}
	return nil
}

// 100
type TTransactionalOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId                      *misc.TGuid `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	Ping                               *bool       `protobuf:"varint,2,opt,name=ping,def=0" json:"ping,omitempty"`
	PingAncestors                      *bool       `protobuf:"varint,3,opt,name=ping_ancestors,json=pingAncestors,def=0" json:"ping_ancestors,omitempty"`
	SuppressTransactionCoordinatorSync *bool       `protobuf:"varint,5,opt,name=suppress_transaction_coordinator_sync,json=suppressTransactionCoordinatorSync" json:"suppress_transaction_coordinator_sync,omitempty"`
	SuppressUpstreamSync               *bool       `protobuf:"varint,6,opt,name=suppress_upstream_sync,json=suppressUpstreamSync" json:"suppress_upstream_sync,omitempty"`
}

// Default values for TTransactionalOptions fields.
const (
	Default_TTransactionalOptions_Ping          = bool(false)
	Default_TTransactionalOptions_PingAncestors = bool(false)
)

func (x *TTransactionalOptions) Reset() {
	*x = TTransactionalOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTransactionalOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTransactionalOptions) ProtoMessage() {}

func (x *TTransactionalOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTransactionalOptions.ProtoReflect.Descriptor instead.
func (*TTransactionalOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{85}
}

func (x *TTransactionalOptions) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TTransactionalOptions) GetPing() bool {
	if x != nil && x.Ping != nil {
		return *x.Ping
	}
	return Default_TTransactionalOptions_Ping
}

func (x *TTransactionalOptions) GetPingAncestors() bool {
	if x != nil && x.PingAncestors != nil {
		return *x.PingAncestors
	}
	return Default_TTransactionalOptions_PingAncestors
}

func (x *TTransactionalOptions) GetSuppressTransactionCoordinatorSync() bool {
	if x != nil && x.SuppressTransactionCoordinatorSync != nil {
		return *x.SuppressTransactionCoordinatorSync
	}
	return false
}

func (x *TTransactionalOptions) GetSuppressUpstreamSync() bool {
	if x != nil && x.SuppressUpstreamSync != nil {
		return *x.SuppressUpstreamSync
	}
	return false
}

// 101
type TPrerequisiteOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*TPrerequisiteOptions_TTransactionPrerequisite `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	Revisions    []*TPrerequisiteOptions_TRevisionPrerequisite    `protobuf:"bytes,2,rep,name=revisions" json:"revisions,omitempty"`
}

func (x *TPrerequisiteOptions) Reset() {
	*x = TPrerequisiteOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPrerequisiteOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPrerequisiteOptions) ProtoMessage() {}

func (x *TPrerequisiteOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPrerequisiteOptions.ProtoReflect.Descriptor instead.
func (*TPrerequisiteOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{86}
}

func (x *TPrerequisiteOptions) GetTransactions() []*TPrerequisiteOptions_TTransactionPrerequisite {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *TPrerequisiteOptions) GetRevisions() []*TPrerequisiteOptions_TRevisionPrerequisite {
	if x != nil {
		return x.Revisions
	}
	return nil
}

// 102
type TMasterReadOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadFrom                        *EMasterReadKind `protobuf:"varint,1,opt,name=read_from,json=readFrom,enum=NYT.NApi.NRpcProxy.NProto.EMasterReadKind,def=1" json:"read_from,omitempty"`
	ExpireAfterSuccessfulUpdateTime *int64           `protobuf:"varint,2,opt,name=expire_after_successful_update_time,json=expireAfterSuccessfulUpdateTime" json:"expire_after_successful_update_time,omitempty"` // TDuration
	ExpireAfterFailedUpdateTime     *int64           `protobuf:"varint,3,opt,name=expire_after_failed_update_time,json=expireAfterFailedUpdateTime" json:"expire_after_failed_update_time,omitempty"`             // TDuration
	CacheStickyGroupSize            *int32           `protobuf:"varint,4,opt,name=cache_sticky_group_size,json=cacheStickyGroupSize" json:"cache_sticky_group_size,omitempty"`
	DisablePerUserCache             *bool            `protobuf:"varint,5,opt,name=disable_per_user_cache,json=disablePerUserCache" json:"disable_per_user_cache,omitempty"`
	SuccessStalenessBound           *int64           `protobuf:"varint,6,opt,name=success_staleness_bound,json=successStalenessBound" json:"success_staleness_bound,omitempty"` // TDuration
}

// Default values for TMasterReadOptions fields.
const (
	Default_TMasterReadOptions_ReadFrom = EMasterReadKind_MRK_FOLLOWER
)

func (x *TMasterReadOptions) Reset() {
	*x = TMasterReadOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMasterReadOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMasterReadOptions) ProtoMessage() {}

func (x *TMasterReadOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMasterReadOptions.ProtoReflect.Descriptor instead.
func (*TMasterReadOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{87}
}

func (x *TMasterReadOptions) GetReadFrom() EMasterReadKind {
	if x != nil && x.ReadFrom != nil {
		return *x.ReadFrom
	}
	return Default_TMasterReadOptions_ReadFrom
}

func (x *TMasterReadOptions) GetExpireAfterSuccessfulUpdateTime() int64 {
	if x != nil && x.ExpireAfterSuccessfulUpdateTime != nil {
		return *x.ExpireAfterSuccessfulUpdateTime
	}
	return 0
}

func (x *TMasterReadOptions) GetExpireAfterFailedUpdateTime() int64 {
	if x != nil && x.ExpireAfterFailedUpdateTime != nil {
		return *x.ExpireAfterFailedUpdateTime
	}
	return 0
}

func (x *TMasterReadOptions) GetCacheStickyGroupSize() int32 {
	if x != nil && x.CacheStickyGroupSize != nil {
		return *x.CacheStickyGroupSize
	}
	return 0
}

func (x *TMasterReadOptions) GetDisablePerUserCache() bool {
	if x != nil && x.DisablePerUserCache != nil {
		return *x.DisablePerUserCache
	}
	return false
}

func (x *TMasterReadOptions) GetSuccessStalenessBound() int64 {
	if x != nil && x.SuccessStalenessBound != nil {
		return *x.SuccessStalenessBound
	}
	return 0
}

// 103
type TMutatingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MutationId *misc.TGuid `protobuf:"bytes,1,opt,name=mutation_id,json=mutationId" json:"mutation_id,omitempty"`
	Retry      *bool       `protobuf:"varint,2,opt,name=retry" json:"retry,omitempty"`
}

func (x *TMutatingOptions) Reset() {
	*x = TMutatingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMutatingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMutatingOptions) ProtoMessage() {}

func (x *TMutatingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMutatingOptions.ProtoReflect.Descriptor instead.
func (*TMutatingOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{88}
}

func (x *TMutatingOptions) GetMutationId() *misc.TGuid {
	if x != nil {
		return x.MutationId
	}
	return nil
}

func (x *TMutatingOptions) GetRetry() bool {
	if x != nil && x.Retry != nil {
		return *x.Retry
	}
	return false
}

// 104
type TSuppressableAccessTrackingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuppressAccessTracking           *bool `protobuf:"varint,1,opt,name=suppress_access_tracking,json=suppressAccessTracking,def=0" json:"suppress_access_tracking,omitempty"`
	SuppressModificationTracking     *bool `protobuf:"varint,2,opt,name=suppress_modification_tracking,json=suppressModificationTracking,def=0" json:"suppress_modification_tracking,omitempty"`
	SuppressExpirationTimeoutRenewal *bool `protobuf:"varint,3,opt,name=suppress_expiration_timeout_renewal,json=suppressExpirationTimeoutRenewal,def=0" json:"suppress_expiration_timeout_renewal,omitempty"`
}

// Default values for TSuppressableAccessTrackingOptions fields.
const (
	Default_TSuppressableAccessTrackingOptions_SuppressAccessTracking           = bool(false)
	Default_TSuppressableAccessTrackingOptions_SuppressModificationTracking     = bool(false)
	Default_TSuppressableAccessTrackingOptions_SuppressExpirationTimeoutRenewal = bool(false)
)

func (x *TSuppressableAccessTrackingOptions) Reset() {
	*x = TSuppressableAccessTrackingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSuppressableAccessTrackingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSuppressableAccessTrackingOptions) ProtoMessage() {}

func (x *TSuppressableAccessTrackingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSuppressableAccessTrackingOptions.ProtoReflect.Descriptor instead.
func (*TSuppressableAccessTrackingOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{89}
}

func (x *TSuppressableAccessTrackingOptions) GetSuppressAccessTracking() bool {
	if x != nil && x.SuppressAccessTracking != nil {
		return *x.SuppressAccessTracking
	}
	return Default_TSuppressableAccessTrackingOptions_SuppressAccessTracking
}

func (x *TSuppressableAccessTrackingOptions) GetSuppressModificationTracking() bool {
	if x != nil && x.SuppressModificationTracking != nil {
		return *x.SuppressModificationTracking
	}
	return Default_TSuppressableAccessTrackingOptions_SuppressModificationTracking
}

func (x *TSuppressableAccessTrackingOptions) GetSuppressExpirationTimeoutRenewal() bool {
	if x != nil && x.SuppressExpirationTimeoutRenewal != nil {
		return *x.SuppressExpirationTimeoutRenewal
	}
	return Default_TSuppressableAccessTrackingOptions_SuppressExpirationTimeoutRenewal
}

// 105
type TTabletRangeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstTabletIndex *int32 `protobuf:"varint,1,opt,name=first_tablet_index,json=firstTabletIndex" json:"first_tablet_index,omitempty"`
	LastTabletIndex  *int32 `protobuf:"varint,2,opt,name=last_tablet_index,json=lastTabletIndex" json:"last_tablet_index,omitempty"`
}

func (x *TTabletRangeOptions) Reset() {
	*x = TTabletRangeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTabletRangeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTabletRangeOptions) ProtoMessage() {}

func (x *TTabletRangeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTabletRangeOptions.ProtoReflect.Descriptor instead.
func (*TTabletRangeOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{90}
}

func (x *TTabletRangeOptions) GetFirstTabletIndex() int32 {
	if x != nil && x.FirstTabletIndex != nil {
		return *x.FirstTabletIndex
	}
	return 0
}

func (x *TTabletRangeOptions) GetLastTabletIndex() int32 {
	if x != nil && x.LastTabletIndex != nil {
		return *x.LastTabletIndex
	}
	return 0
}

// 106
type TTabletReadOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadFrom                  *ETabletReadKind `protobuf:"varint,1,opt,name=read_from,json=readFrom,enum=NYT.NApi.NRpcProxy.NProto.ETabletReadKind,def=0" json:"read_from,omitempty"`
	CachedSyncReplicasTimeout *uint64          `protobuf:"varint,2,opt,name=cached_sync_replicas_timeout,json=cachedSyncReplicasTimeout" json:"cached_sync_replicas_timeout,omitempty"` // TDuration
}

// Default values for TTabletReadOptions fields.
const (
	Default_TTabletReadOptions_ReadFrom = ETabletReadKind_TRK_LEADER
)

func (x *TTabletReadOptions) Reset() {
	*x = TTabletReadOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTabletReadOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTabletReadOptions) ProtoMessage() {}

func (x *TTabletReadOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTabletReadOptions.ProtoReflect.Descriptor instead.
func (*TTabletReadOptions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{91}
}

func (x *TTabletReadOptions) GetReadFrom() ETabletReadKind {
	if x != nil && x.ReadFrom != nil {
		return *x.ReadFrom
	}
	return Default_TTabletReadOptions_ReadFrom
}

func (x *TTabletReadOptions) GetCachedSyncReplicasTimeout() uint64 {
	if x != nil && x.CachedSyncReplicasTimeout != nil {
		return *x.CachedSyncReplicasTimeout
	}
	return 0
}

type TReqGenerateTimestamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count           *int32 `protobuf:"varint,1,opt,name=count,def=1" json:"count,omitempty"`
	ClockClusterTag *int32 `protobuf:"varint,2,opt,name=clock_cluster_tag,json=clockClusterTag" json:"clock_cluster_tag,omitempty"`
}

// Default values for TReqGenerateTimestamps fields.
const (
	Default_TReqGenerateTimestamps_Count = int32(1)
)

func (x *TReqGenerateTimestamps) Reset() {
	*x = TReqGenerateTimestamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGenerateTimestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGenerateTimestamps) ProtoMessage() {}

func (x *TReqGenerateTimestamps) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGenerateTimestamps.ProtoReflect.Descriptor instead.
func (*TReqGenerateTimestamps) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{92}
}

func (x *TReqGenerateTimestamps) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return Default_TReqGenerateTimestamps_Count
}

func (x *TReqGenerateTimestamps) GetClockClusterTag() int32 {
	if x != nil && x.ClockClusterTag != nil {
		return *x.ClockClusterTag
	}
	return 0
}

type TRspGenerateTimestamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *uint64 `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
}

func (x *TRspGenerateTimestamps) Reset() {
	*x = TRspGenerateTimestamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGenerateTimestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGenerateTimestamps) ProtoMessage() {}

func (x *TRspGenerateTimestamps) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGenerateTimestamps.ProtoReflect.Descriptor instead.
func (*TRspGenerateTimestamps) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{93}
}

func (x *TRspGenerateTimestamps) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type TReqExistsNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                              []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions               *TPrerequisiteOptions               `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MasterReadOptions                 *TMasterReadOptions                 `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

func (x *TReqExistsNode) Reset() {
	*x = TReqExistsNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqExistsNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqExistsNode) ProtoMessage() {}

func (x *TReqExistsNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqExistsNode.ProtoReflect.Descriptor instead.
func (*TReqExistsNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{94}
}

func (x *TReqExistsNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqExistsNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqExistsNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqExistsNode) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

func (x *TReqExistsNode) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspExistsNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists *bool `protobuf:"varint,1,req,name=exists" json:"exists,omitempty"`
}

func (x *TRspExistsNode) Reset() {
	*x = TRspExistsNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspExistsNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspExistsNode) ProtoMessage() {}

func (x *TRspExistsNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspExistsNode.ProtoReflect.Descriptor instead.
func (*TRspExistsNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{95}
}

func (x *TRspExistsNode) GetExists() bool {
	if x != nil && x.Exists != nil {
		return *x.Exists
	}
	return false
}

type TReqGetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	// COMPAT(max42): see comment around TLegacyAttributeKeys.
	LegacyAttributes                  *TLegacyAttributeKeys               `protobuf:"bytes,2,opt,name=legacy_attributes,json=legacyAttributes" json:"legacy_attributes,omitempty"`
	Attributes                        *ytree.TAttributeFilter             `protobuf:"bytes,4,opt,name=attributes" json:"attributes,omitempty"`
	MaxSize                           *int64                              `protobuf:"varint,3,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	ComplexityLimits                  *ytree.TReadRequestComplexityLimits `protobuf:"bytes,6,opt,name=complexity_limits,json=complexityLimits" json:"complexity_limits,omitempty"`
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions               *TPrerequisiteOptions               `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MasterReadOptions                 *TMasterReadOptions                 `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
	Options                           *ytree.TAttributeDictionary         `protobuf:"bytes,200,opt,name=options" json:"options,omitempty"`
}

func (x *TReqGetNode) Reset() {
	*x = TReqGetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetNode) ProtoMessage() {}

func (x *TReqGetNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetNode.ProtoReflect.Descriptor instead.
func (*TReqGetNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{96}
}

func (x *TReqGetNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqGetNode) GetLegacyAttributes() *TLegacyAttributeKeys {
	if x != nil {
		return x.LegacyAttributes
	}
	return nil
}

func (x *TReqGetNode) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqGetNode) GetMaxSize() int64 {
	if x != nil && x.MaxSize != nil {
		return *x.MaxSize
	}
	return 0
}

func (x *TReqGetNode) GetComplexityLimits() *ytree.TReadRequestComplexityLimits {
	if x != nil {
		return x.ComplexityLimits
	}
	return nil
}

func (x *TReqGetNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqGetNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqGetNode) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

func (x *TReqGetNode) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

func (x *TReqGetNode) GetOptions() *ytree.TAttributeDictionary {
	if x != nil {
		return x.Options
	}
	return nil
}

type TRspGetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"` // YSON
}

func (x *TRspGetNode) Reset() {
	*x = TRspGetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetNode) ProtoMessage() {}

func (x *TRspGetNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetNode.ProtoReflect.Descriptor instead.
func (*TRspGetNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{97}
}

func (x *TRspGetNode) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TReqListNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	// COMPAT(max42): see comment around TLegacyAttributeKeys.
	LegacyAttributes                  *TLegacyAttributeKeys               `protobuf:"bytes,2,opt,name=legacy_attributes,json=legacyAttributes" json:"legacy_attributes,omitempty"`
	Attributes                        *ytree.TAttributeFilter             `protobuf:"bytes,4,opt,name=attributes" json:"attributes,omitempty"`
	MaxSize                           *int64                              `protobuf:"varint,3,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	ComplexityLimits                  *ytree.TReadRequestComplexityLimits `protobuf:"bytes,6,opt,name=complexity_limits,json=complexityLimits" json:"complexity_limits,omitempty"`
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions               *TPrerequisiteOptions               `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MasterReadOptions                 *TMasterReadOptions                 `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

func (x *TReqListNode) Reset() {
	*x = TReqListNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqListNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqListNode) ProtoMessage() {}

func (x *TReqListNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqListNode.ProtoReflect.Descriptor instead.
func (*TReqListNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{98}
}

func (x *TReqListNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqListNode) GetLegacyAttributes() *TLegacyAttributeKeys {
	if x != nil {
		return x.LegacyAttributes
	}
	return nil
}

func (x *TReqListNode) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqListNode) GetMaxSize() int64 {
	if x != nil && x.MaxSize != nil {
		return *x.MaxSize
	}
	return 0
}

func (x *TReqListNode) GetComplexityLimits() *ytree.TReadRequestComplexityLimits {
	if x != nil {
		return x.ComplexityLimits
	}
	return nil
}

func (x *TReqListNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqListNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqListNode) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

func (x *TReqListNode) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspListNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"` // YSON
}

func (x *TRspListNode) Reset() {
	*x = TRspListNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListNode) ProtoMessage() {}

func (x *TRspListNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListNode.ProtoReflect.Descriptor instead.
func (*TRspListNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{99}
}

func (x *TRspListNode) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TReqCreateObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *int32                      `protobuf:"varint,1,req,name=type" json:"type,omitempty"` // NObjectClient::EObjectType
	IgnoreExisting  *bool                       `protobuf:"varint,3,opt,name=ignore_existing,json=ignoreExisting" json:"ignore_existing,omitempty"`
	Sync            *bool                       `protobuf:"varint,4,opt,name=sync" json:"sync,omitempty"`
	Attributes      *ytree.TAttributeDictionary `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
	MutatingOptions *TMutatingOptions           `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqCreateObject) Reset() {
	*x = TReqCreateObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCreateObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCreateObject) ProtoMessage() {}

func (x *TReqCreateObject) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCreateObject.ProtoReflect.Descriptor instead.
func (*TReqCreateObject) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{100}
}

func (x *TReqCreateObject) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TReqCreateObject) GetIgnoreExisting() bool {
	if x != nil && x.IgnoreExisting != nil {
		return *x.IgnoreExisting
	}
	return false
}

func (x *TReqCreateObject) GetSync() bool {
	if x != nil && x.Sync != nil {
		return *x.Sync
	}
	return false
}

func (x *TReqCreateObject) GetAttributes() *ytree.TAttributeDictionary {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqCreateObject) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspCreateObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId *misc.TGuid `protobuf:"bytes,1,req,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (x *TRspCreateObject) Reset() {
	*x = TRspCreateObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCreateObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCreateObject) ProtoMessage() {}

func (x *TRspCreateObject) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCreateObject.ProtoReflect.Descriptor instead.
func (*TRspCreateObject) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{101}
}

func (x *TRspCreateObject) GetObjectId() *misc.TGuid {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

type TColumnSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	StableName        *string `protobuf:"bytes,12,opt,name=stable_name,json=stableName" json:"stable_name,omitempty"`
	Type              *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	LogicalType       *int32  `protobuf:"varint,3,opt,name=logical_type,json=logicalType" json:"logical_type,omitempty"`
	TypeV3            []byte  `protobuf:"bytes,11,opt,name=type_v3,json=typeV3" json:"type_v3,omitempty"` // YSON representation of type_v3
	Lock              *string `protobuf:"bytes,4,opt,name=lock" json:"lock,omitempty"`
	Expression        *string `protobuf:"bytes,5,opt,name=expression" json:"expression,omitempty"`
	Materialized      *bool   `protobuf:"varint,13,opt,name=materialized" json:"materialized,omitempty"`
	Aggregate         *string `protobuf:"bytes,6,opt,name=aggregate" json:"aggregate,omitempty"`
	SortOrder         *int32  `protobuf:"varint,7,opt,name=sort_order,json=sortOrder" json:"sort_order,omitempty"`
	Group             *string `protobuf:"bytes,8,opt,name=group" json:"group,omitempty"`
	Required          *bool   `protobuf:"varint,9,opt,name=required,def=0" json:"required,omitempty"`
	MaxInlineHunkSize *int64  `protobuf:"varint,10,opt,name=max_inline_hunk_size,json=maxInlineHunkSize" json:"max_inline_hunk_size,omitempty"`
}

// Default values for TColumnSchema fields.
const (
	Default_TColumnSchema_Required = bool(false)
)

func (x *TColumnSchema) Reset() {
	*x = TColumnSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TColumnSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TColumnSchema) ProtoMessage() {}

func (x *TColumnSchema) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TColumnSchema.ProtoReflect.Descriptor instead.
func (*TColumnSchema) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{102}
}

func (x *TColumnSchema) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TColumnSchema) GetStableName() string {
	if x != nil && x.StableName != nil {
		return *x.StableName
	}
	return ""
}

func (x *TColumnSchema) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TColumnSchema) GetLogicalType() int32 {
	if x != nil && x.LogicalType != nil {
		return *x.LogicalType
	}
	return 0
}

func (x *TColumnSchema) GetTypeV3() []byte {
	if x != nil {
		return x.TypeV3
	}
	return nil
}

func (x *TColumnSchema) GetLock() string {
	if x != nil && x.Lock != nil {
		return *x.Lock
	}
	return ""
}

func (x *TColumnSchema) GetExpression() string {
	if x != nil && x.Expression != nil {
		return *x.Expression
	}
	return ""
}

func (x *TColumnSchema) GetMaterialized() bool {
	if x != nil && x.Materialized != nil {
		return *x.Materialized
	}
	return false
}

func (x *TColumnSchema) GetAggregate() string {
	if x != nil && x.Aggregate != nil {
		return *x.Aggregate
	}
	return ""
}

func (x *TColumnSchema) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *TColumnSchema) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *TColumnSchema) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return Default_TColumnSchema_Required
}

func (x *TColumnSchema) GetMaxInlineHunkSize() int64 {
	if x != nil && x.MaxInlineHunkSize != nil {
		return *x.MaxInlineHunkSize
	}
	return 0
}

type TDeletedColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StableName *string `protobuf:"bytes,1,req,name=stable_name,json=stableName" json:"stable_name,omitempty"`
}

func (x *TDeletedColumn) Reset() {
	*x = TDeletedColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeletedColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeletedColumn) ProtoMessage() {}

func (x *TDeletedColumn) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeletedColumn.ProtoReflect.Descriptor instead.
func (*TDeletedColumn) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{103}
}

func (x *TDeletedColumn) GetStableName() string {
	if x != nil && x.StableName != nil {
		return *x.StableName
	}
	return ""
}

type TTableSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns        []*TColumnSchema  `protobuf:"bytes,1,rep,name=columns" json:"columns,omitempty"`
	Strict         *bool             `protobuf:"varint,2,opt,name=strict,def=1" json:"strict,omitempty"`
	UniqueKeys     *bool             `protobuf:"varint,3,opt,name=unique_keys,json=uniqueKeys,def=0" json:"unique_keys,omitempty"`
	DeletedColumns []*TDeletedColumn `protobuf:"bytes,5,rep,name=deleted_columns,json=deletedColumns" json:"deleted_columns,omitempty"`
}

// Default values for TTableSchema fields.
const (
	Default_TTableSchema_Strict     = bool(true)
	Default_TTableSchema_UniqueKeys = bool(false)
)

func (x *TTableSchema) Reset() {
	*x = TTableSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTableSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTableSchema) ProtoMessage() {}

func (x *TTableSchema) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTableSchema.ProtoReflect.Descriptor instead.
func (*TTableSchema) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{104}
}

func (x *TTableSchema) GetColumns() []*TColumnSchema {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TTableSchema) GetStrict() bool {
	if x != nil && x.Strict != nil {
		return *x.Strict
	}
	return Default_TTableSchema_Strict
}

func (x *TTableSchema) GetUniqueKeys() bool {
	if x != nil && x.UniqueKeys != nil {
		return *x.UniqueKeys
	}
	return Default_TTableSchema_UniqueKeys
}

func (x *TTableSchema) GetDeletedColumns() []*TDeletedColumn {
	if x != nil {
		return x.DeletedColumns
	}
	return nil
}

type TTabletInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId          *misc.TGuid `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	MountRevision     *uint64     `protobuf:"varint,2,req,name=mount_revision,json=mountRevision" json:"mount_revision,omitempty"`
	State             *int32      `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	PivotKey          []byte      `protobuf:"bytes,4,req,name=pivot_key,json=pivotKey" json:"pivot_key,omitempty"`
	CellId            *misc.TGuid `protobuf:"bytes,5,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	CellConfigVersion *int32      `protobuf:"varint,6,opt,name=cell_config_version,json=cellConfigVersion" json:"cell_config_version,omitempty"`
}

func (x *TTabletInfo) Reset() {
	*x = TTabletInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTabletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTabletInfo) ProtoMessage() {}

func (x *TTabletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTabletInfo.ProtoReflect.Descriptor instead.
func (*TTabletInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{105}
}

func (x *TTabletInfo) GetTabletId() *misc.TGuid {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *TTabletInfo) GetMountRevision() uint64 {
	if x != nil && x.MountRevision != nil {
		return *x.MountRevision
	}
	return 0
}

func (x *TTabletInfo) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *TTabletInfo) GetPivotKey() []byte {
	if x != nil {
		return x.PivotKey
	}
	return nil
}

func (x *TTabletInfo) GetCellId() *misc.TGuid {
	if x != nil {
		return x.CellId
	}
	return nil
}

func (x *TTabletInfo) GetCellConfigVersion() int32 {
	if x != nil && x.CellConfigVersion != nil {
		return *x.CellConfigVersion
	}
	return 0
}

type TReplicaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId   *misc.TGuid `protobuf:"bytes,1,req,name=replica_id,json=replicaId" json:"replica_id,omitempty"`
	ClusterName *string     `protobuf:"bytes,2,req,name=cluster_name,json=clusterName" json:"cluster_name,omitempty"`
	ReplicaPath []byte      `protobuf:"bytes,3,req,name=replica_path,json=replicaPath" json:"replica_path,omitempty"` // YPath
	Mode        *int32      `protobuf:"varint,4,req,name=mode" json:"mode,omitempty"`                                 // ETableReplicaMode
}

func (x *TReplicaInfo) Reset() {
	*x = TReplicaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReplicaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReplicaInfo) ProtoMessage() {}

func (x *TReplicaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReplicaInfo.ProtoReflect.Descriptor instead.
func (*TReplicaInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{106}
}

func (x *TReplicaInfo) GetReplicaId() *misc.TGuid {
	if x != nil {
		return x.ReplicaId
	}
	return nil
}

func (x *TReplicaInfo) GetClusterName() string {
	if x != nil && x.ClusterName != nil {
		return *x.ClusterName
	}
	return ""
}

func (x *TReplicaInfo) GetReplicaPath() []byte {
	if x != nil {
		return x.ReplicaPath
	}
	return nil
}

func (x *TReplicaInfo) GetMode() int32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

type TIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexTableId        *misc.TGuid `protobuf:"bytes,1,req,name=index_table_id,json=indexTableId" json:"index_table_id,omitempty"`
	IndexKind           *int32      `protobuf:"varint,2,req,name=index_kind,json=indexKind" json:"index_kind,omitempty"` // NTableClient::ESecondaryIndexKind
	Predicate           *string     `protobuf:"bytes,3,opt,name=predicate" json:"predicate,omitempty"`
	UnfoldedColumn      *string     `protobuf:"bytes,4,opt,name=unfolded_column,json=unfoldedColumn" json:"unfolded_column,omitempty"`
	IndexCorrespondence *int32      `protobuf:"varint,6,opt,name=index_correspondence,json=indexCorrespondence" json:"index_correspondence,omitempty"` // NTableClient::ESecondaryIndexState
}

func (x *TIndexInfo) Reset() {
	*x = TIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TIndexInfo) ProtoMessage() {}

func (x *TIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TIndexInfo.ProtoReflect.Descriptor instead.
func (*TIndexInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{107}
}

func (x *TIndexInfo) GetIndexTableId() *misc.TGuid {
	if x != nil {
		return x.IndexTableId
	}
	return nil
}

func (x *TIndexInfo) GetIndexKind() int32 {
	if x != nil && x.IndexKind != nil {
		return *x.IndexKind
	}
	return 0
}

func (x *TIndexInfo) GetPredicate() string {
	if x != nil && x.Predicate != nil {
		return *x.Predicate
	}
	return ""
}

func (x *TIndexInfo) GetUnfoldedColumn() string {
	if x != nil && x.UnfoldedColumn != nil {
		return *x.UnfoldedColumn
	}
	return ""
}

func (x *TIndexInfo) GetIndexCorrespondence() int32 {
	if x != nil && x.IndexCorrespondence != nil {
		return *x.IndexCorrespondence
	}
	return 0
}

type TReqGetTableMountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // RichYPath
}

func (x *TReqGetTableMountInfo) Reset() {
	*x = TReqGetTableMountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetTableMountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetTableMountInfo) ProtoMessage() {}

func (x *TReqGetTableMountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetTableMountInfo.ProtoReflect.Descriptor instead.
func (*TReqGetTableMountInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{108}
}

func (x *TReqGetTableMountInfo) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

type TRspGetTableMountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId           *misc.TGuid     `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	Schema            *TTableSchema   `protobuf:"bytes,2,req,name=schema" json:"schema,omitempty"`
	Tablets           []*TTabletInfo  `protobuf:"bytes,3,rep,name=tablets" json:"tablets,omitempty"`
	Dynamic           *bool           `protobuf:"varint,4,req,name=dynamic" json:"dynamic,omitempty"`
	UpstreamReplicaId *misc.TGuid     `protobuf:"bytes,5,req,name=upstream_replica_id,json=upstreamReplicaId" json:"upstream_replica_id,omitempty"`
	Replicas          []*TReplicaInfo `protobuf:"bytes,6,rep,name=replicas" json:"replicas,omitempty"`
	PhysicalPath      []byte          `protobuf:"bytes,7,opt,name=physical_path,json=physicalPath" json:"physical_path,omitempty"` // YPath
	Indices           []*TIndexInfo   `protobuf:"bytes,8,rep,name=indices" json:"indices,omitempty"`
	TabletCount       *int32          `protobuf:"varint,9,opt,name=tablet_count,json=tabletCount" json:"tablet_count,omitempty"`
}

func (x *TRspGetTableMountInfo) Reset() {
	*x = TRspGetTableMountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTableMountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTableMountInfo) ProtoMessage() {}

func (x *TRspGetTableMountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTableMountInfo.ProtoReflect.Descriptor instead.
func (*TRspGetTableMountInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{109}
}

func (x *TRspGetTableMountInfo) GetTableId() *misc.TGuid {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetSchema() *TTableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetTablets() []*TTabletInfo {
	if x != nil {
		return x.Tablets
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetDynamic() bool {
	if x != nil && x.Dynamic != nil {
		return *x.Dynamic
	}
	return false
}

func (x *TRspGetTableMountInfo) GetUpstreamReplicaId() *misc.TGuid {
	if x != nil {
		return x.UpstreamReplicaId
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetReplicas() []*TReplicaInfo {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetPhysicalPath() []byte {
	if x != nil {
		return x.PhysicalPath
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetIndices() []*TIndexInfo {
	if x != nil {
		return x.Indices
	}
	return nil
}

func (x *TRspGetTableMountInfo) GetTabletCount() int32 {
	if x != nil && x.TabletCount != nil {
		return *x.TabletCount
	}
	return 0
}

type TReqGetTablePivotKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	RepresentKeyAsList *bool  `protobuf:"varint,2,opt,name=represent_key_as_list,json=representKeyAsList" json:"represent_key_as_list,omitempty"`
}

func (x *TReqGetTablePivotKeys) Reset() {
	*x = TReqGetTablePivotKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetTablePivotKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetTablePivotKeys) ProtoMessage() {}

func (x *TReqGetTablePivotKeys) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetTablePivotKeys.ProtoReflect.Descriptor instead.
func (*TReqGetTablePivotKeys) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{110}
}

func (x *TReqGetTablePivotKeys) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqGetTablePivotKeys) GetRepresentKeyAsList() bool {
	if x != nil && x.RepresentKeyAsList != nil {
		return *x.RepresentKeyAsList
	}
	return false
}

type TRspGetTablePivotKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"` // YSON
}

func (x *TRspGetTablePivotKeys) Reset() {
	*x = TRspGetTablePivotKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTablePivotKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTablePivotKeys) ProtoMessage() {}

func (x *TRspGetTablePivotKeys) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTablePivotKeys.ProtoReflect.Descriptor instead.
func (*TRspGetTablePivotKeys) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{111}
}

func (x *TRspGetTablePivotKeys) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TTableBackupManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath      []byte `protobuf:"bytes,1,req,name=source_path,json=sourcePath" json:"source_path,omitempty"`                // YPath
	DestinationPath []byte `protobuf:"bytes,2,req,name=destination_path,json=destinationPath" json:"destination_path,omitempty"` // YPath
	OrderedMode     *int32 `protobuf:"varint,3,req,name=ordered_mode,json=orderedMode" json:"ordered_mode,omitempty"`
}

func (x *TTableBackupManifest) Reset() {
	*x = TTableBackupManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTableBackupManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTableBackupManifest) ProtoMessage() {}

func (x *TTableBackupManifest) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTableBackupManifest.ProtoReflect.Descriptor instead.
func (*TTableBackupManifest) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{112}
}

func (x *TTableBackupManifest) GetSourcePath() []byte {
	if x != nil {
		return x.SourcePath
	}
	return nil
}

func (x *TTableBackupManifest) GetDestinationPath() []byte {
	if x != nil {
		return x.DestinationPath
	}
	return nil
}

func (x *TTableBackupManifest) GetOrderedMode() int32 {
	if x != nil && x.OrderedMode != nil {
		return *x.OrderedMode
	}
	return 0
}

type TBackupManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*TBackupManifest_TClusterManifest `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (x *TBackupManifest) Reset() {
	*x = TBackupManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBackupManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBackupManifest) ProtoMessage() {}

func (x *TBackupManifest) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBackupManifest.ProtoReflect.Descriptor instead.
func (*TBackupManifest) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{113}
}

func (x *TBackupManifest) GetClusters() []*TBackupManifest_TClusterManifest {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type TReqCreateTableBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest                 *TBackupManifest `protobuf:"bytes,1,req,name=manifest" json:"manifest,omitempty"`
	CheckpointTimestampDelay *uint64          `protobuf:"varint,2,req,name=checkpoint_timestamp_delay,json=checkpointTimestampDelay" json:"checkpoint_timestamp_delay,omitempty"`
	CheckpointCheckPeriod    *uint64          `protobuf:"varint,3,req,name=checkpoint_check_period,json=checkpointCheckPeriod" json:"checkpoint_check_period,omitempty"`
	CheckpointCheckTimeout   *uint64          `protobuf:"varint,4,req,name=checkpoint_check_timeout,json=checkpointCheckTimeout" json:"checkpoint_check_timeout,omitempty"`
	Force                    *bool            `protobuf:"varint,5,req,name=force" json:"force,omitempty"`
	PreserveAccount          *bool            `protobuf:"varint,6,req,name=preserve_account,json=preserveAccount" json:"preserve_account,omitempty"`
}

func (x *TReqCreateTableBackup) Reset() {
	*x = TReqCreateTableBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCreateTableBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCreateTableBackup) ProtoMessage() {}

func (x *TReqCreateTableBackup) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCreateTableBackup.ProtoReflect.Descriptor instead.
func (*TReqCreateTableBackup) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{114}
}

func (x *TReqCreateTableBackup) GetManifest() *TBackupManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *TReqCreateTableBackup) GetCheckpointTimestampDelay() uint64 {
	if x != nil && x.CheckpointTimestampDelay != nil {
		return *x.CheckpointTimestampDelay
	}
	return 0
}

func (x *TReqCreateTableBackup) GetCheckpointCheckPeriod() uint64 {
	if x != nil && x.CheckpointCheckPeriod != nil {
		return *x.CheckpointCheckPeriod
	}
	return 0
}

func (x *TReqCreateTableBackup) GetCheckpointCheckTimeout() uint64 {
	if x != nil && x.CheckpointCheckTimeout != nil {
		return *x.CheckpointCheckTimeout
	}
	return 0
}

func (x *TReqCreateTableBackup) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *TReqCreateTableBackup) GetPreserveAccount() bool {
	if x != nil && x.PreserveAccount != nil {
		return *x.PreserveAccount
	}
	return false
}

type TRspCreateTableBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspCreateTableBackup) Reset() {
	*x = TRspCreateTableBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCreateTableBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCreateTableBackup) ProtoMessage() {}

func (x *TRspCreateTableBackup) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCreateTableBackup.ProtoReflect.Descriptor instead.
func (*TRspCreateTableBackup) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{115}
}

type TReqRestoreTableBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest        *TBackupManifest `protobuf:"bytes,1,req,name=manifest" json:"manifest,omitempty"`
	Force           *bool            `protobuf:"varint,2,req,name=force" json:"force,omitempty"`
	Mount           *bool            `protobuf:"varint,3,req,name=mount" json:"mount,omitempty"`
	EnableReplicas  *bool            `protobuf:"varint,4,req,name=enable_replicas,json=enableReplicas" json:"enable_replicas,omitempty"`
	PreserveAccount *bool            `protobuf:"varint,5,req,name=preserve_account,json=preserveAccount" json:"preserve_account,omitempty"`
}

func (x *TReqRestoreTableBackup) Reset() {
	*x = TReqRestoreTableBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRestoreTableBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRestoreTableBackup) ProtoMessage() {}

func (x *TReqRestoreTableBackup) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRestoreTableBackup.ProtoReflect.Descriptor instead.
func (*TReqRestoreTableBackup) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{116}
}

func (x *TReqRestoreTableBackup) GetManifest() *TBackupManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *TReqRestoreTableBackup) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *TReqRestoreTableBackup) GetMount() bool {
	if x != nil && x.Mount != nil {
		return *x.Mount
	}
	return false
}

func (x *TReqRestoreTableBackup) GetEnableReplicas() bool {
	if x != nil && x.EnableReplicas != nil {
		return *x.EnableReplicas
	}
	return false
}

func (x *TReqRestoreTableBackup) GetPreserveAccount() bool {
	if x != nil && x.PreserveAccount != nil {
		return *x.PreserveAccount
	}
	return false
}

type TRspRestoreTableBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRestoreTableBackup) Reset() {
	*x = TRspRestoreTableBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRestoreTableBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRestoreTableBackup) ProtoMessage() {}

func (x *TRspRestoreTableBackup) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRestoreTableBackup.ProtoReflect.Descriptor instead.
func (*TRspRestoreTableBackup) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{117}
}

type TReqCreateNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                      `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`  // YPath
	Type                 *int32                      `protobuf:"varint,2,req,name=type" json:"type,omitempty"` // NObjectClient::EObjectType
	Attributes           *ytree.TAttributeDictionary `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Recursive            *bool                       `protobuf:"varint,4,opt,name=recursive,def=0" json:"recursive,omitempty"`
	Force                *bool                       `protobuf:"varint,5,opt,name=force,def=0" json:"force,omitempty"`
	IgnoreExisting       *bool                       `protobuf:"varint,6,opt,name=ignore_existing,json=ignoreExisting,def=0" json:"ignore_existing,omitempty"`
	LockExisting         *bool                       `protobuf:"varint,7,opt,name=lock_existing,json=lockExisting,def=0" json:"lock_existing,omitempty"`
	IgnoreTypeMismatch   *bool                       `protobuf:"varint,8,opt,name=ignore_type_mismatch,json=ignoreTypeMismatch,def=0" json:"ignore_type_mismatch,omitempty"`
	TransactionalOptions *TTransactionalOptions      `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions       `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions      *TMutatingOptions           `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqCreateNode fields.
const (
	Default_TReqCreateNode_Recursive          = bool(false)
	Default_TReqCreateNode_Force              = bool(false)
	Default_TReqCreateNode_IgnoreExisting     = bool(false)
	Default_TReqCreateNode_LockExisting       = bool(false)
	Default_TReqCreateNode_IgnoreTypeMismatch = bool(false)
)

func (x *TReqCreateNode) Reset() {
	*x = TReqCreateNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCreateNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCreateNode) ProtoMessage() {}

func (x *TReqCreateNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCreateNode.ProtoReflect.Descriptor instead.
func (*TReqCreateNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{118}
}

func (x *TReqCreateNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqCreateNode) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TReqCreateNode) GetAttributes() *ytree.TAttributeDictionary {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqCreateNode) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return Default_TReqCreateNode_Recursive
}

func (x *TReqCreateNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_TReqCreateNode_Force
}

func (x *TReqCreateNode) GetIgnoreExisting() bool {
	if x != nil && x.IgnoreExisting != nil {
		return *x.IgnoreExisting
	}
	return Default_TReqCreateNode_IgnoreExisting
}

func (x *TReqCreateNode) GetLockExisting() bool {
	if x != nil && x.LockExisting != nil {
		return *x.LockExisting
	}
	return Default_TReqCreateNode_LockExisting
}

func (x *TReqCreateNode) GetIgnoreTypeMismatch() bool {
	if x != nil && x.IgnoreTypeMismatch != nil {
		return *x.IgnoreTypeMismatch
	}
	return Default_TReqCreateNode_IgnoreTypeMismatch
}

func (x *TReqCreateNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqCreateNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqCreateNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspCreateNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId *misc.TGuid `protobuf:"bytes,1,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (x *TRspCreateNode) Reset() {
	*x = TRspCreateNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCreateNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCreateNode) ProtoMessage() {}

func (x *TRspCreateNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCreateNode.ProtoReflect.Descriptor instead.
func (*TRspCreateNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{119}
}

func (x *TRspCreateNode) GetNodeId() *misc.TGuid {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type TReqRemoveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Recursive            *bool                  `protobuf:"varint,2,opt,name=recursive,def=1" json:"recursive,omitempty"`
	Force                *bool                  `protobuf:"varint,3,opt,name=force,def=0" json:"force,omitempty"`
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions      *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqRemoveNode fields.
const (
	Default_TReqRemoveNode_Recursive = bool(true)
	Default_TReqRemoveNode_Force     = bool(false)
)

func (x *TReqRemoveNode) Reset() {
	*x = TReqRemoveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRemoveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRemoveNode) ProtoMessage() {}

func (x *TReqRemoveNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRemoveNode.ProtoReflect.Descriptor instead.
func (*TReqRemoveNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{120}
}

func (x *TReqRemoveNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqRemoveNode) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return Default_TReqRemoveNode_Recursive
}

func (x *TReqRemoveNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_TReqRemoveNode_Force
}

func (x *TReqRemoveNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqRemoveNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqRemoveNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspRemoveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRemoveNode) Reset() {
	*x = TRspRemoveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRemoveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRemoveNode) ProtoMessage() {}

func (x *TRspRemoveNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRemoveNode.ProtoReflect.Descriptor instead.
func (*TRspRemoveNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{121}
}

type TReqSetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                              []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`   // YPath
	Value                             []byte                              `protobuf:"bytes,2,req,name=value" json:"value,omitempty"` // YSON
	Recursive                         *bool                               `protobuf:"varint,3,opt,name=recursive" json:"recursive,omitempty"`
	Force                             *bool                               `protobuf:"varint,4,opt,name=force" json:"force,omitempty"`
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions               *TPrerequisiteOptions               `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions                   *TMutatingOptions                   `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

func (x *TReqSetNode) Reset() {
	*x = TReqSetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSetNode) ProtoMessage() {}

func (x *TReqSetNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSetNode.ProtoReflect.Descriptor instead.
func (*TReqSetNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{122}
}

func (x *TReqSetNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqSetNode) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TReqSetNode) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return false
}

func (x *TReqSetNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *TReqSetNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqSetNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqSetNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqSetNode) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspSetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspSetNode) Reset() {
	*x = TRspSetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSetNode) ProtoMessage() {}

func (x *TRspSetNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSetNode.ProtoReflect.Descriptor instead.
func (*TRspSetNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{123}
}

type TReqMultisetAttributesNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                              []byte                                    `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Subrequests                       []*TReqMultisetAttributesNode_TSubrequest `protobuf:"bytes,2,rep,name=subrequests" json:"subrequests,omitempty"`
	Force                             *bool                                     `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
	TransactionalOptions              *TTransactionalOptions                    `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions               *TPrerequisiteOptions                     `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions                   *TMutatingOptions                         `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions       `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

func (x *TReqMultisetAttributesNode) Reset() {
	*x = TReqMultisetAttributesNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMultisetAttributesNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMultisetAttributesNode) ProtoMessage() {}

func (x *TReqMultisetAttributesNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMultisetAttributesNode.ProtoReflect.Descriptor instead.
func (*TReqMultisetAttributesNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{124}
}

func (x *TReqMultisetAttributesNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqMultisetAttributesNode) GetSubrequests() []*TReqMultisetAttributesNode_TSubrequest {
	if x != nil {
		return x.Subrequests
	}
	return nil
}

func (x *TReqMultisetAttributesNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *TReqMultisetAttributesNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqMultisetAttributesNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqMultisetAttributesNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqMultisetAttributesNode) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspMultisetAttributesNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspMultisetAttributesNode) Reset() {
	*x = TRspMultisetAttributesNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMultisetAttributesNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMultisetAttributesNode) ProtoMessage() {}

func (x *TRspMultisetAttributesNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMultisetAttributesNode.ProtoReflect.Descriptor instead.
func (*TRspMultisetAttributesNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{125}
}

type TReqLockNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`  // YPath
	Mode                 *int32                 `protobuf:"varint,2,req,name=mode" json:"mode,omitempty"` // NCypressClient::ELockMode
	Waitable             *bool                  `protobuf:"varint,3,opt,name=waitable,def=0" json:"waitable,omitempty"`
	ChildKey             *string                `protobuf:"bytes,4,opt,name=child_key,json=childKey" json:"child_key,omitempty"`
	AttributeKey         *string                `protobuf:"bytes,5,opt,name=attribute_key,json=attributeKey" json:"attribute_key,omitempty"`
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions      *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqLockNode fields.
const (
	Default_TReqLockNode_Waitable = bool(false)
)

func (x *TReqLockNode) Reset() {
	*x = TReqLockNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqLockNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqLockNode) ProtoMessage() {}

func (x *TReqLockNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqLockNode.ProtoReflect.Descriptor instead.
func (*TReqLockNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{126}
}

func (x *TReqLockNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqLockNode) GetMode() int32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *TReqLockNode) GetWaitable() bool {
	if x != nil && x.Waitable != nil {
		return *x.Waitable
	}
	return Default_TReqLockNode_Waitable
}

func (x *TReqLockNode) GetChildKey() string {
	if x != nil && x.ChildKey != nil {
		return *x.ChildKey
	}
	return ""
}

func (x *TReqLockNode) GetAttributeKey() string {
	if x != nil && x.AttributeKey != nil {
		return *x.AttributeKey
	}
	return ""
}

func (x *TReqLockNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqLockNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqLockNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspLockNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   *misc.TGuid `protobuf:"bytes,1,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
	LockId   *misc.TGuid `protobuf:"bytes,2,req,name=lock_id,json=lockId" json:"lock_id,omitempty"`
	Revision *uint64     `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
}

func (x *TRspLockNode) Reset() {
	*x = TRspLockNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspLockNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspLockNode) ProtoMessage() {}

func (x *TRspLockNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspLockNode.ProtoReflect.Descriptor instead.
func (*TRspLockNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{127}
}

func (x *TRspLockNode) GetNodeId() *misc.TGuid {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *TRspLockNode) GetLockId() *misc.TGuid {
	if x != nil {
		return x.LockId
	}
	return nil
}

func (x *TRspLockNode) GetRevision() uint64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

type TReqUnlockNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions      *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqUnlockNode) Reset() {
	*x = TReqUnlockNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqUnlockNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqUnlockNode) ProtoMessage() {}

func (x *TReqUnlockNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqUnlockNode.ProtoReflect.Descriptor instead.
func (*TReqUnlockNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{128}
}

func (x *TReqUnlockNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqUnlockNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqUnlockNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqUnlockNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspUnlockNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspUnlockNode) Reset() {
	*x = TRspUnlockNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspUnlockNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspUnlockNode) ProtoMessage() {}

func (x *TRspUnlockNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspUnlockNode.ProtoReflect.Descriptor instead.
func (*TRspUnlockNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{129}
}

type TReqCopyNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPath                        []byte                 `protobuf:"bytes,1,req,name=src_path,json=srcPath" json:"src_path,omitempty"` // YPath
	DstPath                        []byte                 `protobuf:"bytes,2,req,name=dst_path,json=dstPath" json:"dst_path,omitempty"` // YPath
	Recursive                      *bool                  `protobuf:"varint,3,opt,name=recursive,def=0" json:"recursive,omitempty"`
	Force                          *bool                  `protobuf:"varint,4,opt,name=force,def=0" json:"force,omitempty"`
	PreserveAccount                *bool                  `protobuf:"varint,5,opt,name=preserve_account,json=preserveAccount,def=0" json:"preserve_account,omitempty"`
	PreserveCreationTime           *bool                  `protobuf:"varint,7,opt,name=preserve_creation_time,json=preserveCreationTime,def=0" json:"preserve_creation_time,omitempty"`
	PreserveModificationTime       *bool                  `protobuf:"varint,10,opt,name=preserve_modification_time,json=preserveModificationTime,def=0" json:"preserve_modification_time,omitempty"`
	PreserveExpirationTime         *bool                  `protobuf:"varint,6,opt,name=preserve_expiration_time,json=preserveExpirationTime,def=0" json:"preserve_expiration_time,omitempty"`
	PreserveExpirationTimeout      *bool                  `protobuf:"varint,14,opt,name=preserve_expiration_timeout,json=preserveExpirationTimeout,def=0" json:"preserve_expiration_timeout,omitempty"`
	PreserveOwner                  *bool                  `protobuf:"varint,11,opt,name=preserve_owner,json=preserveOwner,def=0" json:"preserve_owner,omitempty"`
	PreserveAcl                    *bool                  `protobuf:"varint,12,opt,name=preserve_acl,json=preserveAcl,def=0" json:"preserve_acl,omitempty"`
	IgnoreExisting                 *bool                  `protobuf:"varint,8,opt,name=ignore_existing,json=ignoreExisting,def=0" json:"ignore_existing,omitempty"`
	LockExisting                   *bool                  `protobuf:"varint,13,opt,name=lock_existing,json=lockExisting,def=0" json:"lock_existing,omitempty"`
	PessimisticQuotaCheck          *bool                  `protobuf:"varint,9,opt,name=pessimistic_quota_check,json=pessimisticQuotaCheck,def=1" json:"pessimistic_quota_check,omitempty"`
	EnableCrossCellCopying         *bool                  `protobuf:"varint,15,opt,name=enable_cross_cell_copying,json=enableCrossCellCopying,def=1" json:"enable_cross_cell_copying,omitempty"`
	AllowSecondaryIndexAbandonment *bool                  `protobuf:"varint,16,opt,name=allow_secondary_index_abandonment,json=allowSecondaryIndexAbandonment,def=0" json:"allow_secondary_index_abandonment,omitempty"`
	TransactionalOptions           *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions            *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions                *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqCopyNode fields.
const (
	Default_TReqCopyNode_Recursive                      = bool(false)
	Default_TReqCopyNode_Force                          = bool(false)
	Default_TReqCopyNode_PreserveAccount                = bool(false)
	Default_TReqCopyNode_PreserveCreationTime           = bool(false)
	Default_TReqCopyNode_PreserveModificationTime       = bool(false)
	Default_TReqCopyNode_PreserveExpirationTime         = bool(false)
	Default_TReqCopyNode_PreserveExpirationTimeout      = bool(false)
	Default_TReqCopyNode_PreserveOwner                  = bool(false)
	Default_TReqCopyNode_PreserveAcl                    = bool(false)
	Default_TReqCopyNode_IgnoreExisting                 = bool(false)
	Default_TReqCopyNode_LockExisting                   = bool(false)
	Default_TReqCopyNode_PessimisticQuotaCheck          = bool(true)
	Default_TReqCopyNode_EnableCrossCellCopying         = bool(true)
	Default_TReqCopyNode_AllowSecondaryIndexAbandonment = bool(false)
)

func (x *TReqCopyNode) Reset() {
	*x = TReqCopyNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCopyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCopyNode) ProtoMessage() {}

func (x *TReqCopyNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCopyNode.ProtoReflect.Descriptor instead.
func (*TReqCopyNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{130}
}

func (x *TReqCopyNode) GetSrcPath() []byte {
	if x != nil {
		return x.SrcPath
	}
	return nil
}

func (x *TReqCopyNode) GetDstPath() []byte {
	if x != nil {
		return x.DstPath
	}
	return nil
}

func (x *TReqCopyNode) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return Default_TReqCopyNode_Recursive
}

func (x *TReqCopyNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_TReqCopyNode_Force
}

func (x *TReqCopyNode) GetPreserveAccount() bool {
	if x != nil && x.PreserveAccount != nil {
		return *x.PreserveAccount
	}
	return Default_TReqCopyNode_PreserveAccount
}

func (x *TReqCopyNode) GetPreserveCreationTime() bool {
	if x != nil && x.PreserveCreationTime != nil {
		return *x.PreserveCreationTime
	}
	return Default_TReqCopyNode_PreserveCreationTime
}

func (x *TReqCopyNode) GetPreserveModificationTime() bool {
	if x != nil && x.PreserveModificationTime != nil {
		return *x.PreserveModificationTime
	}
	return Default_TReqCopyNode_PreserveModificationTime
}

func (x *TReqCopyNode) GetPreserveExpirationTime() bool {
	if x != nil && x.PreserveExpirationTime != nil {
		return *x.PreserveExpirationTime
	}
	return Default_TReqCopyNode_PreserveExpirationTime
}

func (x *TReqCopyNode) GetPreserveExpirationTimeout() bool {
	if x != nil && x.PreserveExpirationTimeout != nil {
		return *x.PreserveExpirationTimeout
	}
	return Default_TReqCopyNode_PreserveExpirationTimeout
}

func (x *TReqCopyNode) GetPreserveOwner() bool {
	if x != nil && x.PreserveOwner != nil {
		return *x.PreserveOwner
	}
	return Default_TReqCopyNode_PreserveOwner
}

func (x *TReqCopyNode) GetPreserveAcl() bool {
	if x != nil && x.PreserveAcl != nil {
		return *x.PreserveAcl
	}
	return Default_TReqCopyNode_PreserveAcl
}

func (x *TReqCopyNode) GetIgnoreExisting() bool {
	if x != nil && x.IgnoreExisting != nil {
		return *x.IgnoreExisting
	}
	return Default_TReqCopyNode_IgnoreExisting
}

func (x *TReqCopyNode) GetLockExisting() bool {
	if x != nil && x.LockExisting != nil {
		return *x.LockExisting
	}
	return Default_TReqCopyNode_LockExisting
}

func (x *TReqCopyNode) GetPessimisticQuotaCheck() bool {
	if x != nil && x.PessimisticQuotaCheck != nil {
		return *x.PessimisticQuotaCheck
	}
	return Default_TReqCopyNode_PessimisticQuotaCheck
}

func (x *TReqCopyNode) GetEnableCrossCellCopying() bool {
	if x != nil && x.EnableCrossCellCopying != nil {
		return *x.EnableCrossCellCopying
	}
	return Default_TReqCopyNode_EnableCrossCellCopying
}

func (x *TReqCopyNode) GetAllowSecondaryIndexAbandonment() bool {
	if x != nil && x.AllowSecondaryIndexAbandonment != nil {
		return *x.AllowSecondaryIndexAbandonment
	}
	return Default_TReqCopyNode_AllowSecondaryIndexAbandonment
}

func (x *TReqCopyNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqCopyNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqCopyNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspCopyNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId *misc.TGuid `protobuf:"bytes,1,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (x *TRspCopyNode) Reset() {
	*x = TRspCopyNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCopyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCopyNode) ProtoMessage() {}

func (x *TRspCopyNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCopyNode.ProtoReflect.Descriptor instead.
func (*TRspCopyNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{131}
}

func (x *TRspCopyNode) GetNodeId() *misc.TGuid {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type TReqMoveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPath                        []byte                 `protobuf:"bytes,1,req,name=src_path,json=srcPath" json:"src_path,omitempty"` // YPath
	DstPath                        []byte                 `protobuf:"bytes,2,req,name=dst_path,json=dstPath" json:"dst_path,omitempty"` // YPath
	Recursive                      *bool                  `protobuf:"varint,3,opt,name=recursive,def=0" json:"recursive,omitempty"`
	Force                          *bool                  `protobuf:"varint,4,opt,name=force,def=0" json:"force,omitempty"`
	PreserveAccount                *bool                  `protobuf:"varint,5,opt,name=preserve_account,json=preserveAccount,def=0" json:"preserve_account,omitempty"`
	PreserveCreationTime           *bool                  `protobuf:"varint,8,opt,name=preserve_creation_time,json=preserveCreationTime,def=0" json:"preserve_creation_time,omitempty"`
	PreserveModificationTime       *bool                  `protobuf:"varint,9,opt,name=preserve_modification_time,json=preserveModificationTime,def=0" json:"preserve_modification_time,omitempty"`
	PreserveExpirationTime         *bool                  `protobuf:"varint,6,opt,name=preserve_expiration_time,json=preserveExpirationTime,def=0" json:"preserve_expiration_time,omitempty"`
	PreserveExpirationTimeout      *bool                  `protobuf:"varint,12,opt,name=preserve_expiration_timeout,json=preserveExpirationTimeout,def=0" json:"preserve_expiration_timeout,omitempty"`
	PreserveOwner                  *bool                  `protobuf:"varint,11,opt,name=preserve_owner,json=preserveOwner,def=0" json:"preserve_owner,omitempty"`
	PreserveAcl                    *bool                  `protobuf:"varint,14,opt,name=preserve_acl,json=preserveAcl,def=0" json:"preserve_acl,omitempty"`
	PessimisticQuotaCheck          *bool                  `protobuf:"varint,7,opt,name=pessimistic_quota_check,json=pessimisticQuotaCheck,def=1" json:"pessimistic_quota_check,omitempty"`
	EnableCrossCellCopying         *bool                  `protobuf:"varint,13,opt,name=enable_cross_cell_copying,json=enableCrossCellCopying,def=1" json:"enable_cross_cell_copying,omitempty"`
	AllowSecondaryIndexAbandonment *bool                  `protobuf:"varint,15,opt,name=allow_secondary_index_abandonment,json=allowSecondaryIndexAbandonment,def=0" json:"allow_secondary_index_abandonment,omitempty"`
	TransactionalOptions           *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions            *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions                *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqMoveNode fields.
const (
	Default_TReqMoveNode_Recursive                      = bool(false)
	Default_TReqMoveNode_Force                          = bool(false)
	Default_TReqMoveNode_PreserveAccount                = bool(false)
	Default_TReqMoveNode_PreserveCreationTime           = bool(false)
	Default_TReqMoveNode_PreserveModificationTime       = bool(false)
	Default_TReqMoveNode_PreserveExpirationTime         = bool(false)
	Default_TReqMoveNode_PreserveExpirationTimeout      = bool(false)
	Default_TReqMoveNode_PreserveOwner                  = bool(false)
	Default_TReqMoveNode_PreserveAcl                    = bool(false)
	Default_TReqMoveNode_PessimisticQuotaCheck          = bool(true)
	Default_TReqMoveNode_EnableCrossCellCopying         = bool(true)
	Default_TReqMoveNode_AllowSecondaryIndexAbandonment = bool(false)
)

func (x *TReqMoveNode) Reset() {
	*x = TReqMoveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMoveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMoveNode) ProtoMessage() {}

func (x *TReqMoveNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMoveNode.ProtoReflect.Descriptor instead.
func (*TReqMoveNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{132}
}

func (x *TReqMoveNode) GetSrcPath() []byte {
	if x != nil {
		return x.SrcPath
	}
	return nil
}

func (x *TReqMoveNode) GetDstPath() []byte {
	if x != nil {
		return x.DstPath
	}
	return nil
}

func (x *TReqMoveNode) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return Default_TReqMoveNode_Recursive
}

func (x *TReqMoveNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_TReqMoveNode_Force
}

func (x *TReqMoveNode) GetPreserveAccount() bool {
	if x != nil && x.PreserveAccount != nil {
		return *x.PreserveAccount
	}
	return Default_TReqMoveNode_PreserveAccount
}

func (x *TReqMoveNode) GetPreserveCreationTime() bool {
	if x != nil && x.PreserveCreationTime != nil {
		return *x.PreserveCreationTime
	}
	return Default_TReqMoveNode_PreserveCreationTime
}

func (x *TReqMoveNode) GetPreserveModificationTime() bool {
	if x != nil && x.PreserveModificationTime != nil {
		return *x.PreserveModificationTime
	}
	return Default_TReqMoveNode_PreserveModificationTime
}

func (x *TReqMoveNode) GetPreserveExpirationTime() bool {
	if x != nil && x.PreserveExpirationTime != nil {
		return *x.PreserveExpirationTime
	}
	return Default_TReqMoveNode_PreserveExpirationTime
}

func (x *TReqMoveNode) GetPreserveExpirationTimeout() bool {
	if x != nil && x.PreserveExpirationTimeout != nil {
		return *x.PreserveExpirationTimeout
	}
	return Default_TReqMoveNode_PreserveExpirationTimeout
}

func (x *TReqMoveNode) GetPreserveOwner() bool {
	if x != nil && x.PreserveOwner != nil {
		return *x.PreserveOwner
	}
	return Default_TReqMoveNode_PreserveOwner
}

func (x *TReqMoveNode) GetPreserveAcl() bool {
	if x != nil && x.PreserveAcl != nil {
		return *x.PreserveAcl
	}
	return Default_TReqMoveNode_PreserveAcl
}

func (x *TReqMoveNode) GetPessimisticQuotaCheck() bool {
	if x != nil && x.PessimisticQuotaCheck != nil {
		return *x.PessimisticQuotaCheck
	}
	return Default_TReqMoveNode_PessimisticQuotaCheck
}

func (x *TReqMoveNode) GetEnableCrossCellCopying() bool {
	if x != nil && x.EnableCrossCellCopying != nil {
		return *x.EnableCrossCellCopying
	}
	return Default_TReqMoveNode_EnableCrossCellCopying
}

func (x *TReqMoveNode) GetAllowSecondaryIndexAbandonment() bool {
	if x != nil && x.AllowSecondaryIndexAbandonment != nil {
		return *x.AllowSecondaryIndexAbandonment
	}
	return Default_TReqMoveNode_AllowSecondaryIndexAbandonment
}

func (x *TReqMoveNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqMoveNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqMoveNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspMoveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId *misc.TGuid `protobuf:"bytes,1,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (x *TRspMoveNode) Reset() {
	*x = TRspMoveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMoveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMoveNode) ProtoMessage() {}

func (x *TRspMoveNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMoveNode.ProtoReflect.Descriptor instead.
func (*TRspMoveNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{133}
}

func (x *TRspMoveNode) GetNodeId() *misc.TGuid {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type TReqLinkNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPath              []byte                 `protobuf:"bytes,1,req,name=src_path,json=srcPath" json:"src_path,omitempty"` // YPath
	DstPath              []byte                 `protobuf:"bytes,2,req,name=dst_path,json=dstPath" json:"dst_path,omitempty"` // YPath
	Recursive            *bool                  `protobuf:"varint,3,opt,name=recursive,def=0" json:"recursive,omitempty"`
	Force                *bool                  `protobuf:"varint,4,opt,name=force,def=0" json:"force,omitempty"`
	IgnoreExisting       *bool                  `protobuf:"varint,5,opt,name=ignore_existing,json=ignoreExisting,def=0" json:"ignore_existing,omitempty"`
	LockExisting         *bool                  `protobuf:"varint,6,opt,name=lock_existing,json=lockExisting,def=0" json:"lock_existing,omitempty"`
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions      *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqLinkNode fields.
const (
	Default_TReqLinkNode_Recursive      = bool(false)
	Default_TReqLinkNode_Force          = bool(false)
	Default_TReqLinkNode_IgnoreExisting = bool(false)
	Default_TReqLinkNode_LockExisting   = bool(false)
)

func (x *TReqLinkNode) Reset() {
	*x = TReqLinkNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqLinkNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqLinkNode) ProtoMessage() {}

func (x *TReqLinkNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqLinkNode.ProtoReflect.Descriptor instead.
func (*TReqLinkNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{134}
}

func (x *TReqLinkNode) GetSrcPath() []byte {
	if x != nil {
		return x.SrcPath
	}
	return nil
}

func (x *TReqLinkNode) GetDstPath() []byte {
	if x != nil {
		return x.DstPath
	}
	return nil
}

func (x *TReqLinkNode) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return Default_TReqLinkNode_Recursive
}

func (x *TReqLinkNode) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_TReqLinkNode_Force
}

func (x *TReqLinkNode) GetIgnoreExisting() bool {
	if x != nil && x.IgnoreExisting != nil {
		return *x.IgnoreExisting
	}
	return Default_TReqLinkNode_IgnoreExisting
}

func (x *TReqLinkNode) GetLockExisting() bool {
	if x != nil && x.LockExisting != nil {
		return *x.LockExisting
	}
	return Default_TReqLinkNode_LockExisting
}

func (x *TReqLinkNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqLinkNode) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqLinkNode) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspLinkNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId *misc.TGuid `protobuf:"bytes,1,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (x *TRspLinkNode) Reset() {
	*x = TRspLinkNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspLinkNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspLinkNode) ProtoMessage() {}

func (x *TRspLinkNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspLinkNode.ProtoReflect.Descriptor instead.
func (*TRspLinkNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{135}
}

func (x *TRspLinkNode) GetNodeId() *misc.TGuid {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type TReqConcatenateNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPaths             [][]byte                       `protobuf:"bytes,1,rep,name=src_paths,json=srcPaths" json:"src_paths,omitempty"` // YPath
	DstPath              []byte                         `protobuf:"bytes,2,req,name=dst_path,json=dstPath" json:"dst_path,omitempty"`    // YPath
	Fetcher              *TReqConcatenateNodes_TFetcher `protobuf:"bytes,3,opt,name=fetcher" json:"fetcher,omitempty"`
	TransactionalOptions *TTransactionalOptions         `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	// TODO(sandello): Prerequisite?
	MutatingOptions *TMutatingOptions `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqConcatenateNodes) Reset() {
	*x = TReqConcatenateNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqConcatenateNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqConcatenateNodes) ProtoMessage() {}

func (x *TReqConcatenateNodes) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqConcatenateNodes.ProtoReflect.Descriptor instead.
func (*TReqConcatenateNodes) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{136}
}

func (x *TReqConcatenateNodes) GetSrcPaths() [][]byte {
	if x != nil {
		return x.SrcPaths
	}
	return nil
}

func (x *TReqConcatenateNodes) GetDstPath() []byte {
	if x != nil {
		return x.DstPath
	}
	return nil
}

func (x *TReqConcatenateNodes) GetFetcher() *TReqConcatenateNodes_TFetcher {
	if x != nil {
		return x.Fetcher
	}
	return nil
}

func (x *TReqConcatenateNodes) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqConcatenateNodes) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspConcatenateNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspConcatenateNodes) Reset() {
	*x = TRspConcatenateNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspConcatenateNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspConcatenateNodes) ProtoMessage() {}

func (x *TRspConcatenateNodes) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspConcatenateNodes.ProtoReflect.Descriptor instead.
func (*TRspConcatenateNodes) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{137}
}

type TReqExternalizeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	CellTag              *int32                 `protobuf:"varint,2,req,name=cell_tag,json=cellTag" json:"cell_tag,omitempty"`
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
}

func (x *TReqExternalizeNode) Reset() {
	*x = TReqExternalizeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqExternalizeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqExternalizeNode) ProtoMessage() {}

func (x *TReqExternalizeNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqExternalizeNode.ProtoReflect.Descriptor instead.
func (*TReqExternalizeNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{138}
}

func (x *TReqExternalizeNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqExternalizeNode) GetCellTag() int32 {
	if x != nil && x.CellTag != nil {
		return *x.CellTag
	}
	return 0
}

func (x *TReqExternalizeNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

type TRspExternalizeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspExternalizeNode) Reset() {
	*x = TRspExternalizeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspExternalizeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspExternalizeNode) ProtoMessage() {}

func (x *TRspExternalizeNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspExternalizeNode.ProtoReflect.Descriptor instead.
func (*TRspExternalizeNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{139}
}

type TReqInternalizeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
}

func (x *TReqInternalizeNode) Reset() {
	*x = TReqInternalizeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqInternalizeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqInternalizeNode) ProtoMessage() {}

func (x *TReqInternalizeNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqInternalizeNode.ProtoReflect.Descriptor instead.
func (*TReqInternalizeNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{140}
}

func (x *TReqInternalizeNode) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqInternalizeNode) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

type TRspInternalizeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspInternalizeNode) Reset() {
	*x = TRspInternalizeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspInternalizeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspInternalizeNode) ProtoMessage() {}

func (x *TRspInternalizeNode) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspInternalizeNode.ProtoReflect.Descriptor instead.
func (*TRspInternalizeNode) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{141}
}

type TReqAttachTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId *misc.TGuid `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	// COMPAT(kiselyovp) next option is unused and should get removed
	AutoAbort     *bool   `protobuf:"varint,2,opt,name=auto_abort,json=autoAbort,def=0" json:"auto_abort,omitempty"`
	PingPeriod    *uint64 `protobuf:"varint,4,opt,name=ping_period,json=pingPeriod" json:"ping_period,omitempty"` // TDuration
	Ping          *bool   `protobuf:"varint,5,opt,name=ping,def=1" json:"ping,omitempty"`
	PingAncestors *bool   `protobuf:"varint,6,opt,name=ping_ancestors,json=pingAncestors,def=0" json:"ping_ancestors,omitempty"`
}

// Default values for TReqAttachTransaction fields.
const (
	Default_TReqAttachTransaction_AutoAbort     = bool(false)
	Default_TReqAttachTransaction_Ping          = bool(true)
	Default_TReqAttachTransaction_PingAncestors = bool(false)
)

func (x *TReqAttachTransaction) Reset() {
	*x = TReqAttachTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAttachTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAttachTransaction) ProtoMessage() {}

func (x *TReqAttachTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAttachTransaction.ProtoReflect.Descriptor instead.
func (*TReqAttachTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{142}
}

func (x *TReqAttachTransaction) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *TReqAttachTransaction) GetAutoAbort() bool {
	if x != nil && x.AutoAbort != nil {
		return *x.AutoAbort
	}
	return Default_TReqAttachTransaction_AutoAbort
}

func (x *TReqAttachTransaction) GetPingPeriod() uint64 {
	if x != nil && x.PingPeriod != nil {
		return *x.PingPeriod
	}
	return 0
}

func (x *TReqAttachTransaction) GetPing() bool {
	if x != nil && x.Ping != nil {
		return *x.Ping
	}
	return Default_TReqAttachTransaction_Ping
}

func (x *TReqAttachTransaction) GetPingAncestors() bool {
	if x != nil && x.PingAncestors != nil {
		return *x.PingAncestors
	}
	return Default_TReqAttachTransaction_PingAncestors
}

type TRspAttachTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *ETransactionType `protobuf:"varint,1,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.ETransactionType" json:"type,omitempty"`
	StartTimestamp *uint64           `protobuf:"varint,2,req,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	Atomicity      *EAtomicity       `protobuf:"varint,3,req,name=atomicity,enum=NYT.NApi.NRpcProxy.NProto.EAtomicity" json:"atomicity,omitempty"`
	Durability     *EDurability      `protobuf:"varint,4,req,name=durability,enum=NYT.NApi.NRpcProxy.NProto.EDurability" json:"durability,omitempty"`
	Timeout        *int64            `protobuf:"varint,5,req,name=timeout" json:"timeout,omitempty"`
	// Sequence number source id allocated for this client if transaction is tablet.
	// Client is free not to use this source id and generate source id on its own,
	// for example, for backward compatibility. In this case client is responsible for
	// source id uniqueness between all transaction clients.
	// See TReqModifyRows.sequence_number_source_id for details.
	SequenceNumberSourceId *int64 `protobuf:"varint,6,opt,name=sequence_number_source_id,json=sequenceNumberSourceId" json:"sequence_number_source_id,omitempty"`
}

func (x *TRspAttachTransaction) Reset() {
	*x = TRspAttachTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAttachTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAttachTransaction) ProtoMessage() {}

func (x *TRspAttachTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAttachTransaction.ProtoReflect.Descriptor instead.
func (*TRspAttachTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{143}
}

func (x *TRspAttachTransaction) GetType() ETransactionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ETransactionType_TT_MASTER
}

func (x *TRspAttachTransaction) GetStartTimestamp() uint64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *TRspAttachTransaction) GetAtomicity() EAtomicity {
	if x != nil && x.Atomicity != nil {
		return *x.Atomicity
	}
	return EAtomicity_A_FULL
}

func (x *TRspAttachTransaction) GetDurability() EDurability {
	if x != nil && x.Durability != nil {
		return *x.Durability
	}
	return EDurability_D_SYNC
}

func (x *TRspAttachTransaction) GetTimeout() int64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *TRspAttachTransaction) GetSequenceNumberSourceId() int64 {
	if x != nil && x.SequenceNumberSourceId != nil {
		return *x.SequenceNumberSourceId
	}
	return 0
}

type TReqDetachTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId *misc.TGuid `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (x *TReqDetachTransaction) Reset() {
	*x = TReqDetachTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDetachTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDetachTransaction) ProtoMessage() {}

func (x *TReqDetachTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDetachTransaction.ProtoReflect.Descriptor instead.
func (*TReqDetachTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{144}
}

func (x *TReqDetachTransaction) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

type TRspDetachTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspDetachTransaction) Reset() {
	*x = TRspDetachTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDetachTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDetachTransaction) ProtoMessage() {}

func (x *TRspDetachTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDetachTransaction.ProtoReflect.Descriptor instead.
func (*TRspDetachTransaction) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{145}
}

type TReqMountTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	CellId             *misc.TGuid          `protobuf:"bytes,2,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	Freeze             *bool                `protobuf:"varint,3,opt,name=freeze,def=0" json:"freeze,omitempty"`
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
	TargetCellIds      []*misc.TGuid        `protobuf:"bytes,4,rep,name=target_cell_ids,json=targetCellIds" json:"target_cell_ids,omitempty"`
}

// Default values for TReqMountTable fields.
const (
	Default_TReqMountTable_Freeze = bool(false)
)

func (x *TReqMountTable) Reset() {
	*x = TReqMountTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMountTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMountTable) ProtoMessage() {}

func (x *TReqMountTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMountTable.ProtoReflect.Descriptor instead.
func (*TReqMountTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{146}
}

func (x *TReqMountTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqMountTable) GetCellId() *misc.TGuid {
	if x != nil {
		return x.CellId
	}
	return nil
}

func (x *TReqMountTable) GetFreeze() bool {
	if x != nil && x.Freeze != nil {
		return *x.Freeze
	}
	return Default_TReqMountTable_Freeze
}

func (x *TReqMountTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqMountTable) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

func (x *TReqMountTable) GetTargetCellIds() []*misc.TGuid {
	if x != nil {
		return x.TargetCellIds
	}
	return nil
}

type TRspMountTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspMountTable) Reset() {
	*x = TRspMountTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMountTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMountTable) ProtoMessage() {}

func (x *TRspMountTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMountTable.ProtoReflect.Descriptor instead.
func (*TRspMountTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{147}
}

type TReqUnmountTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Force              *bool                `protobuf:"varint,2,opt,name=force,def=0" json:"force,omitempty"`
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
}

// Default values for TReqUnmountTable fields.
const (
	Default_TReqUnmountTable_Force = bool(false)
)

func (x *TReqUnmountTable) Reset() {
	*x = TReqUnmountTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqUnmountTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqUnmountTable) ProtoMessage() {}

func (x *TReqUnmountTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqUnmountTable.ProtoReflect.Descriptor instead.
func (*TReqUnmountTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{148}
}

func (x *TReqUnmountTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqUnmountTable) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_TReqUnmountTable_Force
}

func (x *TReqUnmountTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqUnmountTable) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

type TRspUnmountTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspUnmountTable) Reset() {
	*x = TRspUnmountTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspUnmountTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspUnmountTable) ProtoMessage() {}

func (x *TRspUnmountTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspUnmountTable.ProtoReflect.Descriptor instead.
func (*TRspUnmountTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{149}
}

type TReqRemountTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
}

func (x *TReqRemountTable) Reset() {
	*x = TReqRemountTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRemountTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRemountTable) ProtoMessage() {}

func (x *TReqRemountTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRemountTable.ProtoReflect.Descriptor instead.
func (*TReqRemountTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{150}
}

func (x *TReqRemountTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqRemountTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqRemountTable) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

type TRspRemountTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRemountTable) Reset() {
	*x = TRspRemountTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRemountTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRemountTable) ProtoMessage() {}

func (x *TRspRemountTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRemountTable.ProtoReflect.Descriptor instead.
func (*TRspRemountTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{151}
}

type TReqFreezeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
}

func (x *TReqFreezeTable) Reset() {
	*x = TReqFreezeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqFreezeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqFreezeTable) ProtoMessage() {}

func (x *TReqFreezeTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqFreezeTable.ProtoReflect.Descriptor instead.
func (*TReqFreezeTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{152}
}

func (x *TReqFreezeTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqFreezeTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqFreezeTable) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

type TRspFreezeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspFreezeTable) Reset() {
	*x = TRspFreezeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspFreezeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspFreezeTable) ProtoMessage() {}

func (x *TRspFreezeTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspFreezeTable.ProtoReflect.Descriptor instead.
func (*TRspFreezeTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{153}
}

type TReqUnfreezeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
}

func (x *TReqUnfreezeTable) Reset() {
	*x = TReqUnfreezeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqUnfreezeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqUnfreezeTable) ProtoMessage() {}

func (x *TReqUnfreezeTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqUnfreezeTable.ProtoReflect.Descriptor instead.
func (*TReqUnfreezeTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{154}
}

func (x *TReqUnfreezeTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqUnfreezeTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqUnfreezeTable) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

type TRspUnfreezeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspUnfreezeTable) Reset() {
	*x = TRspUnfreezeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspUnfreezeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspUnfreezeTable) ProtoMessage() {}

func (x *TRspUnfreezeTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspUnfreezeTable.ProtoReflect.Descriptor instead.
func (*TRspUnfreezeTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{155}
}

type TReqReshardTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	TabletCount        *int32               `protobuf:"varint,3,opt,name=tablet_count,json=tabletCount" json:"tablet_count,omitempty"`
	Uniform            *bool                `protobuf:"varint,4,opt,name=uniform" json:"uniform,omitempty"`
	EnableSlicing      *bool                `protobuf:"varint,5,opt,name=enable_slicing,json=enableSlicing" json:"enable_slicing,omitempty"`
	SlicingAccuracy    *float64             `protobuf:"fixed64,6,opt,name=slicing_accuracy,json=slicingAccuracy" json:"slicing_accuracy,omitempty"`
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
	RowsetDescriptor   *TRowsetDescriptor   `protobuf:"bytes,200,opt,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
}

func (x *TReqReshardTable) Reset() {
	*x = TReqReshardTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReshardTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReshardTable) ProtoMessage() {}

func (x *TReqReshardTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReshardTable.ProtoReflect.Descriptor instead.
func (*TReqReshardTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{156}
}

func (x *TReqReshardTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqReshardTable) GetTabletCount() int32 {
	if x != nil && x.TabletCount != nil {
		return *x.TabletCount
	}
	return 0
}

func (x *TReqReshardTable) GetUniform() bool {
	if x != nil && x.Uniform != nil {
		return *x.Uniform
	}
	return false
}

func (x *TReqReshardTable) GetEnableSlicing() bool {
	if x != nil && x.EnableSlicing != nil {
		return *x.EnableSlicing
	}
	return false
}

func (x *TReqReshardTable) GetSlicingAccuracy() float64 {
	if x != nil && x.SlicingAccuracy != nil {
		return *x.SlicingAccuracy
	}
	return 0
}

func (x *TReqReshardTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqReshardTable) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

func (x *TReqReshardTable) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

type TRspReshardTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspReshardTable) Reset() {
	*x = TRspReshardTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReshardTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReshardTable) ProtoMessage() {}

func (x *TRspReshardTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReshardTable.ProtoReflect.Descriptor instead.
func (*TRspReshardTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{157}
}

type TReqReshardTableAutomatic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               []byte               `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	KeepActions        *bool                `protobuf:"varint,2,req,name=keep_actions,json=keepActions,def=0" json:"keep_actions,omitempty"`
	MutatingOptions    *TMutatingOptions    `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	TabletRangeOptions *TTabletRangeOptions `protobuf:"bytes,104,opt,name=tablet_range_options,json=tabletRangeOptions" json:"tablet_range_options,omitempty"`
}

// Default values for TReqReshardTableAutomatic fields.
const (
	Default_TReqReshardTableAutomatic_KeepActions = bool(false)
)

func (x *TReqReshardTableAutomatic) Reset() {
	*x = TReqReshardTableAutomatic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReshardTableAutomatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReshardTableAutomatic) ProtoMessage() {}

func (x *TReqReshardTableAutomatic) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReshardTableAutomatic.ProtoReflect.Descriptor instead.
func (*TReqReshardTableAutomatic) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{158}
}

func (x *TReqReshardTableAutomatic) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqReshardTableAutomatic) GetKeepActions() bool {
	if x != nil && x.KeepActions != nil {
		return *x.KeepActions
	}
	return Default_TReqReshardTableAutomatic_KeepActions
}

func (x *TReqReshardTableAutomatic) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqReshardTableAutomatic) GetTabletRangeOptions() *TTabletRangeOptions {
	if x != nil {
		return x.TabletRangeOptions
	}
	return nil
}

type TRspReshardTableAutomatic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletActions []*misc.TGuid `protobuf:"bytes,1,rep,name=tablet_actions,json=tabletActions" json:"tablet_actions,omitempty"`
}

func (x *TRspReshardTableAutomatic) Reset() {
	*x = TRspReshardTableAutomatic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReshardTableAutomatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReshardTableAutomatic) ProtoMessage() {}

func (x *TRspReshardTableAutomatic) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReshardTableAutomatic.ProtoReflect.Descriptor instead.
func (*TRspReshardTableAutomatic) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{159}
}

func (x *TRspReshardTableAutomatic) GetTabletActions() []*misc.TGuid {
	if x != nil {
		return x.TabletActions
	}
	return nil
}

type TReqTrimTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path            []byte  `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	TabletIndex     *int32  `protobuf:"varint,2,req,name=tablet_index,json=tabletIndex" json:"tablet_index,omitempty"`
	TrimmedRowCount *uint64 `protobuf:"varint,3,req,name=trimmed_row_count,json=trimmedRowCount" json:"trimmed_row_count,omitempty"`
}

func (x *TReqTrimTable) Reset() {
	*x = TReqTrimTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqTrimTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqTrimTable) ProtoMessage() {}

func (x *TReqTrimTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqTrimTable.ProtoReflect.Descriptor instead.
func (*TReqTrimTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{160}
}

func (x *TReqTrimTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqTrimTable) GetTabletIndex() int32 {
	if x != nil && x.TabletIndex != nil {
		return *x.TabletIndex
	}
	return 0
}

func (x *TReqTrimTable) GetTrimmedRowCount() uint64 {
	if x != nil && x.TrimmedRowCount != nil {
		return *x.TrimmedRowCount
	}
	return 0
}

type TRspTrimTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspTrimTable) Reset() {
	*x = TRspTrimTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspTrimTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspTrimTable) ProtoMessage() {}

func (x *TRspTrimTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspTrimTable.ProtoReflect.Descriptor instead.
func (*TRspTrimTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{161}
}

type TReqAlterTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                             `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`     // YPath
	Schema               []byte                             `protobuf:"bytes,2,opt,name=schema" json:"schema,omitempty"` // YSON
	Dynamic              *bool                              `protobuf:"varint,3,opt,name=dynamic" json:"dynamic,omitempty"`
	UpstreamReplicaId    *misc.TGuid                        `protobuf:"bytes,4,opt,name=upstream_replica_id,json=upstreamReplicaId" json:"upstream_replica_id,omitempty"`
	SchemaModification   *ETableSchemaModification          `protobuf:"varint,5,opt,name=schema_modification,json=schemaModification,enum=NYT.NApi.NRpcProxy.NProto.ETableSchemaModification" json:"schema_modification,omitempty"`
	ReplicationProgress  *chaos_client.TReplicationProgress `protobuf:"bytes,6,opt,name=replication_progress,json=replicationProgress" json:"replication_progress,omitempty"`
	SchemaId             *misc.TGuid                        `protobuf:"bytes,7,opt,name=schema_id,json=schemaId" json:"schema_id,omitempty"`
	TransactionalOptions *TTransactionalOptions             `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	MutatingOptions      *TMutatingOptions                  `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"` // XXX(sandello): Prerequisite?
}

func (x *TReqAlterTable) Reset() {
	*x = TReqAlterTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAlterTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAlterTable) ProtoMessage() {}

func (x *TReqAlterTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAlterTable.ProtoReflect.Descriptor instead.
func (*TReqAlterTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{162}
}

func (x *TReqAlterTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqAlterTable) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TReqAlterTable) GetDynamic() bool {
	if x != nil && x.Dynamic != nil {
		return *x.Dynamic
	}
	return false
}

func (x *TReqAlterTable) GetUpstreamReplicaId() *misc.TGuid {
	if x != nil {
		return x.UpstreamReplicaId
	}
	return nil
}

func (x *TReqAlterTable) GetSchemaModification() ETableSchemaModification {
	if x != nil && x.SchemaModification != nil {
		return *x.SchemaModification
	}
	return ETableSchemaModification_TSM_NONE
}

func (x *TReqAlterTable) GetReplicationProgress() *chaos_client.TReplicationProgress {
	if x != nil {
		return x.ReplicationProgress
	}
	return nil
}

func (x *TReqAlterTable) GetSchemaId() *misc.TGuid {
	if x != nil {
		return x.SchemaId
	}
	return nil
}

func (x *TReqAlterTable) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqAlterTable) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspAlterTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAlterTable) Reset() {
	*x = TRspAlterTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAlterTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAlterTable) ProtoMessage() {}

func (x *TRspAlterTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAlterTable.ProtoReflect.Descriptor instead.
func (*TRspAlterTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{163}
}

type TReqAlterTableReplica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId                    *misc.TGuid        `protobuf:"bytes,1,req,name=replica_id,json=replicaId" json:"replica_id,omitempty"`
	Enabled                      *bool              `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	Mode                         *ETableReplicaMode `protobuf:"varint,3,opt,name=mode,enum=NYT.NApi.NRpcProxy.NProto.ETableReplicaMode" json:"mode,omitempty"`
	PreserveTimestamps           *bool              `protobuf:"varint,4,opt,name=preserve_timestamps,json=preserveTimestamps" json:"preserve_timestamps,omitempty"`
	Atomicity                    *EAtomicity        `protobuf:"varint,5,opt,name=atomicity,enum=NYT.NApi.NRpcProxy.NProto.EAtomicity" json:"atomicity,omitempty"`
	EnableReplicatedTableTracker *bool              `protobuf:"varint,6,opt,name=enable_replicated_table_tracker,json=enableReplicatedTableTracker" json:"enable_replicated_table_tracker,omitempty"`
	ReplicaPath                  []byte             `protobuf:"bytes,7,opt,name=replica_path,json=replicaPath" json:"replica_path,omitempty"` // YPath
	MutatingOptions              *TMutatingOptions  `protobuf:"bytes,100,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqAlterTableReplica) Reset() {
	*x = TReqAlterTableReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAlterTableReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAlterTableReplica) ProtoMessage() {}

func (x *TReqAlterTableReplica) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAlterTableReplica.ProtoReflect.Descriptor instead.
func (*TReqAlterTableReplica) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{164}
}

func (x *TReqAlterTableReplica) GetReplicaId() *misc.TGuid {
	if x != nil {
		return x.ReplicaId
	}
	return nil
}

func (x *TReqAlterTableReplica) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *TReqAlterTableReplica) GetMode() ETableReplicaMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ETableReplicaMode_TRM_SYNC
}

func (x *TReqAlterTableReplica) GetPreserveTimestamps() bool {
	if x != nil && x.PreserveTimestamps != nil {
		return *x.PreserveTimestamps
	}
	return false
}

func (x *TReqAlterTableReplica) GetAtomicity() EAtomicity {
	if x != nil && x.Atomicity != nil {
		return *x.Atomicity
	}
	return EAtomicity_A_FULL
}

func (x *TReqAlterTableReplica) GetEnableReplicatedTableTracker() bool {
	if x != nil && x.EnableReplicatedTableTracker != nil {
		return *x.EnableReplicatedTableTracker
	}
	return false
}

func (x *TReqAlterTableReplica) GetReplicaPath() []byte {
	if x != nil {
		return x.ReplicaPath
	}
	return nil
}

func (x *TReqAlterTableReplica) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspAlterTableReplica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAlterTableReplica) Reset() {
	*x = TRspAlterTableReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAlterTableReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAlterTableReplica) ProtoMessage() {}

func (x *TRspAlterTableReplica) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAlterTableReplica.ProtoReflect.Descriptor instead.
func (*TRspAlterTableReplica) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{165}
}

type TReqAlterReplicationCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicationCardId            *misc.TGuid       `protobuf:"bytes,1,req,name=replication_card_id,json=replicationCardId" json:"replication_card_id,omitempty"`                // NChaosClient::TReplicationCardId
	ReplicatedTableOptions       []byte            `protobuf:"bytes,2,opt,name=replicated_table_options,json=replicatedTableOptions" json:"replicated_table_options,omitempty"` // YSON
	EnableReplicatedTableTracker *bool             `protobuf:"varint,3,opt,name=enable_replicated_table_tracker,json=enableReplicatedTableTracker" json:"enable_replicated_table_tracker,omitempty"`
	ReplicationCardCollocationId *misc.TGuid       `protobuf:"bytes,4,opt,name=replication_card_collocation_id,json=replicationCardCollocationId" json:"replication_card_collocation_id,omitempty"`
	CollocationOptions           []byte            `protobuf:"bytes,5,opt,name=collocation_options,json=collocationOptions" json:"collocation_options,omitempty"` // NTabletClient::TReplicationCollocationOptions
	MutatingOptions              *TMutatingOptions `protobuf:"bytes,100,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqAlterReplicationCard) Reset() {
	*x = TReqAlterReplicationCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAlterReplicationCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAlterReplicationCard) ProtoMessage() {}

func (x *TReqAlterReplicationCard) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAlterReplicationCard.ProtoReflect.Descriptor instead.
func (*TReqAlterReplicationCard) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{166}
}

func (x *TReqAlterReplicationCard) GetReplicationCardId() *misc.TGuid {
	if x != nil {
		return x.ReplicationCardId
	}
	return nil
}

func (x *TReqAlterReplicationCard) GetReplicatedTableOptions() []byte {
	if x != nil {
		return x.ReplicatedTableOptions
	}
	return nil
}

func (x *TReqAlterReplicationCard) GetEnableReplicatedTableTracker() bool {
	if x != nil && x.EnableReplicatedTableTracker != nil {
		return *x.EnableReplicatedTableTracker
	}
	return false
}

func (x *TReqAlterReplicationCard) GetReplicationCardCollocationId() *misc.TGuid {
	if x != nil {
		return x.ReplicationCardCollocationId
	}
	return nil
}

func (x *TReqAlterReplicationCard) GetCollocationOptions() []byte {
	if x != nil {
		return x.CollocationOptions
	}
	return nil
}

func (x *TReqAlterReplicationCard) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspAlterReplicationCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAlterReplicationCard) Reset() {
	*x = TRspAlterReplicationCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAlterReplicationCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAlterReplicationCard) ProtoMessage() {}

func (x *TRspAlterReplicationCard) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAlterReplicationCard.ProtoReflect.Descriptor instead.
func (*TRspAlterReplicationCard) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{167}
}

type TFetchChunkSpecConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxChunkPerFetch         *int32 `protobuf:"varint,1,opt,name=max_chunk_per_fetch,json=maxChunkPerFetch" json:"max_chunk_per_fetch,omitempty"`
	MaxChunkPerLocateRequest *int32 `protobuf:"varint,2,opt,name=max_chunk_per_locate_request,json=maxChunkPerLocateRequest" json:"max_chunk_per_locate_request,omitempty"`
}

func (x *TFetchChunkSpecConfig) Reset() {
	*x = TFetchChunkSpecConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFetchChunkSpecConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFetchChunkSpecConfig) ProtoMessage() {}

func (x *TFetchChunkSpecConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFetchChunkSpecConfig.ProtoReflect.Descriptor instead.
func (*TFetchChunkSpecConfig) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{168}
}

func (x *TFetchChunkSpecConfig) GetMaxChunkPerFetch() int32 {
	if x != nil && x.MaxChunkPerFetch != nil {
		return *x.MaxChunkPerFetch
	}
	return 0
}

func (x *TFetchChunkSpecConfig) GetMaxChunkPerLocateRequest() int32 {
	if x != nil && x.MaxChunkPerLocateRequest != nil {
		return *x.MaxChunkPerLocateRequest
	}
	return 0
}

type TFetcherConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeRpcTimeout *uint64 `protobuf:"varint,1,opt,name=node_rpc_timeout,json=nodeRpcTimeout" json:"node_rpc_timeout,omitempty"` // TDuration
}

func (x *TFetcherConfig) Reset() {
	*x = TFetcherConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFetcherConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFetcherConfig) ProtoMessage() {}

func (x *TFetcherConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFetcherConfig.ProtoReflect.Descriptor instead.
func (*TFetcherConfig) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{169}
}

func (x *TFetcherConfig) GetNodeRpcTimeout() uint64 {
	if x != nil && x.NodeRpcTimeout != nil {
		return *x.NodeRpcTimeout
	}
	return 0
}

type TReqGetColumnarStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths                [][]byte                        `protobuf:"bytes,1,rep,name=paths" json:"paths,omitempty"` // RichYPath
	FetchChunkSpecConfig *TFetchChunkSpecConfig          `protobuf:"bytes,2,opt,name=fetch_chunk_spec_config,json=fetchChunkSpecConfig" json:"fetch_chunk_spec_config,omitempty"`
	FetcherConfig        *TFetcherConfig                 `protobuf:"bytes,3,opt,name=fetcher_config,json=fetcherConfig" json:"fetcher_config,omitempty"`
	FetcherMode          *EColumnarStatisticsFetcherMode `protobuf:"varint,4,opt,name=fetcher_mode,json=fetcherMode,enum=NYT.NApi.NRpcProxy.NProto.EColumnarStatisticsFetcherMode" json:"fetcher_mode,omitempty"`
	EnableEarlyFinish    *bool                           `protobuf:"varint,5,opt,name=enable_early_finish,json=enableEarlyFinish,def=0" json:"enable_early_finish,omitempty"`
	TransactionalOptions *TTransactionalOptions          `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
}

// Default values for TReqGetColumnarStatistics fields.
const (
	Default_TReqGetColumnarStatistics_EnableEarlyFinish = bool(false)
)

func (x *TReqGetColumnarStatistics) Reset() {
	*x = TReqGetColumnarStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetColumnarStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetColumnarStatistics) ProtoMessage() {}

func (x *TReqGetColumnarStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetColumnarStatistics.ProtoReflect.Descriptor instead.
func (*TReqGetColumnarStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{170}
}

func (x *TReqGetColumnarStatistics) GetPaths() [][]byte {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *TReqGetColumnarStatistics) GetFetchChunkSpecConfig() *TFetchChunkSpecConfig {
	if x != nil {
		return x.FetchChunkSpecConfig
	}
	return nil
}

func (x *TReqGetColumnarStatistics) GetFetcherConfig() *TFetcherConfig {
	if x != nil {
		return x.FetcherConfig
	}
	return nil
}

func (x *TReqGetColumnarStatistics) GetFetcherMode() EColumnarStatisticsFetcherMode {
	if x != nil && x.FetcherMode != nil {
		return *x.FetcherMode
	}
	return EColumnarStatisticsFetcherMode_CSFM_FROM_NODES
}

func (x *TReqGetColumnarStatistics) GetEnableEarlyFinish() bool {
	if x != nil && x.EnableEarlyFinish != nil {
		return *x.EnableEarlyFinish
	}
	return Default_TReqGetColumnarStatistics_EnableEarlyFinish
}

func (x *TReqGetColumnarStatistics) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

type TColumnarStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnDataWeights     []int64 `protobuf:"varint,1,rep,name=column_data_weights,json=columnDataWeights" json:"column_data_weights,omitempty"`
	TimestampTotalWeight  *int64  `protobuf:"varint,2,opt,name=timestamp_total_weight,json=timestampTotalWeight" json:"timestamp_total_weight,omitempty"`
	LegacyChunkDataWeight *int64  `protobuf:"varint,3,opt,name=legacy_chunk_data_weight,json=legacyChunkDataWeight,def=0" json:"legacy_chunk_data_weight,omitempty"`
	// Per-column approximate minimum values. For more information check comments in NYT::NTableClient::TColumnarStatistics.
	ColumnMinValues []byte `protobuf:"bytes,9,opt,name=column_min_values,json=columnMinValues" json:"column_min_values,omitempty"`
	// Per-column approximate maximum values. For more information check comments in NYT::NTableClient::TColumnarStatistics.
	ColumnMaxValues []byte `protobuf:"bytes,10,opt,name=column_max_values,json=columnMaxValues" json:"column_max_values,omitempty"`
	// Number of non-null values in each column.
	ColumnNonNullValueCounts []int64 `protobuf:"varint,11,rep,name=column_non_null_value_counts,json=columnNonNullValueCounts" json:"column_non_null_value_counts,omitempty"`
	// Total number of rows in all chunks whose meta contains columnar statistics.
	ChunkRowCount *int64 `protobuf:"varint,12,opt,name=chunk_row_count,json=chunkRowCount" json:"chunk_row_count,omitempty"`
	// Total number of rows in legacy chunks whose meta misses columnar statistics.
	LegacyChunkRowCount *int64 `protobuf:"varint,13,opt,name=legacy_chunk_row_count,json=legacyChunkRowCount" json:"legacy_chunk_row_count,omitempty"`
	// Per-column hyperloglog digest to approximate number of unique values
	ColumnHyperloglogDigests []*misc.THyperLogLogDigest `protobuf:"bytes,14,rep,name=column_hyperloglog_digests,json=columnHyperloglogDigests" json:"column_hyperloglog_digests,omitempty"`
}

// Default values for TColumnarStatistics fields.
const (
	Default_TColumnarStatistics_LegacyChunkDataWeight = int64(0)
)

func (x *TColumnarStatistics) Reset() {
	*x = TColumnarStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TColumnarStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TColumnarStatistics) ProtoMessage() {}

func (x *TColumnarStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TColumnarStatistics.ProtoReflect.Descriptor instead.
func (*TColumnarStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{171}
}

func (x *TColumnarStatistics) GetColumnDataWeights() []int64 {
	if x != nil {
		return x.ColumnDataWeights
	}
	return nil
}

func (x *TColumnarStatistics) GetTimestampTotalWeight() int64 {
	if x != nil && x.TimestampTotalWeight != nil {
		return *x.TimestampTotalWeight
	}
	return 0
}

func (x *TColumnarStatistics) GetLegacyChunkDataWeight() int64 {
	if x != nil && x.LegacyChunkDataWeight != nil {
		return *x.LegacyChunkDataWeight
	}
	return Default_TColumnarStatistics_LegacyChunkDataWeight
}

func (x *TColumnarStatistics) GetColumnMinValues() []byte {
	if x != nil {
		return x.ColumnMinValues
	}
	return nil
}

func (x *TColumnarStatistics) GetColumnMaxValues() []byte {
	if x != nil {
		return x.ColumnMaxValues
	}
	return nil
}

func (x *TColumnarStatistics) GetColumnNonNullValueCounts() []int64 {
	if x != nil {
		return x.ColumnNonNullValueCounts
	}
	return nil
}

func (x *TColumnarStatistics) GetChunkRowCount() int64 {
	if x != nil && x.ChunkRowCount != nil {
		return *x.ChunkRowCount
	}
	return 0
}

func (x *TColumnarStatistics) GetLegacyChunkRowCount() int64 {
	if x != nil && x.LegacyChunkRowCount != nil {
		return *x.LegacyChunkRowCount
	}
	return 0
}

func (x *TColumnarStatistics) GetColumnHyperloglogDigests() []*misc.THyperLogLogDigest {
	if x != nil {
		return x.ColumnHyperloglogDigests
	}
	return nil
}

type TRspGetColumnarStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statistics []*TColumnarStatistics `protobuf:"bytes,1,rep,name=statistics" json:"statistics,omitempty"`
}

func (x *TRspGetColumnarStatistics) Reset() {
	*x = TRspGetColumnarStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetColumnarStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetColumnarStatistics) ProtoMessage() {}

func (x *TRspGetColumnarStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetColumnarStatistics.ProtoReflect.Descriptor instead.
func (*TRspGetColumnarStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{172}
}

func (x *TRspGetColumnarStatistics) GetStatistics() []*TColumnarStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type TReqDisableChunkLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddress   *string       `protobuf:"bytes,1,req,name=node_address,json=nodeAddress" json:"node_address,omitempty"`
	LocationUuids []*misc.TGuid `protobuf:"bytes,2,rep,name=location_uuids,json=locationUuids" json:"location_uuids,omitempty"`
}

func (x *TReqDisableChunkLocations) Reset() {
	*x = TReqDisableChunkLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDisableChunkLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDisableChunkLocations) ProtoMessage() {}

func (x *TReqDisableChunkLocations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDisableChunkLocations.ProtoReflect.Descriptor instead.
func (*TReqDisableChunkLocations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{173}
}

func (x *TReqDisableChunkLocations) GetNodeAddress() string {
	if x != nil && x.NodeAddress != nil {
		return *x.NodeAddress
	}
	return ""
}

func (x *TReqDisableChunkLocations) GetLocationUuids() []*misc.TGuid {
	if x != nil {
		return x.LocationUuids
	}
	return nil
}

type TRspDisableChunkLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationUuids []*misc.TGuid `protobuf:"bytes,1,rep,name=location_uuids,json=locationUuids" json:"location_uuids,omitempty"`
}

func (x *TRspDisableChunkLocations) Reset() {
	*x = TRspDisableChunkLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDisableChunkLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDisableChunkLocations) ProtoMessage() {}

func (x *TRspDisableChunkLocations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDisableChunkLocations.ProtoReflect.Descriptor instead.
func (*TRspDisableChunkLocations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{174}
}

func (x *TRspDisableChunkLocations) GetLocationUuids() []*misc.TGuid {
	if x != nil {
		return x.LocationUuids
	}
	return nil
}

type TReqDestroyChunkLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddress          *string       `protobuf:"bytes,1,req,name=node_address,json=nodeAddress" json:"node_address,omitempty"`
	LocationUuids        []*misc.TGuid `protobuf:"bytes,2,rep,name=location_uuids,json=locationUuids" json:"location_uuids,omitempty"`
	RecoverUnlinkedDisks *bool         `protobuf:"varint,3,opt,name=recover_unlinked_disks,json=recoverUnlinkedDisks,def=0" json:"recover_unlinked_disks,omitempty"`
}

// Default values for TReqDestroyChunkLocations fields.
const (
	Default_TReqDestroyChunkLocations_RecoverUnlinkedDisks = bool(false)
)

func (x *TReqDestroyChunkLocations) Reset() {
	*x = TReqDestroyChunkLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDestroyChunkLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDestroyChunkLocations) ProtoMessage() {}

func (x *TReqDestroyChunkLocations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDestroyChunkLocations.ProtoReflect.Descriptor instead.
func (*TReqDestroyChunkLocations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{175}
}

func (x *TReqDestroyChunkLocations) GetNodeAddress() string {
	if x != nil && x.NodeAddress != nil {
		return *x.NodeAddress
	}
	return ""
}

func (x *TReqDestroyChunkLocations) GetLocationUuids() []*misc.TGuid {
	if x != nil {
		return x.LocationUuids
	}
	return nil
}

func (x *TReqDestroyChunkLocations) GetRecoverUnlinkedDisks() bool {
	if x != nil && x.RecoverUnlinkedDisks != nil {
		return *x.RecoverUnlinkedDisks
	}
	return Default_TReqDestroyChunkLocations_RecoverUnlinkedDisks
}

type TRspDestroyChunkLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationUuids []*misc.TGuid `protobuf:"bytes,1,rep,name=location_uuids,json=locationUuids" json:"location_uuids,omitempty"`
}

func (x *TRspDestroyChunkLocations) Reset() {
	*x = TRspDestroyChunkLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDestroyChunkLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDestroyChunkLocations) ProtoMessage() {}

func (x *TRspDestroyChunkLocations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDestroyChunkLocations.ProtoReflect.Descriptor instead.
func (*TRspDestroyChunkLocations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{176}
}

func (x *TRspDestroyChunkLocations) GetLocationUuids() []*misc.TGuid {
	if x != nil {
		return x.LocationUuids
	}
	return nil
}

type TReqResurrectChunkLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddress   *string       `protobuf:"bytes,1,req,name=node_address,json=nodeAddress" json:"node_address,omitempty"`
	LocationUuids []*misc.TGuid `protobuf:"bytes,2,rep,name=location_uuids,json=locationUuids" json:"location_uuids,omitempty"`
}

func (x *TReqResurrectChunkLocations) Reset() {
	*x = TReqResurrectChunkLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqResurrectChunkLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqResurrectChunkLocations) ProtoMessage() {}

func (x *TReqResurrectChunkLocations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqResurrectChunkLocations.ProtoReflect.Descriptor instead.
func (*TReqResurrectChunkLocations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{177}
}

func (x *TReqResurrectChunkLocations) GetNodeAddress() string {
	if x != nil && x.NodeAddress != nil {
		return *x.NodeAddress
	}
	return ""
}

func (x *TReqResurrectChunkLocations) GetLocationUuids() []*misc.TGuid {
	if x != nil {
		return x.LocationUuids
	}
	return nil
}

type TRspResurrectChunkLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationUuids []*misc.TGuid `protobuf:"bytes,1,rep,name=location_uuids,json=locationUuids" json:"location_uuids,omitempty"`
}

func (x *TRspResurrectChunkLocations) Reset() {
	*x = TRspResurrectChunkLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspResurrectChunkLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspResurrectChunkLocations) ProtoMessage() {}

func (x *TRspResurrectChunkLocations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspResurrectChunkLocations.ProtoReflect.Descriptor instead.
func (*TRspResurrectChunkLocations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{178}
}

func (x *TRspResurrectChunkLocations) GetLocationUuids() []*misc.TGuid {
	if x != nil {
		return x.LocationUuids
	}
	return nil
}

type TReqRequestRestart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddress *string `protobuf:"bytes,1,req,name=node_address,json=nodeAddress" json:"node_address,omitempty"`
}

func (x *TReqRequestRestart) Reset() {
	*x = TReqRequestRestart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRequestRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRequestRestart) ProtoMessage() {}

func (x *TReqRequestRestart) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRequestRestart.ProtoReflect.Descriptor instead.
func (*TReqRequestRestart) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{179}
}

func (x *TReqRequestRestart) GetNodeAddress() string {
	if x != nil && x.NodeAddress != nil {
		return *x.NodeAddress
	}
	return ""
}

type TRspRequestRestart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRequestRestart) Reset() {
	*x = TRspRequestRestart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRequestRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRequestRestart) ProtoMessage() {}

func (x *TRspRequestRestart) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRequestRestart.ProtoReflect.Descriptor instead.
func (*TRspRequestRestart) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{180}
}

type TReqPartitionTables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths                        [][]byte                                      `protobuf:"bytes,1,rep,name=paths" json:"paths,omitempty"` // RichYPath
	FetchChunkSpecConfig         *TFetchChunkSpecConfig                        `protobuf:"bytes,2,opt,name=fetch_chunk_spec_config,json=fetchChunkSpecConfig" json:"fetch_chunk_spec_config,omitempty"`
	FetcherConfig                *TFetcherConfig                               `protobuf:"bytes,3,opt,name=fetcher_config,json=fetcherConfig" json:"fetcher_config,omitempty"`
	ChunkSliceFetcherConfig      *TReqPartitionTables_TChunkSliceFetcherConfig `protobuf:"bytes,4,opt,name=chunk_slice_fetcher_config,json=chunkSliceFetcherConfig" json:"chunk_slice_fetcher_config,omitempty"`
	PartitionMode                *EPartitionTablesMode                         `protobuf:"varint,5,req,name=partition_mode,json=partitionMode,enum=NYT.NApi.NRpcProxy.NProto.EPartitionTablesMode" json:"partition_mode,omitempty"`
	DataWeightPerPartition       *int64                                        `protobuf:"varint,6,req,name=data_weight_per_partition,json=dataWeightPerPartition" json:"data_weight_per_partition,omitempty"`
	MaxPartitionCount            *int32                                        `protobuf:"varint,7,opt,name=max_partition_count,json=maxPartitionCount" json:"max_partition_count,omitempty"`
	EnableKeyGuarantee           *bool                                         `protobuf:"varint,8,opt,name=enable_key_guarantee,json=enableKeyGuarantee" json:"enable_key_guarantee,omitempty"`
	AdjustDataWeightPerPartition *bool                                         `protobuf:"varint,9,opt,name=adjust_data_weight_per_partition,json=adjustDataWeightPerPartition" json:"adjust_data_weight_per_partition,omitempty"`
	TransactionalOptions         *TTransactionalOptions                        `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
}

func (x *TReqPartitionTables) Reset() {
	*x = TReqPartitionTables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPartitionTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPartitionTables) ProtoMessage() {}

func (x *TReqPartitionTables) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPartitionTables.ProtoReflect.Descriptor instead.
func (*TReqPartitionTables) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{181}
}

func (x *TReqPartitionTables) GetPaths() [][]byte {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *TReqPartitionTables) GetFetchChunkSpecConfig() *TFetchChunkSpecConfig {
	if x != nil {
		return x.FetchChunkSpecConfig
	}
	return nil
}

func (x *TReqPartitionTables) GetFetcherConfig() *TFetcherConfig {
	if x != nil {
		return x.FetcherConfig
	}
	return nil
}

func (x *TReqPartitionTables) GetChunkSliceFetcherConfig() *TReqPartitionTables_TChunkSliceFetcherConfig {
	if x != nil {
		return x.ChunkSliceFetcherConfig
	}
	return nil
}

func (x *TReqPartitionTables) GetPartitionMode() EPartitionTablesMode {
	if x != nil && x.PartitionMode != nil {
		return *x.PartitionMode
	}
	return EPartitionTablesMode_TPM_SORTED
}

func (x *TReqPartitionTables) GetDataWeightPerPartition() int64 {
	if x != nil && x.DataWeightPerPartition != nil {
		return *x.DataWeightPerPartition
	}
	return 0
}

func (x *TReqPartitionTables) GetMaxPartitionCount() int32 {
	if x != nil && x.MaxPartitionCount != nil {
		return *x.MaxPartitionCount
	}
	return 0
}

func (x *TReqPartitionTables) GetEnableKeyGuarantee() bool {
	if x != nil && x.EnableKeyGuarantee != nil {
		return *x.EnableKeyGuarantee
	}
	return false
}

func (x *TReqPartitionTables) GetAdjustDataWeightPerPartition() bool {
	if x != nil && x.AdjustDataWeightPerPartition != nil {
		return *x.AdjustDataWeightPerPartition
	}
	return false
}

func (x *TReqPartitionTables) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

type TMultiTablePartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableRanges         [][]byte                          `protobuf:"bytes,1,rep,name=table_ranges,json=tableRanges" json:"table_ranges,omitempty"` // RichYPath
	AggregateStatistics *TMultiTablePartition_TStatistics `protobuf:"bytes,2,opt,name=aggregate_statistics,json=aggregateStatistics" json:"aggregate_statistics,omitempty"`
}

func (x *TMultiTablePartition) Reset() {
	*x = TMultiTablePartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMultiTablePartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMultiTablePartition) ProtoMessage() {}

func (x *TMultiTablePartition) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMultiTablePartition.ProtoReflect.Descriptor instead.
func (*TMultiTablePartition) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{182}
}

func (x *TMultiTablePartition) GetTableRanges() [][]byte {
	if x != nil {
		return x.TableRanges
	}
	return nil
}

func (x *TMultiTablePartition) GetAggregateStatistics() *TMultiTablePartition_TStatistics {
	if x != nil {
		return x.AggregateStatistics
	}
	return nil
}

type TRspPartitionTables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partitions []*TMultiTablePartition `protobuf:"bytes,1,rep,name=partitions" json:"partitions,omitempty"`
}

func (x *TRspPartitionTables) Reset() {
	*x = TRspPartitionTables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPartitionTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPartitionTables) ProtoMessage() {}

func (x *TRspPartitionTables) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPartitionTables.ProtoReflect.Descriptor instead.
func (*TRspPartitionTables) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{183}
}

func (x *TRspPartitionTables) GetPartitions() []*TMultiTablePartition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type TReqBalanceTabletCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bundle          *string           `protobuf:"bytes,1,req,name=bundle" json:"bundle,omitempty"`
	MovableTables   []string          `protobuf:"bytes,2,rep,name=movable_tables,json=movableTables" json:"movable_tables,omitempty"`
	KeepActions     *bool             `protobuf:"varint,3,req,name=keep_actions,json=keepActions,def=0" json:"keep_actions,omitempty"`
	MutatingOptions *TMutatingOptions `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqBalanceTabletCells fields.
const (
	Default_TReqBalanceTabletCells_KeepActions = bool(false)
)

func (x *TReqBalanceTabletCells) Reset() {
	*x = TReqBalanceTabletCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqBalanceTabletCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqBalanceTabletCells) ProtoMessage() {}

func (x *TReqBalanceTabletCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqBalanceTabletCells.ProtoReflect.Descriptor instead.
func (*TReqBalanceTabletCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{184}
}

func (x *TReqBalanceTabletCells) GetBundle() string {
	if x != nil && x.Bundle != nil {
		return *x.Bundle
	}
	return ""
}

func (x *TReqBalanceTabletCells) GetMovableTables() []string {
	if x != nil {
		return x.MovableTables
	}
	return nil
}

func (x *TReqBalanceTabletCells) GetKeepActions() bool {
	if x != nil && x.KeepActions != nil {
		return *x.KeepActions
	}
	return Default_TReqBalanceTabletCells_KeepActions
}

func (x *TReqBalanceTabletCells) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspBalanceTabletCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletActions []*misc.TGuid `protobuf:"bytes,1,rep,name=tablet_actions,json=tabletActions" json:"tablet_actions,omitempty"`
}

func (x *TRspBalanceTabletCells) Reset() {
	*x = TRspBalanceTabletCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspBalanceTabletCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspBalanceTabletCells) ProtoMessage() {}

func (x *TRspBalanceTabletCells) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspBalanceTabletCells.ProtoReflect.Descriptor instead.
func (*TRspBalanceTabletCells) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{185}
}

func (x *TRspBalanceTabletCells) GetTabletActions() []*misc.TGuid {
	if x != nil {
		return x.TabletActions
	}
	return nil
}

type TReqGetFileFromCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5                  *string                `protobuf:"bytes,1,req,name=md5" json:"md5,omitempty"`
	CachePath            []byte                 `protobuf:"bytes,2,req,name=cache_path,json=cachePath" json:"cache_path,omitempty"` // YPath
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	MasterReadOptions    *TMasterReadOptions    `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
}

func (x *TReqGetFileFromCache) Reset() {
	*x = TReqGetFileFromCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetFileFromCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetFileFromCache) ProtoMessage() {}

func (x *TReqGetFileFromCache) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetFileFromCache.ProtoReflect.Descriptor instead.
func (*TReqGetFileFromCache) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{186}
}

func (x *TReqGetFileFromCache) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

func (x *TReqGetFileFromCache) GetCachePath() []byte {
	if x != nil {
		return x.CachePath
	}
	return nil
}

func (x *TReqGetFileFromCache) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqGetFileFromCache) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

type TRspGetFileFromCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TGetFileFromCacheResult `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *TRspGetFileFromCache) Reset() {
	*x = TRspGetFileFromCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetFileFromCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetFileFromCache) ProtoMessage() {}

func (x *TRspGetFileFromCache) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetFileFromCache.ProtoReflect.Descriptor instead.
func (*TRspGetFileFromCache) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{187}
}

func (x *TRspGetFileFromCache) GetResult() *TGetFileFromCacheResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TReqPutFileToCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                      []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Md5                       *string                `protobuf:"bytes,2,req,name=md5" json:"md5,omitempty"`
	CachePath                 []byte                 `protobuf:"bytes,3,req,name=cache_path,json=cachePath" json:"cache_path,omitempty"` // YPath
	PreserveExpirationTimeout *bool                  `protobuf:"varint,4,opt,name=preserve_expiration_timeout,json=preserveExpirationTimeout,def=0" json:"preserve_expiration_timeout,omitempty"`
	TransactionalOptions      *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions       *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MasterReadOptions         *TMasterReadOptions    `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
	MutatingOptions           *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

// Default values for TReqPutFileToCache fields.
const (
	Default_TReqPutFileToCache_PreserveExpirationTimeout = bool(false)
)

func (x *TReqPutFileToCache) Reset() {
	*x = TReqPutFileToCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPutFileToCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPutFileToCache) ProtoMessage() {}

func (x *TReqPutFileToCache) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPutFileToCache.ProtoReflect.Descriptor instead.
func (*TReqPutFileToCache) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{188}
}

func (x *TReqPutFileToCache) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqPutFileToCache) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

func (x *TReqPutFileToCache) GetCachePath() []byte {
	if x != nil {
		return x.CachePath
	}
	return nil
}

func (x *TReqPutFileToCache) GetPreserveExpirationTimeout() bool {
	if x != nil && x.PreserveExpirationTimeout != nil {
		return *x.PreserveExpirationTimeout
	}
	return Default_TReqPutFileToCache_PreserveExpirationTimeout
}

func (x *TReqPutFileToCache) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqPutFileToCache) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqPutFileToCache) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

func (x *TReqPutFileToCache) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspPutFileToCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TPutFileToCacheResult `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *TRspPutFileToCache) Reset() {
	*x = TRspPutFileToCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPutFileToCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPutFileToCache) ProtoMessage() {}

func (x *TRspPutFileToCache) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPutFileToCache.ProtoReflect.Descriptor instead.
func (*TRspPutFileToCache) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{189}
}

func (x *TRspPutFileToCache) GetResult() *TPutFileToCacheResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TReqStartOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 *EOperationType        `protobuf:"varint,1,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.EOperationType" json:"type,omitempty"`
	Spec                 []byte                 `protobuf:"bytes,2,req,name=spec" json:"spec,omitempty"` // YSON
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	MutatingOptions      *TMutatingOptions      `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqStartOperation) Reset() {
	*x = TReqStartOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartOperation) ProtoMessage() {}

func (x *TReqStartOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartOperation.ProtoReflect.Descriptor instead.
func (*TReqStartOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{190}
}

func (x *TReqStartOperation) GetType() EOperationType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EOperationType_OT_UNKNOWN
}

func (x *TReqStartOperation) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TReqStartOperation) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqStartOperation) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspStartOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId *misc.TGuid `protobuf:"bytes,1,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
}

func (x *TRspStartOperation) Reset() {
	*x = TRspStartOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStartOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStartOperation) ProtoMessage() {}

func (x *TRspStartOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStartOperation.ProtoReflect.Descriptor instead.
func (*TRspStartOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{191}
}

func (x *TRspStartOperation) GetOperationId() *misc.TGuid {
	if x != nil {
		return x.OperationId
	}
	return nil
}

type TReqAbortOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqAbortOperation_OperationId
	//	*TReqAbortOperation_OperationAlias
	OperationIdOrAlias isTReqAbortOperation_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	AbortMessage       *string                                 `protobuf:"bytes,2,opt,name=abort_message,json=abortMessage" json:"abort_message,omitempty"`
}

func (x *TReqAbortOperation) Reset() {
	*x = TReqAbortOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAbortOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAbortOperation) ProtoMessage() {}

func (x *TReqAbortOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAbortOperation.ProtoReflect.Descriptor instead.
func (*TReqAbortOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{192}
}

func (m *TReqAbortOperation) GetOperationIdOrAlias() isTReqAbortOperation_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqAbortOperation) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqAbortOperation_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqAbortOperation) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqAbortOperation_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqAbortOperation) GetAbortMessage() string {
	if x != nil && x.AbortMessage != nil {
		return *x.AbortMessage
	}
	return ""
}

type isTReqAbortOperation_OperationIdOrAlias interface {
	isTReqAbortOperation_OperationIdOrAlias()
}

type TReqAbortOperation_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqAbortOperation_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,3,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqAbortOperation_OperationId) isTReqAbortOperation_OperationIdOrAlias() {}

func (*TReqAbortOperation_OperationAlias) isTReqAbortOperation_OperationIdOrAlias() {}

type TRspAbortOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAbortOperation) Reset() {
	*x = TRspAbortOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAbortOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAbortOperation) ProtoMessage() {}

func (x *TRspAbortOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAbortOperation.ProtoReflect.Descriptor instead.
func (*TRspAbortOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{193}
}

type TReqSuspendOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqSuspendOperation_OperationId
	//	*TReqSuspendOperation_OperationAlias
	OperationIdOrAlias isTReqSuspendOperation_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	AbortRunningJobs   *bool                                     `protobuf:"varint,2,opt,name=abort_running_jobs,json=abortRunningJobs,def=0" json:"abort_running_jobs,omitempty"`
	Reason             *string                                   `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
}

// Default values for TReqSuspendOperation fields.
const (
	Default_TReqSuspendOperation_AbortRunningJobs = bool(false)
)

func (x *TReqSuspendOperation) Reset() {
	*x = TReqSuspendOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSuspendOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSuspendOperation) ProtoMessage() {}

func (x *TReqSuspendOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSuspendOperation.ProtoReflect.Descriptor instead.
func (*TReqSuspendOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{194}
}

func (m *TReqSuspendOperation) GetOperationIdOrAlias() isTReqSuspendOperation_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqSuspendOperation) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqSuspendOperation_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqSuspendOperation) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqSuspendOperation_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqSuspendOperation) GetAbortRunningJobs() bool {
	if x != nil && x.AbortRunningJobs != nil {
		return *x.AbortRunningJobs
	}
	return Default_TReqSuspendOperation_AbortRunningJobs
}

func (x *TReqSuspendOperation) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type isTReqSuspendOperation_OperationIdOrAlias interface {
	isTReqSuspendOperation_OperationIdOrAlias()
}

type TReqSuspendOperation_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqSuspendOperation_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,3,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqSuspendOperation_OperationId) isTReqSuspendOperation_OperationIdOrAlias() {}

func (*TReqSuspendOperation_OperationAlias) isTReqSuspendOperation_OperationIdOrAlias() {}

type TRspSuspendOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspSuspendOperation) Reset() {
	*x = TRspSuspendOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSuspendOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSuspendOperation) ProtoMessage() {}

func (x *TRspSuspendOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSuspendOperation.ProtoReflect.Descriptor instead.
func (*TRspSuspendOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{195}
}

type TReqResumeOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqResumeOperation_OperationId
	//	*TReqResumeOperation_OperationAlias
	OperationIdOrAlias isTReqResumeOperation_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
}

func (x *TReqResumeOperation) Reset() {
	*x = TReqResumeOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqResumeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqResumeOperation) ProtoMessage() {}

func (x *TReqResumeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqResumeOperation.ProtoReflect.Descriptor instead.
func (*TReqResumeOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{196}
}

func (m *TReqResumeOperation) GetOperationIdOrAlias() isTReqResumeOperation_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqResumeOperation) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqResumeOperation_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqResumeOperation) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqResumeOperation_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

type isTReqResumeOperation_OperationIdOrAlias interface {
	isTReqResumeOperation_OperationIdOrAlias()
}

type TReqResumeOperation_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqResumeOperation_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,2,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqResumeOperation_OperationId) isTReqResumeOperation_OperationIdOrAlias() {}

func (*TReqResumeOperation_OperationAlias) isTReqResumeOperation_OperationIdOrAlias() {}

type TRspResumeOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspResumeOperation) Reset() {
	*x = TRspResumeOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspResumeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspResumeOperation) ProtoMessage() {}

func (x *TRspResumeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspResumeOperation.ProtoReflect.Descriptor instead.
func (*TRspResumeOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{197}
}

type TReqCompleteOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqCompleteOperation_OperationId
	//	*TReqCompleteOperation_OperationAlias
	OperationIdOrAlias isTReqCompleteOperation_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
}

func (x *TReqCompleteOperation) Reset() {
	*x = TReqCompleteOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCompleteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCompleteOperation) ProtoMessage() {}

func (x *TReqCompleteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCompleteOperation.ProtoReflect.Descriptor instead.
func (*TReqCompleteOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{198}
}

func (m *TReqCompleteOperation) GetOperationIdOrAlias() isTReqCompleteOperation_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqCompleteOperation) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqCompleteOperation_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqCompleteOperation) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqCompleteOperation_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

type isTReqCompleteOperation_OperationIdOrAlias interface {
	isTReqCompleteOperation_OperationIdOrAlias()
}

type TReqCompleteOperation_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqCompleteOperation_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,2,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqCompleteOperation_OperationId) isTReqCompleteOperation_OperationIdOrAlias() {}

func (*TReqCompleteOperation_OperationAlias) isTReqCompleteOperation_OperationIdOrAlias() {}

type TRspCompleteOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspCompleteOperation) Reset() {
	*x = TRspCompleteOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCompleteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCompleteOperation) ProtoMessage() {}

func (x *TRspCompleteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCompleteOperation.ProtoReflect.Descriptor instead.
func (*TRspCompleteOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{199}
}

type TReqUpdateOperationParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqUpdateOperationParameters_OperationId
	//	*TReqUpdateOperationParameters_OperationAlias
	OperationIdOrAlias isTReqUpdateOperationParameters_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	Parameters         []byte                                             `protobuf:"bytes,2,req,name=parameters" json:"parameters,omitempty"` // YSON
}

func (x *TReqUpdateOperationParameters) Reset() {
	*x = TReqUpdateOperationParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqUpdateOperationParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqUpdateOperationParameters) ProtoMessage() {}

func (x *TReqUpdateOperationParameters) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqUpdateOperationParameters.ProtoReflect.Descriptor instead.
func (*TReqUpdateOperationParameters) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{200}
}

func (m *TReqUpdateOperationParameters) GetOperationIdOrAlias() isTReqUpdateOperationParameters_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqUpdateOperationParameters) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqUpdateOperationParameters_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqUpdateOperationParameters) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqUpdateOperationParameters_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqUpdateOperationParameters) GetParameters() []byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type isTReqUpdateOperationParameters_OperationIdOrAlias interface {
	isTReqUpdateOperationParameters_OperationIdOrAlias()
}

type TReqUpdateOperationParameters_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqUpdateOperationParameters_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,3,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqUpdateOperationParameters_OperationId) isTReqUpdateOperationParameters_OperationIdOrAlias() {
}

func (*TReqUpdateOperationParameters_OperationAlias) isTReqUpdateOperationParameters_OperationIdOrAlias() {
}

type TRspUpdateOperationParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspUpdateOperationParameters) Reset() {
	*x = TRspUpdateOperationParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspUpdateOperationParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspUpdateOperationParameters) ProtoMessage() {}

func (x *TRspUpdateOperationParameters) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspUpdateOperationParameters.ProtoReflect.Descriptor instead.
func (*TRspUpdateOperationParameters) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{201}
}

type TReqPatchOperationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqPatchOperationSpec_OperationId
	//	*TReqPatchOperationSpec_OperationAlias
	OperationIdOrAlias isTReqPatchOperationSpec_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	Patches            []*scheduler.TSpecPatch                     `protobuf:"bytes,3,rep,name=patches" json:"patches,omitempty"`
}

func (x *TReqPatchOperationSpec) Reset() {
	*x = TReqPatchOperationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPatchOperationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPatchOperationSpec) ProtoMessage() {}

func (x *TReqPatchOperationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPatchOperationSpec.ProtoReflect.Descriptor instead.
func (*TReqPatchOperationSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{202}
}

func (m *TReqPatchOperationSpec) GetOperationIdOrAlias() isTReqPatchOperationSpec_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqPatchOperationSpec) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqPatchOperationSpec_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqPatchOperationSpec) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqPatchOperationSpec_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqPatchOperationSpec) GetPatches() []*scheduler.TSpecPatch {
	if x != nil {
		return x.Patches
	}
	return nil
}

type isTReqPatchOperationSpec_OperationIdOrAlias interface {
	isTReqPatchOperationSpec_OperationIdOrAlias()
}

type TReqPatchOperationSpec_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqPatchOperationSpec_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,2,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqPatchOperationSpec_OperationId) isTReqPatchOperationSpec_OperationIdOrAlias() {}

func (*TReqPatchOperationSpec_OperationAlias) isTReqPatchOperationSpec_OperationIdOrAlias() {}

type TRspPatchOperationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspPatchOperationSpec) Reset() {
	*x = TRspPatchOperationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPatchOperationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPatchOperationSpec) ProtoMessage() {}

func (x *TRspPatchOperationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPatchOperationSpec.ProtoReflect.Descriptor instead.
func (*TRspPatchOperationSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{203}
}

type TReqGetOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqGetOperation_OperationId
	//	*TReqGetOperation_OperationAlias
	OperationIdOrAlias isTReqGetOperation_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	// COMPAT(max42): see comment around TLegacyAttributeKeys with the only
	// difference that attributes were serialized as repeated string historically.
	LegacyAttributes          []string                `protobuf:"bytes,2,rep,name=legacy_attributes,json=legacyAttributes" json:"legacy_attributes,omitempty"`
	Attributes                *ytree.TAttributeFilter `protobuf:"bytes,6,opt,name=attributes" json:"attributes,omitempty"`
	IncludeRuntime            *bool                   `protobuf:"varint,3,opt,name=include_runtime,json=includeRuntime,def=0" json:"include_runtime,omitempty"`
	MaximumCypressProgressAge *int64                  `protobuf:"varint,5,opt,name=maximum_cypress_progress_age,json=maximumCypressProgressAge" json:"maximum_cypress_progress_age,omitempty"` // TDuration
	MasterReadOptions         *TMasterReadOptions     `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
}

// Default values for TReqGetOperation fields.
const (
	Default_TReqGetOperation_IncludeRuntime = bool(false)
)

func (x *TReqGetOperation) Reset() {
	*x = TReqGetOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetOperation) ProtoMessage() {}

func (x *TReqGetOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetOperation.ProtoReflect.Descriptor instead.
func (*TReqGetOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{204}
}

func (m *TReqGetOperation) GetOperationIdOrAlias() isTReqGetOperation_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqGetOperation) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetOperation_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqGetOperation) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetOperation_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqGetOperation) GetLegacyAttributes() []string {
	if x != nil {
		return x.LegacyAttributes
	}
	return nil
}

func (x *TReqGetOperation) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqGetOperation) GetIncludeRuntime() bool {
	if x != nil && x.IncludeRuntime != nil {
		return *x.IncludeRuntime
	}
	return Default_TReqGetOperation_IncludeRuntime
}

func (x *TReqGetOperation) GetMaximumCypressProgressAge() int64 {
	if x != nil && x.MaximumCypressProgressAge != nil {
		return *x.MaximumCypressProgressAge
	}
	return 0
}

func (x *TReqGetOperation) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

type isTReqGetOperation_OperationIdOrAlias interface {
	isTReqGetOperation_OperationIdOrAlias()
}

type TReqGetOperation_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqGetOperation_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,4,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqGetOperation_OperationId) isTReqGetOperation_OperationIdOrAlias() {}

func (*TReqGetOperation_OperationAlias) isTReqGetOperation_OperationIdOrAlias() {}

type TRspGetOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta []byte `protobuf:"bytes,1,req,name=meta" json:"meta,omitempty"` // YSON
}

func (x *TRspGetOperation) Reset() {
	*x = TRspGetOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetOperation) ProtoMessage() {}

func (x *TRspGetOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetOperation.ProtoReflect.Descriptor instead.
func (*TRspGetOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{205}
}

func (x *TRspGetOperation) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type TReqListOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromTime        *uint64                  `protobuf:"varint,1,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`       // TInstant
	ToTime          *uint64                  `protobuf:"varint,2,opt,name=to_time,json=toTime" json:"to_time,omitempty"`             // TInstant
	CursorTime      *uint64                  `protobuf:"varint,3,opt,name=cursor_time,json=cursorTime" json:"cursor_time,omitempty"` // TInstant
	CursorDirection *EOperationSortDirection `protobuf:"varint,4,opt,name=cursor_direction,json=cursorDirection,enum=NYT.NApi.NRpcProxy.NProto.EOperationSortDirection,def=1" json:"cursor_direction,omitempty"`
	UserFilter      *string                  `protobuf:"bytes,5,opt,name=user_filter,json=userFilter" json:"user_filter,omitempty"`
	StateFilter     *EOperationState         `protobuf:"varint,7,opt,name=state_filter,json=stateFilter,enum=NYT.NApi.NRpcProxy.NProto.EOperationState" json:"state_filter,omitempty"`
	TypeFilter      *EOperationType          `protobuf:"varint,8,opt,name=type_filter,json=typeFilter,enum=NYT.NApi.NRpcProxy.NProto.EOperationType" json:"type_filter,omitempty"`
	SubstrFilter    *string                  `protobuf:"bytes,9,opt,name=substr_filter,json=substrFilter" json:"substr_filter,omitempty"`
	Pool            *string                  `protobuf:"bytes,10,opt,name=pool" json:"pool,omitempty"`
	WithFailedJobs  *bool                    `protobuf:"varint,11,opt,name=with_failed_jobs,json=withFailedJobs" json:"with_failed_jobs,omitempty"`
	IncludeArchive  *bool                    `protobuf:"varint,12,opt,name=include_archive,json=includeArchive,def=0" json:"include_archive,omitempty"`
	IncludeCounters *bool                    `protobuf:"varint,13,opt,name=include_counters,json=includeCounters,def=1" json:"include_counters,omitempty"`
	Limit           *uint64                  `protobuf:"varint,14,opt,name=limit,def=100" json:"limit,omitempty"`
	// COMPAT(max42): see comment around TLegacyAttributeKeys.
	LegacyAttributes       *TLegacyAttributeKeys   `protobuf:"bytes,15,opt,name=legacy_attributes,json=legacyAttributes" json:"legacy_attributes,omitempty"`
	Attributes             *ytree.TAttributeFilter `protobuf:"bytes,20,opt,name=attributes" json:"attributes,omitempty"`
	EnableUiMode           *bool                   `protobuf:"varint,16,opt,name=enable_ui_mode,json=enableUiMode,def=0" json:"enable_ui_mode,omitempty"`
	AccessFilter           []byte                  `protobuf:"bytes,17,opt,name=access_filter,json=accessFilter" json:"access_filter,omitempty"`                                              // YSON
	ArchiveFetchingTimeout *uint64                 `protobuf:"varint,18,opt,name=archive_fetching_timeout,json=archiveFetchingTimeout,def=3000000" json:"archive_fetching_timeout,omitempty"` // TDuration, 3 seconds by default
	PoolTree               *string                 `protobuf:"bytes,19,opt,name=pool_tree,json=poolTree" json:"pool_tree,omitempty"`
	MasterReadOptions      *TMasterReadOptions     `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
}

// Default values for TReqListOperations fields.
const (
	Default_TReqListOperations_CursorDirection        = EOperationSortDirection_OSD_PAST
	Default_TReqListOperations_IncludeArchive         = bool(false)
	Default_TReqListOperations_IncludeCounters        = bool(true)
	Default_TReqListOperations_Limit                  = uint64(100)
	Default_TReqListOperations_EnableUiMode           = bool(false)
	Default_TReqListOperations_ArchiveFetchingTimeout = uint64(3000000)
)

func (x *TReqListOperations) Reset() {
	*x = TReqListOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqListOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqListOperations) ProtoMessage() {}

func (x *TReqListOperations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqListOperations.ProtoReflect.Descriptor instead.
func (*TReqListOperations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{206}
}

func (x *TReqListOperations) GetFromTime() uint64 {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return 0
}

func (x *TReqListOperations) GetToTime() uint64 {
	if x != nil && x.ToTime != nil {
		return *x.ToTime
	}
	return 0
}

func (x *TReqListOperations) GetCursorTime() uint64 {
	if x != nil && x.CursorTime != nil {
		return *x.CursorTime
	}
	return 0
}

func (x *TReqListOperations) GetCursorDirection() EOperationSortDirection {
	if x != nil && x.CursorDirection != nil {
		return *x.CursorDirection
	}
	return Default_TReqListOperations_CursorDirection
}

func (x *TReqListOperations) GetUserFilter() string {
	if x != nil && x.UserFilter != nil {
		return *x.UserFilter
	}
	return ""
}

func (x *TReqListOperations) GetStateFilter() EOperationState {
	if x != nil && x.StateFilter != nil {
		return *x.StateFilter
	}
	return EOperationState_OS_UNKNOWN
}

func (x *TReqListOperations) GetTypeFilter() EOperationType {
	if x != nil && x.TypeFilter != nil {
		return *x.TypeFilter
	}
	return EOperationType_OT_UNKNOWN
}

func (x *TReqListOperations) GetSubstrFilter() string {
	if x != nil && x.SubstrFilter != nil {
		return *x.SubstrFilter
	}
	return ""
}

func (x *TReqListOperations) GetPool() string {
	if x != nil && x.Pool != nil {
		return *x.Pool
	}
	return ""
}

func (x *TReqListOperations) GetWithFailedJobs() bool {
	if x != nil && x.WithFailedJobs != nil {
		return *x.WithFailedJobs
	}
	return false
}

func (x *TReqListOperations) GetIncludeArchive() bool {
	if x != nil && x.IncludeArchive != nil {
		return *x.IncludeArchive
	}
	return Default_TReqListOperations_IncludeArchive
}

func (x *TReqListOperations) GetIncludeCounters() bool {
	if x != nil && x.IncludeCounters != nil {
		return *x.IncludeCounters
	}
	return Default_TReqListOperations_IncludeCounters
}

func (x *TReqListOperations) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return Default_TReqListOperations_Limit
}

func (x *TReqListOperations) GetLegacyAttributes() *TLegacyAttributeKeys {
	if x != nil {
		return x.LegacyAttributes
	}
	return nil
}

func (x *TReqListOperations) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqListOperations) GetEnableUiMode() bool {
	if x != nil && x.EnableUiMode != nil {
		return *x.EnableUiMode
	}
	return Default_TReqListOperations_EnableUiMode
}

func (x *TReqListOperations) GetAccessFilter() []byte {
	if x != nil {
		return x.AccessFilter
	}
	return nil
}

func (x *TReqListOperations) GetArchiveFetchingTimeout() uint64 {
	if x != nil && x.ArchiveFetchingTimeout != nil {
		return *x.ArchiveFetchingTimeout
	}
	return Default_TReqListOperations_ArchiveFetchingTimeout
}

func (x *TReqListOperations) GetPoolTree() string {
	if x != nil && x.PoolTree != nil {
		return *x.PoolTree
	}
	return ""
}

func (x *TReqListOperations) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

type TRspListOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TListOperationsResult `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *TRspListOperations) Reset() {
	*x = TRspListOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListOperations) ProtoMessage() {}

func (x *TRspListOperations) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListOperations.ProtoReflect.Descriptor instead.
func (*TRspListOperations) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{207}
}

func (x *TRspListOperations) GetResult() *TListOperationsResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TReqListJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqListJobs_OperationId
	//	*TReqListJobs_OperationAlias
	OperationIdOrAlias          isTReqListJobs_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	Type                        *EJobType                         `protobuf:"varint,2,opt,name=type,enum=NYT.NApi.NRpcProxy.NProto.EJobType" json:"type,omitempty"`
	State                       *EJobState                        `protobuf:"varint,3,opt,name=state,enum=NYT.NApi.NRpcProxy.NProto.EJobState" json:"state,omitempty"`
	Address                     *string                           `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	WithStderr                  *bool                             `protobuf:"varint,5,opt,name=with_stderr,json=withStderr" json:"with_stderr,omitempty"`
	WithFailContext             *bool                             `protobuf:"varint,6,opt,name=with_fail_context,json=withFailContext" json:"with_fail_context,omitempty"`
	WithSpec                    *bool                             `protobuf:"varint,7,opt,name=with_spec,json=withSpec" json:"with_spec,omitempty"`
	SortField                   *EJobSortField                    `protobuf:"varint,8,opt,name=sort_field,json=sortField,enum=NYT.NApi.NRpcProxy.NProto.EJobSortField,def=0" json:"sort_field,omitempty"`
	SortOrder                   *EJobSortDirection                `protobuf:"varint,9,opt,name=sort_order,json=sortOrder,enum=NYT.NApi.NRpcProxy.NProto.EJobSortDirection,def=0" json:"sort_order,omitempty"`
	Limit                       *int64                            `protobuf:"varint,10,opt,name=limit,def=1000" json:"limit,omitempty"`
	Offset                      *int64                            `protobuf:"varint,11,opt,name=offset,def=0" json:"offset,omitempty"`
	IncludeCypress              *bool                             `protobuf:"varint,12,opt,name=include_cypress,json=includeCypress,def=0" json:"include_cypress,omitempty"`
	IncludeControllerAgent      *bool                             `protobuf:"varint,13,opt,name=include_controller_agent,json=includeControllerAgent,def=0" json:"include_controller_agent,omitempty"`
	IncludeArchive              *bool                             `protobuf:"varint,14,opt,name=include_archive,json=includeArchive,def=0" json:"include_archive,omitempty"`
	DataSource                  *EDataSource                      `protobuf:"varint,15,opt,name=data_source,json=dataSource,enum=NYT.NApi.NRpcProxy.NProto.EDataSource,def=2" json:"data_source,omitempty"`
	RunningJobsLookbehindPeriod *uint64                           `protobuf:"varint,16,opt,name=running_jobs_lookbehind_period,json=runningJobsLookbehindPeriod" json:"running_jobs_lookbehind_period,omitempty"`
	JobCompetitionId            *misc.TGuid                       `protobuf:"bytes,17,opt,name=job_competition_id,json=jobCompetitionId" json:"job_competition_id,omitempty"`
	WithCompetitors             *bool                             `protobuf:"varint,18,opt,name=with_competitors,json=withCompetitors" json:"with_competitors,omitempty"`
	TaskName                    *string                           `protobuf:"bytes,19,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	WithMonitoringDescriptor    *bool                             `protobuf:"varint,21,opt,name=with_monitoring_descriptor,json=withMonitoringDescriptor" json:"with_monitoring_descriptor,omitempty"`
	OperationIncarnation        *string                           `protobuf:"bytes,25,opt,name=operation_incarnation,json=operationIncarnation" json:"operation_incarnation,omitempty"`
	FromTime                    *uint64                           `protobuf:"varint,22,opt,name=from_time,json=fromTime" json:"from_time,omitempty"` // TInstant
	ToTime                      *uint64                           `protobuf:"varint,23,opt,name=to_time,json=toTime" json:"to_time,omitempty"`       // TInstant
	ContinuationToken           *string                           `protobuf:"bytes,24,opt,name=continuation_token,json=continuationToken" json:"continuation_token,omitempty"`
	MasterReadOptions           *TMasterReadOptions               `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
}

// Default values for TReqListJobs fields.
const (
	Default_TReqListJobs_SortField              = EJobSortField_JSF_NONE
	Default_TReqListJobs_SortOrder              = EJobSortDirection_JSD_ASCENDING
	Default_TReqListJobs_Limit                  = int64(1000)
	Default_TReqListJobs_Offset                 = int64(0)
	Default_TReqListJobs_IncludeCypress         = bool(false)
	Default_TReqListJobs_IncludeControllerAgent = bool(false)
	Default_TReqListJobs_IncludeArchive         = bool(false)
	Default_TReqListJobs_DataSource             = EDataSource_DS_AUTO
)

func (x *TReqListJobs) Reset() {
	*x = TReqListJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqListJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqListJobs) ProtoMessage() {}

func (x *TReqListJobs) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqListJobs.ProtoReflect.Descriptor instead.
func (*TReqListJobs) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{208}
}

func (m *TReqListJobs) GetOperationIdOrAlias() isTReqListJobs_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqListJobs) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqListJobs_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqListJobs) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqListJobs_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqListJobs) GetType() EJobType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EJobType_JT_UNKNOWN
}

func (x *TReqListJobs) GetState() EJobState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EJobState_JS_UNKNOWN
}

func (x *TReqListJobs) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *TReqListJobs) GetWithStderr() bool {
	if x != nil && x.WithStderr != nil {
		return *x.WithStderr
	}
	return false
}

func (x *TReqListJobs) GetWithFailContext() bool {
	if x != nil && x.WithFailContext != nil {
		return *x.WithFailContext
	}
	return false
}

func (x *TReqListJobs) GetWithSpec() bool {
	if x != nil && x.WithSpec != nil {
		return *x.WithSpec
	}
	return false
}

func (x *TReqListJobs) GetSortField() EJobSortField {
	if x != nil && x.SortField != nil {
		return *x.SortField
	}
	return Default_TReqListJobs_SortField
}

func (x *TReqListJobs) GetSortOrder() EJobSortDirection {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return Default_TReqListJobs_SortOrder
}

func (x *TReqListJobs) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return Default_TReqListJobs_Limit
}

func (x *TReqListJobs) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return Default_TReqListJobs_Offset
}

func (x *TReqListJobs) GetIncludeCypress() bool {
	if x != nil && x.IncludeCypress != nil {
		return *x.IncludeCypress
	}
	return Default_TReqListJobs_IncludeCypress
}

func (x *TReqListJobs) GetIncludeControllerAgent() bool {
	if x != nil && x.IncludeControllerAgent != nil {
		return *x.IncludeControllerAgent
	}
	return Default_TReqListJobs_IncludeControllerAgent
}

func (x *TReqListJobs) GetIncludeArchive() bool {
	if x != nil && x.IncludeArchive != nil {
		return *x.IncludeArchive
	}
	return Default_TReqListJobs_IncludeArchive
}

func (x *TReqListJobs) GetDataSource() EDataSource {
	if x != nil && x.DataSource != nil {
		return *x.DataSource
	}
	return Default_TReqListJobs_DataSource
}

func (x *TReqListJobs) GetRunningJobsLookbehindPeriod() uint64 {
	if x != nil && x.RunningJobsLookbehindPeriod != nil {
		return *x.RunningJobsLookbehindPeriod
	}
	return 0
}

func (x *TReqListJobs) GetJobCompetitionId() *misc.TGuid {
	if x != nil {
		return x.JobCompetitionId
	}
	return nil
}

func (x *TReqListJobs) GetWithCompetitors() bool {
	if x != nil && x.WithCompetitors != nil {
		return *x.WithCompetitors
	}
	return false
}

func (x *TReqListJobs) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *TReqListJobs) GetWithMonitoringDescriptor() bool {
	if x != nil && x.WithMonitoringDescriptor != nil {
		return *x.WithMonitoringDescriptor
	}
	return false
}

func (x *TReqListJobs) GetOperationIncarnation() string {
	if x != nil && x.OperationIncarnation != nil {
		return *x.OperationIncarnation
	}
	return ""
}

func (x *TReqListJobs) GetFromTime() uint64 {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return 0
}

func (x *TReqListJobs) GetToTime() uint64 {
	if x != nil && x.ToTime != nil {
		return *x.ToTime
	}
	return 0
}

func (x *TReqListJobs) GetContinuationToken() string {
	if x != nil && x.ContinuationToken != nil {
		return *x.ContinuationToken
	}
	return ""
}

func (x *TReqListJobs) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

type isTReqListJobs_OperationIdOrAlias interface {
	isTReqListJobs_OperationIdOrAlias()
}

type TReqListJobs_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqListJobs_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,20,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqListJobs_OperationId) isTReqListJobs_OperationIdOrAlias() {}

func (*TReqListJobs_OperationAlias) isTReqListJobs_OperationIdOrAlias() {}

type TRspListJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TListJobsResult `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *TRspListJobs) Reset() {
	*x = TRspListJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListJobs) ProtoMessage() {}

func (x *TRspListJobs) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListJobs.ProtoReflect.Descriptor instead.
func (*TRspListJobs) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{209}
}

func (x *TRspListJobs) GetResult() *TListJobsResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TReqGetJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqGetJob_OperationId
	//	*TReqGetJob_OperationAlias
	OperationIdOrAlias isTReqGetJob_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	JobId              *misc.TGuid                     `protobuf:"bytes,2,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	// COMPAT(max42): see comment around TLegacyAttributeKeys.
	LegacyAttributes *TLegacyAttributeKeys   `protobuf:"bytes,3,opt,name=legacy_attributes,json=legacyAttributes" json:"legacy_attributes,omitempty"`
	Attributes       *ytree.TAttributeFilter `protobuf:"bytes,5,opt,name=attributes" json:"attributes,omitempty"`
}

func (x *TReqGetJob) Reset() {
	*x = TReqGetJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJob) ProtoMessage() {}

func (x *TReqGetJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJob.ProtoReflect.Descriptor instead.
func (*TReqGetJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{210}
}

func (m *TReqGetJob) GetOperationIdOrAlias() isTReqGetJob_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqGetJob) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJob_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqGetJob) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJob_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqGetJob) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqGetJob) GetLegacyAttributes() *TLegacyAttributeKeys {
	if x != nil {
		return x.LegacyAttributes
	}
	return nil
}

func (x *TReqGetJob) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type isTReqGetJob_OperationIdOrAlias interface {
	isTReqGetJob_OperationIdOrAlias()
}

type TReqGetJob_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqGetJob_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,4,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqGetJob_OperationId) isTReqGetJob_OperationIdOrAlias() {}

func (*TReqGetJob_OperationAlias) isTReqGetJob_OperationIdOrAlias() {}

type TRspGetJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []byte `protobuf:"bytes,1,req,name=info" json:"info,omitempty"` // YSON
}

func (x *TRspGetJob) Reset() {
	*x = TRspGetJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJob) ProtoMessage() {}

func (x *TRspGetJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJob.ProtoReflect.Descriptor instead.
func (*TRspGetJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{211}
}

func (x *TRspGetJob) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

type TReqGetJobInputPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         *misc.TGuid     `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobSpecSource *EJobSpecSource `protobuf:"varint,2,opt,name=job_spec_source,json=jobSpecSource,enum=NYT.NApi.NRpcProxy.NProto.EJobSpecSource,def=65535" json:"job_spec_source,omitempty"`
}

// Default values for TReqGetJobInputPaths fields.
const (
	Default_TReqGetJobInputPaths_JobSpecSource = EJobSpecSource_JSS_AUTO
)

func (x *TReqGetJobInputPaths) Reset() {
	*x = TReqGetJobInputPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJobInputPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJobInputPaths) ProtoMessage() {}

func (x *TReqGetJobInputPaths) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJobInputPaths.ProtoReflect.Descriptor instead.
func (*TReqGetJobInputPaths) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{212}
}

func (x *TReqGetJobInputPaths) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqGetJobInputPaths) GetJobSpecSource() EJobSpecSource {
	if x != nil && x.JobSpecSource != nil {
		return *x.JobSpecSource
	}
	return Default_TReqGetJobInputPaths_JobSpecSource
}

type TRspGetJobInputPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []byte `protobuf:"bytes,1,req,name=paths" json:"paths,omitempty"` // YSON
}

func (x *TRspGetJobInputPaths) Reset() {
	*x = TRspGetJobInputPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJobInputPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJobInputPaths) ProtoMessage() {}

func (x *TRspGetJobInputPaths) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJobInputPaths.ProtoReflect.Descriptor instead.
func (*TRspGetJobInputPaths) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{213}
}

func (x *TRspGetJobInputPaths) GetPaths() []byte {
	if x != nil {
		return x.Paths
	}
	return nil
}

type TReqGetJobSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                *misc.TGuid     `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	OmitNodeDirectory    *bool           `protobuf:"varint,2,opt,name=omit_node_directory,json=omitNodeDirectory,def=1" json:"omit_node_directory,omitempty"`
	OmitInputTableSpecs  *bool           `protobuf:"varint,3,opt,name=omit_input_table_specs,json=omitInputTableSpecs,def=0" json:"omit_input_table_specs,omitempty"`
	OmitOutputTableSpecs *bool           `protobuf:"varint,4,opt,name=omit_output_table_specs,json=omitOutputTableSpecs,def=0" json:"omit_output_table_specs,omitempty"`
	JobSpecSource        *EJobSpecSource `protobuf:"varint,5,opt,name=job_spec_source,json=jobSpecSource,enum=NYT.NApi.NRpcProxy.NProto.EJobSpecSource,def=65535" json:"job_spec_source,omitempty"`
}

// Default values for TReqGetJobSpec fields.
const (
	Default_TReqGetJobSpec_OmitNodeDirectory    = bool(true)
	Default_TReqGetJobSpec_OmitInputTableSpecs  = bool(false)
	Default_TReqGetJobSpec_OmitOutputTableSpecs = bool(false)
	Default_TReqGetJobSpec_JobSpecSource        = EJobSpecSource_JSS_AUTO
)

func (x *TReqGetJobSpec) Reset() {
	*x = TReqGetJobSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJobSpec) ProtoMessage() {}

func (x *TReqGetJobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJobSpec.ProtoReflect.Descriptor instead.
func (*TReqGetJobSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{214}
}

func (x *TReqGetJobSpec) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqGetJobSpec) GetOmitNodeDirectory() bool {
	if x != nil && x.OmitNodeDirectory != nil {
		return *x.OmitNodeDirectory
	}
	return Default_TReqGetJobSpec_OmitNodeDirectory
}

func (x *TReqGetJobSpec) GetOmitInputTableSpecs() bool {
	if x != nil && x.OmitInputTableSpecs != nil {
		return *x.OmitInputTableSpecs
	}
	return Default_TReqGetJobSpec_OmitInputTableSpecs
}

func (x *TReqGetJobSpec) GetOmitOutputTableSpecs() bool {
	if x != nil && x.OmitOutputTableSpecs != nil {
		return *x.OmitOutputTableSpecs
	}
	return Default_TReqGetJobSpec_OmitOutputTableSpecs
}

func (x *TReqGetJobSpec) GetJobSpecSource() EJobSpecSource {
	if x != nil && x.JobSpecSource != nil {
		return *x.JobSpecSource
	}
	return Default_TReqGetJobSpec_JobSpecSource
}

type TRspGetJobSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSpec []byte `protobuf:"bytes,1,req,name=job_spec,json=jobSpec" json:"job_spec,omitempty"` // YSON
}

func (x *TRspGetJobSpec) Reset() {
	*x = TRspGetJobSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJobSpec) ProtoMessage() {}

func (x *TRspGetJobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJobSpec.ProtoReflect.Descriptor instead.
func (*TRspGetJobSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{215}
}

func (x *TRspGetJobSpec) GetJobSpec() []byte {
	if x != nil {
		return x.JobSpec
	}
	return nil
}

type TReqGetJobStderr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqGetJobStderr_OperationId
	//	*TReqGetJobStderr_OperationAlias
	OperationIdOrAlias isTReqGetJobStderr_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	JobId              *misc.TGuid                           `protobuf:"bytes,2,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	Limit              *int64                                `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Offset             *int64                                `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
}

func (x *TReqGetJobStderr) Reset() {
	*x = TReqGetJobStderr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJobStderr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJobStderr) ProtoMessage() {}

func (x *TReqGetJobStderr) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJobStderr.ProtoReflect.Descriptor instead.
func (*TReqGetJobStderr) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{216}
}

func (m *TReqGetJobStderr) GetOperationIdOrAlias() isTReqGetJobStderr_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqGetJobStderr) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJobStderr_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqGetJobStderr) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJobStderr_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqGetJobStderr) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqGetJobStderr) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *TReqGetJobStderr) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type isTReqGetJobStderr_OperationIdOrAlias interface {
	isTReqGetJobStderr_OperationIdOrAlias()
}

type TReqGetJobStderr_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqGetJobStderr_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,3,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqGetJobStderr_OperationId) isTReqGetJobStderr_OperationIdOrAlias() {}

func (*TReqGetJobStderr_OperationAlias) isTReqGetJobStderr_OperationIdOrAlias() {}

type TRspGetJobStderr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndOffset *int64 `protobuf:"varint,1,opt,name=end_offset,json=endOffset" json:"end_offset,omitempty"`
	TotalSize *int64 `protobuf:"varint,2,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
}

func (x *TRspGetJobStderr) Reset() {
	*x = TRspGetJobStderr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJobStderr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJobStderr) ProtoMessage() {}

func (x *TRspGetJobStderr) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJobStderr.ProtoReflect.Descriptor instead.
func (*TRspGetJobStderr) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{217}
}

func (x *TRspGetJobStderr) GetEndOffset() int64 {
	if x != nil && x.EndOffset != nil {
		return *x.EndOffset
	}
	return 0
}

func (x *TRspGetJobStderr) GetTotalSize() int64 {
	if x != nil && x.TotalSize != nil {
		return *x.TotalSize
	}
	return 0
}

type TReqGetJobTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqGetJobTrace_OperationId
	//	*TReqGetJobTrace_OperationAlias
	OperationIdOrAlias isTReqGetJobTrace_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	JobId              *misc.TGuid                          `protobuf:"bytes,3,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	TraceId            *misc.TGuid                          `protobuf:"bytes,4,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	FromEventIndex     *int64                               `protobuf:"varint,5,opt,name=from_event_index,json=fromEventIndex" json:"from_event_index,omitempty"`
	ToEventIndex       *int64                               `protobuf:"varint,6,opt,name=to_event_index,json=toEventIndex" json:"to_event_index,omitempty"`
	FromTime           *int64                               `protobuf:"varint,7,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`
	ToTime             *int64                               `protobuf:"varint,8,opt,name=to_time,json=toTime" json:"to_time,omitempty"`
}

func (x *TReqGetJobTrace) Reset() {
	*x = TReqGetJobTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJobTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJobTrace) ProtoMessage() {}

func (x *TReqGetJobTrace) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJobTrace.ProtoReflect.Descriptor instead.
func (*TReqGetJobTrace) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{218}
}

func (m *TReqGetJobTrace) GetOperationIdOrAlias() isTReqGetJobTrace_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqGetJobTrace) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJobTrace_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqGetJobTrace) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJobTrace_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqGetJobTrace) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqGetJobTrace) GetTraceId() *misc.TGuid {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *TReqGetJobTrace) GetFromEventIndex() int64 {
	if x != nil && x.FromEventIndex != nil {
		return *x.FromEventIndex
	}
	return 0
}

func (x *TReqGetJobTrace) GetToEventIndex() int64 {
	if x != nil && x.ToEventIndex != nil {
		return *x.ToEventIndex
	}
	return 0
}

func (x *TReqGetJobTrace) GetFromTime() int64 {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return 0
}

func (x *TReqGetJobTrace) GetToTime() int64 {
	if x != nil && x.ToTime != nil {
		return *x.ToTime
	}
	return 0
}

type isTReqGetJobTrace_OperationIdOrAlias interface {
	isTReqGetJobTrace_OperationIdOrAlias()
}

type TReqGetJobTrace_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqGetJobTrace_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,2,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqGetJobTrace_OperationId) isTReqGetJobTrace_OperationIdOrAlias() {}

func (*TReqGetJobTrace_OperationAlias) isTReqGetJobTrace_OperationIdOrAlias() {}

type TRspGetJobTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*TJobTraceEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (x *TRspGetJobTrace) Reset() {
	*x = TRspGetJobTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJobTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJobTrace) ProtoMessage() {}

func (x *TRspGetJobTrace) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJobTrace.ProtoReflect.Descriptor instead.
func (*TRspGetJobTrace) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{219}
}

func (x *TRspGetJobTrace) GetEvents() []*TJobTraceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type TReqGetJobFailContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OperationIdOrAlias:
	//
	//	*TReqGetJobFailContext_OperationId
	//	*TReqGetJobFailContext_OperationAlias
	OperationIdOrAlias isTReqGetJobFailContext_OperationIdOrAlias `protobuf_oneof:"operation_id_or_alias"`
	JobId              *misc.TGuid                                `protobuf:"bytes,2,req,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (x *TReqGetJobFailContext) Reset() {
	*x = TReqGetJobFailContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJobFailContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJobFailContext) ProtoMessage() {}

func (x *TReqGetJobFailContext) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJobFailContext.ProtoReflect.Descriptor instead.
func (*TReqGetJobFailContext) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{220}
}

func (m *TReqGetJobFailContext) GetOperationIdOrAlias() isTReqGetJobFailContext_OperationIdOrAlias {
	if m != nil {
		return m.OperationIdOrAlias
	}
	return nil
}

func (x *TReqGetJobFailContext) GetOperationId() *misc.TGuid {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJobFailContext_OperationId); ok {
		return x.OperationId
	}
	return nil
}

func (x *TReqGetJobFailContext) GetOperationAlias() string {
	if x, ok := x.GetOperationIdOrAlias().(*TReqGetJobFailContext_OperationAlias); ok {
		return x.OperationAlias
	}
	return ""
}

func (x *TReqGetJobFailContext) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

type isTReqGetJobFailContext_OperationIdOrAlias interface {
	isTReqGetJobFailContext_OperationIdOrAlias()
}

type TReqGetJobFailContext_OperationId struct {
	OperationId *misc.TGuid `protobuf:"bytes,1,opt,name=operation_id,json=operationId,oneof"`
}

type TReqGetJobFailContext_OperationAlias struct {
	OperationAlias string `protobuf:"bytes,3,opt,name=operation_alias,json=operationAlias,oneof"`
}

func (*TReqGetJobFailContext_OperationId) isTReqGetJobFailContext_OperationIdOrAlias() {}

func (*TReqGetJobFailContext_OperationAlias) isTReqGetJobFailContext_OperationIdOrAlias() {}

type TRspGetJobFailContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspGetJobFailContext) Reset() {
	*x = TRspGetJobFailContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJobFailContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJobFailContext) ProtoMessage() {}

func (x *TRspGetJobFailContext) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJobFailContext.ProtoReflect.Descriptor instead.
func (*TRspGetJobFailContext) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{221}
}

type TReqDumpJobContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId *misc.TGuid `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	Path  []byte      `protobuf:"bytes,2,req,name=path" json:"path,omitempty"` // YPath
}

func (x *TReqDumpJobContext) Reset() {
	*x = TReqDumpJobContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDumpJobContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDumpJobContext) ProtoMessage() {}

func (x *TReqDumpJobContext) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDumpJobContext.ProtoReflect.Descriptor instead.
func (*TReqDumpJobContext) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{222}
}

func (x *TReqDumpJobContext) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqDumpJobContext) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

type TRspDumpJobContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspDumpJobContext) Reset() {
	*x = TRspDumpJobContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDumpJobContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDumpJobContext) ProtoMessage() {}

func (x *TRspDumpJobContext) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDumpJobContext.ProtoReflect.Descriptor instead.
func (*TRspDumpJobContext) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{223}
}

type TReqAbandonJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId *misc.TGuid `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (x *TReqAbandonJob) Reset() {
	*x = TReqAbandonJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAbandonJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAbandonJob) ProtoMessage() {}

func (x *TReqAbandonJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAbandonJob.ProtoReflect.Descriptor instead.
func (*TReqAbandonJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{224}
}

func (x *TReqAbandonJob) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

type TRspAbandonJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAbandonJob) Reset() {
	*x = TRspAbandonJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAbandonJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAbandonJob) ProtoMessage() {}

func (x *TRspAbandonJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAbandonJob.ProtoReflect.Descriptor instead.
func (*TRspAbandonJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{225}
}

type TReqPollJobShell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId      *misc.TGuid `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	Parameters []byte      `protobuf:"bytes,2,req,name=parameters" json:"parameters,omitempty"` // YSON
	ShellName  *string     `protobuf:"bytes,3,opt,name=shell_name,json=shellName" json:"shell_name,omitempty"`
}

func (x *TReqPollJobShell) Reset() {
	*x = TReqPollJobShell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPollJobShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPollJobShell) ProtoMessage() {}

func (x *TReqPollJobShell) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPollJobShell.ProtoReflect.Descriptor instead.
func (*TReqPollJobShell) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{226}
}

func (x *TReqPollJobShell) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqPollJobShell) GetParameters() []byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TReqPollJobShell) GetShellName() string {
	if x != nil && x.ShellName != nil {
		return *x.ShellName
	}
	return ""
}

type TRspPollJobShell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []byte `protobuf:"bytes,1,req,name=result" json:"result,omitempty"` // YSON
}

func (x *TRspPollJobShell) Reset() {
	*x = TRspPollJobShell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPollJobShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPollJobShell) ProtoMessage() {}

func (x *TRspPollJobShell) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPollJobShell.ProtoReflect.Descriptor instead.
func (*TRspPollJobShell) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{227}
}

func (x *TRspPollJobShell) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

type TReqAbortJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId            *misc.TGuid `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	InterruptTimeout *int64      `protobuf:"varint,2,opt,name=interrupt_timeout,json=interruptTimeout" json:"interrupt_timeout,omitempty"`
}

func (x *TReqAbortJob) Reset() {
	*x = TReqAbortJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAbortJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAbortJob) ProtoMessage() {}

func (x *TReqAbortJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAbortJob.ProtoReflect.Descriptor instead.
func (*TReqAbortJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{228}
}

func (x *TReqAbortJob) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqAbortJob) GetInterruptTimeout() int64 {
	if x != nil && x.InterruptTimeout != nil {
		return *x.InterruptTimeout
	}
	return 0
}

type TRspAbortJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAbortJob) Reset() {
	*x = TRspAbortJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAbortJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAbortJob) ProtoMessage() {}

func (x *TRspAbortJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAbortJob.ProtoReflect.Descriptor instead.
func (*TRspAbortJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{229}
}

type TReqDumpJobProxyLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       *misc.TGuid `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	OperationId *misc.TGuid `protobuf:"bytes,2,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Path        []byte      `protobuf:"bytes,3,req,name=path" json:"path,omitempty"` // YPath
}

func (x *TReqDumpJobProxyLog) Reset() {
	*x = TReqDumpJobProxyLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqDumpJobProxyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqDumpJobProxyLog) ProtoMessage() {}

func (x *TReqDumpJobProxyLog) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqDumpJobProxyLog.ProtoReflect.Descriptor instead.
func (*TReqDumpJobProxyLog) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{230}
}

func (x *TReqDumpJobProxyLog) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqDumpJobProxyLog) GetOperationId() *misc.TGuid {
	if x != nil {
		return x.OperationId
	}
	return nil
}

func (x *TReqDumpJobProxyLog) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

type TRspDumpJobProxyLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspDumpJobProxyLog) Reset() {
	*x = TRspDumpJobProxyLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspDumpJobProxyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspDumpJobProxyLog) ProtoMessage() {}

func (x *TRspDumpJobProxyLog) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspDumpJobProxyLog.ProtoReflect.Descriptor instead.
func (*TRspDumpJobProxyLog) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{231}
}

type TReqReadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                              []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Offset                            *int64                              `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Length                            *int64                              `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	Config                            []byte                              `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"` // YSON-serialized TFileReaderConfig
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

func (x *TReqReadFile) Reset() {
	*x = TReqReadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReadFile) ProtoMessage() {}

func (x *TReqReadFile) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReadFile.ProtoReflect.Descriptor instead.
func (*TReqReadFile) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{232}
}

func (x *TReqReadFile) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqReadFile) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *TReqReadFile) GetLength() int64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *TReqReadFile) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqReadFile) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqReadFile) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TReadFileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revision *uint64 `protobuf:"varint,1,req,name=revision" json:"revision,omitempty"`
	// COMPAT(shakurov): optional for old proxy compatibility.
	Id *misc.TGuid `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (x *TReadFileMeta) Reset() {
	*x = TReadFileMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReadFileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReadFileMeta) ProtoMessage() {}

func (x *TReadFileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReadFileMeta.ProtoReflect.Descriptor instead.
func (*TReadFileMeta) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{233}
}

func (x *TReadFileMeta) GetRevision() uint64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

func (x *TReadFileMeta) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

type TRspReadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspReadFile) Reset() {
	*x = TRspReadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReadFile) ProtoMessage() {}

func (x *TRspReadFile) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReadFile.ProtoReflect.Descriptor instead.
func (*TRspReadFile) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{234}
}

type TReqWriteFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // RichYPath
	ComputeMd5           *bool                  `protobuf:"varint,2,opt,name=compute_md5,json=computeMd5,def=0" json:"compute_md5,omitempty"`
	Config               []byte                 `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"` // YSON-serialized TFileWriterConfig
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
}

// Default values for TReqWriteFile fields.
const (
	Default_TReqWriteFile_ComputeMd5 = bool(false)
)

func (x *TReqWriteFile) Reset() {
	*x = TReqWriteFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqWriteFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqWriteFile) ProtoMessage() {}

func (x *TReqWriteFile) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqWriteFile.ProtoReflect.Descriptor instead.
func (*TReqWriteFile) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{235}
}

func (x *TReqWriteFile) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqWriteFile) GetComputeMd5() bool {
	if x != nil && x.ComputeMd5 != nil {
		return *x.ComputeMd5
	}
	return Default_TReqWriteFile_ComputeMd5
}

func (x *TReqWriteFile) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqWriteFile) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqWriteFile) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

type TRspWriteFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspWriteFile) Reset() {
	*x = TRspWriteFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspWriteFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspWriteFile) ProtoMessage() {}

func (x *TRspWriteFile) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspWriteFile.ProtoReflect.Descriptor instead.
func (*TRspWriteFile) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{236}
}

type TReqReadJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                              []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	FirstRowIndex                     *int64                              `protobuf:"varint,2,opt,name=first_row_index,json=firstRowIndex" json:"first_row_index,omitempty"`
	RowCount                          *int64                              `protobuf:"varint,3,opt,name=row_count,json=rowCount" json:"row_count,omitempty"`
	Config                            []byte                              `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"` // YSON-serialized TJournalReaderConfig
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,104,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

func (x *TReqReadJournal) Reset() {
	*x = TReqReadJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReadJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReadJournal) ProtoMessage() {}

func (x *TReqReadJournal) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReadJournal.ProtoReflect.Descriptor instead.
func (*TReqReadJournal) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{237}
}

func (x *TReqReadJournal) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqReadJournal) GetFirstRowIndex() int64 {
	if x != nil && x.FirstRowIndex != nil {
		return *x.FirstRowIndex
	}
	return 0
}

func (x *TReqReadJournal) GetRowCount() int64 {
	if x != nil && x.RowCount != nil {
		return *x.RowCount
	}
	return 0
}

func (x *TReqReadJournal) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqReadJournal) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqReadJournal) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspReadJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspReadJournal) Reset() {
	*x = TRspReadJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReadJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReadJournal) ProtoMessage() {}

func (x *TRspReadJournal) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReadJournal.ProtoReflect.Descriptor instead.
func (*TRspReadJournal) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{238}
}

type TReqWriteJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                     []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`     // YPath
	Config                   []byte                 `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"` // YSON-serialized TJournalWriterConfig
	EnableMultiplexing       *bool                  `protobuf:"varint,3,opt,name=enable_multiplexing,json=enableMultiplexing,def=1" json:"enable_multiplexing,omitempty"`
	EnableChunkPreallocation *bool                  `protobuf:"varint,4,opt,name=enable_chunk_preallocation,json=enableChunkPreallocation,def=0" json:"enable_chunk_preallocation,omitempty"`
	ReplicaLagLimit          *int64                 `protobuf:"varint,5,opt,name=replica_lag_limit,json=replicaLagLimit,def=32768" json:"replica_lag_limit,omitempty"`
	TransactionalOptions     *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions      *TPrerequisiteOptions  `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
}

// Default values for TReqWriteJournal fields.
const (
	Default_TReqWriteJournal_EnableMultiplexing       = bool(true)
	Default_TReqWriteJournal_EnableChunkPreallocation = bool(false)
	Default_TReqWriteJournal_ReplicaLagLimit          = int64(32768)
)

func (x *TReqWriteJournal) Reset() {
	*x = TReqWriteJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqWriteJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqWriteJournal) ProtoMessage() {}

func (x *TReqWriteJournal) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqWriteJournal.ProtoReflect.Descriptor instead.
func (*TReqWriteJournal) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{239}
}

func (x *TReqWriteJournal) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqWriteJournal) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqWriteJournal) GetEnableMultiplexing() bool {
	if x != nil && x.EnableMultiplexing != nil {
		return *x.EnableMultiplexing
	}
	return Default_TReqWriteJournal_EnableMultiplexing
}

func (x *TReqWriteJournal) GetEnableChunkPreallocation() bool {
	if x != nil && x.EnableChunkPreallocation != nil {
		return *x.EnableChunkPreallocation
	}
	return Default_TReqWriteJournal_EnableChunkPreallocation
}

func (x *TReqWriteJournal) GetReplicaLagLimit() int64 {
	if x != nil && x.ReplicaLagLimit != nil {
		return *x.ReplicaLagLimit
	}
	return Default_TReqWriteJournal_ReplicaLagLimit
}

func (x *TReqWriteJournal) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqWriteJournal) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

type TRspWriteJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspWriteJournal) Reset() {
	*x = TRspWriteJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspWriteJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspWriteJournal) ProtoMessage() {}

func (x *TRspWriteJournal) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspWriteJournal.ProtoReflect.Descriptor instead.
func (*TRspWriteJournal) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{240}
}

type TReqTruncateJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                []byte                `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	RowCount            *int64                `protobuf:"varint,2,req,name=row_count,json=rowCount" json:"row_count,omitempty"`
	PrerequisiteOptions *TPrerequisiteOptions `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MutatingOptions     *TMutatingOptions     `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqTruncateJournal) Reset() {
	*x = TReqTruncateJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqTruncateJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqTruncateJournal) ProtoMessage() {}

func (x *TReqTruncateJournal) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqTruncateJournal.ProtoReflect.Descriptor instead.
func (*TReqTruncateJournal) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{241}
}

func (x *TReqTruncateJournal) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqTruncateJournal) GetRowCount() int64 {
	if x != nil && x.RowCount != nil {
		return *x.RowCount
	}
	return 0
}

func (x *TReqTruncateJournal) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqTruncateJournal) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspTruncateJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspTruncateJournal) Reset() {
	*x = TRspTruncateJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspTruncateJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspTruncateJournal) ProtoMessage() {}

func (x *TRspTruncateJournal) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspTruncateJournal.ProtoReflect.Descriptor instead.
func (*TRspTruncateJournal) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{242}
}

type TReqReadTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                              []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // RichYPath
	Unordered                         *bool                               `protobuf:"varint,2,opt,name=unordered,def=0" json:"unordered,omitempty"`
	OmitInaccessibleColumns           *bool                               `protobuf:"varint,3,opt,name=omit_inaccessible_columns,json=omitInaccessibleColumns,def=0" json:"omit_inaccessible_columns,omitempty"`
	EnableTableIndex                  *bool                               `protobuf:"varint,5,opt,name=enable_table_index,json=enableTableIndex,def=0" json:"enable_table_index,omitempty"`
	EnableRowIndex                    *bool                               `protobuf:"varint,6,opt,name=enable_row_index,json=enableRowIndex,def=0" json:"enable_row_index,omitempty"`
	EnableRangeIndex                  *bool                               `protobuf:"varint,7,opt,name=enable_range_index,json=enableRangeIndex,def=0" json:"enable_range_index,omitempty"`
	Config                            []byte                              `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"` // YSON-serialized TTableReaderConfig
	DesiredRowsetFormat               *ERowsetFormat                      `protobuf:"varint,8,opt,name=desired_rowset_format,json=desiredRowsetFormat,enum=NYT.NApi.NRpcProxy.NProto.ERowsetFormat,def=0" json:"desired_rowset_format,omitempty"`
	ArrowFallbackRowsetFormat         *ERowsetFormat                      `protobuf:"varint,10,opt,name=arrow_fallback_rowset_format,json=arrowFallbackRowsetFormat,enum=NYT.NApi.NRpcProxy.NProto.ERowsetFormat,def=0" json:"arrow_fallback_rowset_format,omitempty"`
	Format                            []byte                              `protobuf:"bytes,9,opt,name=format" json:"format,omitempty"` // YSON-serialized TFormat
	TransactionalOptions              *TTransactionalOptions              `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	SuppressableAccessTrackingOptions *TSuppressableAccessTrackingOptions `protobuf:"bytes,101,opt,name=suppressable_access_tracking_options,json=suppressableAccessTrackingOptions" json:"suppressable_access_tracking_options,omitempty"`
}

// Default values for TReqReadTable fields.
const (
	Default_TReqReadTable_Unordered                 = bool(false)
	Default_TReqReadTable_OmitInaccessibleColumns   = bool(false)
	Default_TReqReadTable_EnableTableIndex          = bool(false)
	Default_TReqReadTable_EnableRowIndex            = bool(false)
	Default_TReqReadTable_EnableRangeIndex          = bool(false)
	Default_TReqReadTable_DesiredRowsetFormat       = ERowsetFormat_RF_YT_WIRE
	Default_TReqReadTable_ArrowFallbackRowsetFormat = ERowsetFormat_RF_YT_WIRE
)

func (x *TReqReadTable) Reset() {
	*x = TReqReadTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReadTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReadTable) ProtoMessage() {}

func (x *TReqReadTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReadTable.ProtoReflect.Descriptor instead.
func (*TReqReadTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{243}
}

func (x *TReqReadTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqReadTable) GetUnordered() bool {
	if x != nil && x.Unordered != nil {
		return *x.Unordered
	}
	return Default_TReqReadTable_Unordered
}

func (x *TReqReadTable) GetOmitInaccessibleColumns() bool {
	if x != nil && x.OmitInaccessibleColumns != nil {
		return *x.OmitInaccessibleColumns
	}
	return Default_TReqReadTable_OmitInaccessibleColumns
}

func (x *TReqReadTable) GetEnableTableIndex() bool {
	if x != nil && x.EnableTableIndex != nil {
		return *x.EnableTableIndex
	}
	return Default_TReqReadTable_EnableTableIndex
}

func (x *TReqReadTable) GetEnableRowIndex() bool {
	if x != nil && x.EnableRowIndex != nil {
		return *x.EnableRowIndex
	}
	return Default_TReqReadTable_EnableRowIndex
}

func (x *TReqReadTable) GetEnableRangeIndex() bool {
	if x != nil && x.EnableRangeIndex != nil {
		return *x.EnableRangeIndex
	}
	return Default_TReqReadTable_EnableRangeIndex
}

func (x *TReqReadTable) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqReadTable) GetDesiredRowsetFormat() ERowsetFormat {
	if x != nil && x.DesiredRowsetFormat != nil {
		return *x.DesiredRowsetFormat
	}
	return Default_TReqReadTable_DesiredRowsetFormat
}

func (x *TReqReadTable) GetArrowFallbackRowsetFormat() ERowsetFormat {
	if x != nil && x.ArrowFallbackRowsetFormat != nil {
		return *x.ArrowFallbackRowsetFormat
	}
	return Default_TReqReadTable_ArrowFallbackRowsetFormat
}

func (x *TReqReadTable) GetFormat() []byte {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *TReqReadTable) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqReadTable) GetSuppressableAccessTrackingOptions() *TSuppressableAccessTrackingOptions {
	if x != nil {
		return x.SuppressableAccessTrackingOptions
	}
	return nil
}

type TRspReadTableMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartRowIndex              *int64             `protobuf:"varint,1,req,name=start_row_index,json=startRowIndex" json:"start_row_index,omitempty"`
	OmittedInaccessibleColumns []string           `protobuf:"bytes,3,rep,name=omitted_inaccessible_columns,json=omittedInaccessibleColumns" json:"omitted_inaccessible_columns,omitempty"`
	Schema                     *TTableSchema      `protobuf:"bytes,5,req,name=schema" json:"schema,omitempty"`
	Statistics                 *TRowsetStatistics `protobuf:"bytes,4,req,name=statistics" json:"statistics,omitempty"`
}

func (x *TRspReadTableMeta) Reset() {
	*x = TRspReadTableMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReadTableMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReadTableMeta) ProtoMessage() {}

func (x *TRspReadTableMeta) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReadTableMeta.ProtoReflect.Descriptor instead.
func (*TRspReadTableMeta) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{244}
}

func (x *TRspReadTableMeta) GetStartRowIndex() int64 {
	if x != nil && x.StartRowIndex != nil {
		return *x.StartRowIndex
	}
	return 0
}

func (x *TRspReadTableMeta) GetOmittedInaccessibleColumns() []string {
	if x != nil {
		return x.OmittedInaccessibleColumns
	}
	return nil
}

func (x *TRspReadTableMeta) GetSchema() *TTableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TRspReadTableMeta) GetStatistics() *TRowsetStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type TRspReadTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspReadTable) Reset() {
	*x = TRspReadTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReadTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReadTable) ProtoMessage() {}

func (x *TRspReadTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReadTable.ProtoReflect.Descriptor instead.
func (*TRspReadTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{245}
}

type TReqWriteTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`     // RichYPath
	Config               []byte                 `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"` // YSON-serialized TTableWriterConfig
	Format               []byte                 `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"` // YSON-serialized TFormat
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
}

func (x *TReqWriteTable) Reset() {
	*x = TReqWriteTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqWriteTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqWriteTable) ProtoMessage() {}

func (x *TReqWriteTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqWriteTable.ProtoReflect.Descriptor instead.
func (*TReqWriteTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{246}
}

func (x *TReqWriteTable) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqWriteTable) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqWriteTable) GetFormat() []byte {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *TReqWriteTable) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

type TWriteTableMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *TTableSchema `protobuf:"bytes,1,req,name=schema" json:"schema,omitempty"`
}

func (x *TWriteTableMeta) Reset() {
	*x = TWriteTableMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TWriteTableMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TWriteTableMeta) ProtoMessage() {}

func (x *TWriteTableMeta) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TWriteTableMeta.ProtoReflect.Descriptor instead.
func (*TWriteTableMeta) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{247}
}

func (x *TWriteTableMeta) GetSchema() *TTableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type TRspWriteTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspWriteTable) Reset() {
	*x = TRspWriteTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspWriteTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspWriteTable) ProtoMessage() {}

func (x *TRspWriteTable) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspWriteTable.ProtoReflect.Descriptor instead.
func (*TRspWriteTable) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{248}
}

type TReqGetJobInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         *misc.TGuid     `protobuf:"bytes,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobSpecSource *EJobSpecSource `protobuf:"varint,2,opt,name=job_spec_source,json=jobSpecSource,enum=NYT.NApi.NRpcProxy.NProto.EJobSpecSource,def=65535" json:"job_spec_source,omitempty"`
}

// Default values for TReqGetJobInput fields.
const (
	Default_TReqGetJobInput_JobSpecSource = EJobSpecSource_JSS_AUTO
)

func (x *TReqGetJobInput) Reset() {
	*x = TReqGetJobInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetJobInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetJobInput) ProtoMessage() {}

func (x *TReqGetJobInput) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetJobInput.ProtoReflect.Descriptor instead.
func (*TReqGetJobInput) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{249}
}

func (x *TReqGetJobInput) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TReqGetJobInput) GetJobSpecSource() EJobSpecSource {
	if x != nil && x.JobSpecSource != nil {
		return *x.JobSpecSource
	}
	return Default_TReqGetJobInput_JobSpecSource
}

type TRspGetJobInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspGetJobInput) Reset() {
	*x = TRspGetJobInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetJobInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetJobInput) ProtoMessage() {}

func (x *TRspGetJobInput) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetJobInput.ProtoReflect.Descriptor instead.
func (*TRspGetJobInput) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{250}
}

type TReqAddMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group               *string               `protobuf:"bytes,1,req,name=group" json:"group,omitempty"`
	Member              *string               `protobuf:"bytes,2,req,name=member" json:"member,omitempty"`
	MutatingOptions     *TMutatingOptions     `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	PrerequisiteOptions *TPrerequisiteOptions `protobuf:"bytes,104,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
}

func (x *TReqAddMember) Reset() {
	*x = TReqAddMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAddMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAddMember) ProtoMessage() {}

func (x *TReqAddMember) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAddMember.ProtoReflect.Descriptor instead.
func (*TReqAddMember) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{251}
}

func (x *TReqAddMember) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *TReqAddMember) GetMember() string {
	if x != nil && x.Member != nil {
		return *x.Member
	}
	return ""
}

func (x *TReqAddMember) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqAddMember) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

type TRspAddMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAddMember) Reset() {
	*x = TRspAddMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAddMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAddMember) ProtoMessage() {}

func (x *TRspAddMember) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAddMember.ProtoReflect.Descriptor instead.
func (*TRspAddMember) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{252}
}

type TReqRemoveMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group               *string               `protobuf:"bytes,1,req,name=group" json:"group,omitempty"`
	Member              *string               `protobuf:"bytes,2,req,name=member" json:"member,omitempty"`
	MutatingOptions     *TMutatingOptions     `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
	PrerequisiteOptions *TPrerequisiteOptions `protobuf:"bytes,104,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
}

func (x *TReqRemoveMember) Reset() {
	*x = TReqRemoveMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRemoveMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRemoveMember) ProtoMessage() {}

func (x *TReqRemoveMember) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRemoveMember.ProtoReflect.Descriptor instead.
func (*TReqRemoveMember) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{253}
}

func (x *TReqRemoveMember) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *TReqRemoveMember) GetMember() string {
	if x != nil && x.Member != nil {
		return *x.Member
	}
	return ""
}

func (x *TReqRemoveMember) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

func (x *TReqRemoveMember) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

type TRspRemoveMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspRemoveMember) Reset() {
	*x = TRspRemoveMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRemoveMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRemoveMember) ProtoMessage() {}

func (x *TRspRemoveMember) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRemoveMember.ProtoReflect.Descriptor instead.
func (*TRspRemoveMember) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{254}
}

type TReqCheckPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                 *string                       `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	Path                 []byte                        `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`              // YPath
	Permission           *int32                        `protobuf:"varint,3,req,name=permission" json:"permission,omitempty"` // bit enum consisting of 7 bits
	TransactionalOptions *TTransactionalOptions        `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
	PrerequisiteOptions  *TPrerequisiteOptions         `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MasterReadOptions    *TMasterReadOptions           `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
	Columns              *TReqCheckPermission_TColumns `protobuf:"bytes,4,opt,name=columns" json:"columns,omitempty"`
	Vital                *bool                         `protobuf:"varint,5,opt,name=vital" json:"vital,omitempty"`
}

func (x *TReqCheckPermission) Reset() {
	*x = TReqCheckPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCheckPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCheckPermission) ProtoMessage() {}

func (x *TReqCheckPermission) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCheckPermission.ProtoReflect.Descriptor instead.
func (*TReqCheckPermission) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{255}
}

func (x *TReqCheckPermission) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TReqCheckPermission) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqCheckPermission) GetPermission() int32 {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return 0
}

func (x *TReqCheckPermission) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

func (x *TReqCheckPermission) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqCheckPermission) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

func (x *TReqCheckPermission) GetColumns() *TReqCheckPermission_TColumns {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TReqCheckPermission) GetVital() bool {
	if x != nil && x.Vital != nil {
		return *x.Vital
	}
	return false
}

type TRspCheckPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *TCheckPermissionResult       `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	Columns *TRspCheckPermission_TColumns `protobuf:"bytes,2,opt,name=columns" json:"columns,omitempty"`
}

func (x *TRspCheckPermission) Reset() {
	*x = TRspCheckPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCheckPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCheckPermission) ProtoMessage() {}

func (x *TRspCheckPermission) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCheckPermission.ProtoReflect.Descriptor instead.
func (*TRspCheckPermission) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{256}
}

func (x *TRspCheckPermission) GetResult() *TCheckPermissionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TRspCheckPermission) GetColumns() *TRspCheckPermission_TColumns {
	if x != nil {
		return x.Columns
	}
	return nil
}

type TReqCheckPermissionByAcl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                  *string               `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Permission            *int32                `protobuf:"varint,2,req,name=permission" json:"permission,omitempty"` // bit enum consisting of 7 bits
	Acl                   *string               `protobuf:"bytes,3,req,name=acl" json:"acl,omitempty"`
	IgnoreMissingSubjects *bool                 `protobuf:"varint,4,opt,name=ignore_missing_subjects,json=ignoreMissingSubjects,def=0" json:"ignore_missing_subjects,omitempty"`
	PrerequisiteOptions   *TPrerequisiteOptions `protobuf:"bytes,101,opt,name=prerequisite_options,json=prerequisiteOptions" json:"prerequisite_options,omitempty"`
	MasterReadOptions     *TMasterReadOptions   `protobuf:"bytes,102,opt,name=master_read_options,json=masterReadOptions" json:"master_read_options,omitempty"`
}

// Default values for TReqCheckPermissionByAcl fields.
const (
	Default_TReqCheckPermissionByAcl_IgnoreMissingSubjects = bool(false)
)

func (x *TReqCheckPermissionByAcl) Reset() {
	*x = TReqCheckPermissionByAcl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCheckPermissionByAcl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCheckPermissionByAcl) ProtoMessage() {}

func (x *TReqCheckPermissionByAcl) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCheckPermissionByAcl.ProtoReflect.Descriptor instead.
func (*TReqCheckPermissionByAcl) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{257}
}

func (x *TReqCheckPermissionByAcl) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TReqCheckPermissionByAcl) GetPermission() int32 {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return 0
}

func (x *TReqCheckPermissionByAcl) GetAcl() string {
	if x != nil && x.Acl != nil {
		return *x.Acl
	}
	return ""
}

func (x *TReqCheckPermissionByAcl) GetIgnoreMissingSubjects() bool {
	if x != nil && x.IgnoreMissingSubjects != nil {
		return *x.IgnoreMissingSubjects
	}
	return Default_TReqCheckPermissionByAcl_IgnoreMissingSubjects
}

func (x *TReqCheckPermissionByAcl) GetPrerequisiteOptions() *TPrerequisiteOptions {
	if x != nil {
		return x.PrerequisiteOptions
	}
	return nil
}

func (x *TReqCheckPermissionByAcl) GetMasterReadOptions() *TMasterReadOptions {
	if x != nil {
		return x.MasterReadOptions
	}
	return nil
}

type TRspCheckPermissionByAcl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TCheckPermissionByAclResult `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *TRspCheckPermissionByAcl) Reset() {
	*x = TRspCheckPermissionByAcl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCheckPermissionByAcl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCheckPermissionByAcl) ProtoMessage() {}

func (x *TRspCheckPermissionByAcl) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCheckPermissionByAcl.ProtoReflect.Descriptor instead.
func (*TRspCheckPermissionByAcl) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{258}
}

func (x *TRspCheckPermissionByAcl) GetResult() *TCheckPermissionByAclResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TReqTransferAccountResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcAccount      *string           `protobuf:"bytes,1,req,name=src_account,json=srcAccount" json:"src_account,omitempty"`
	DstAccount      *string           `protobuf:"bytes,2,req,name=dst_account,json=dstAccount" json:"dst_account,omitempty"`
	ResourceDelta   []byte            `protobuf:"bytes,3,req,name=resource_delta,json=resourceDelta" json:"resource_delta,omitempty"` // YSON
	MutatingOptions *TMutatingOptions `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqTransferAccountResources) Reset() {
	*x = TReqTransferAccountResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqTransferAccountResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqTransferAccountResources) ProtoMessage() {}

func (x *TReqTransferAccountResources) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqTransferAccountResources.ProtoReflect.Descriptor instead.
func (*TReqTransferAccountResources) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{259}
}

func (x *TReqTransferAccountResources) GetSrcAccount() string {
	if x != nil && x.SrcAccount != nil {
		return *x.SrcAccount
	}
	return ""
}

func (x *TReqTransferAccountResources) GetDstAccount() string {
	if x != nil && x.DstAccount != nil {
		return *x.DstAccount
	}
	return ""
}

func (x *TReqTransferAccountResources) GetResourceDelta() []byte {
	if x != nil {
		return x.ResourceDelta
	}
	return nil
}

func (x *TReqTransferAccountResources) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspTransferAccountResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspTransferAccountResources) Reset() {
	*x = TRspTransferAccountResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspTransferAccountResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspTransferAccountResources) ProtoMessage() {}

func (x *TRspTransferAccountResources) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspTransferAccountResources.ProtoReflect.Descriptor instead.
func (*TRspTransferAccountResources) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{260}
}

type TReqTransferPoolResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPool         *string           `protobuf:"bytes,1,req,name=src_pool,json=srcPool" json:"src_pool,omitempty"`
	DstPool         *string           `protobuf:"bytes,2,req,name=dst_pool,json=dstPool" json:"dst_pool,omitempty"`
	PoolTree        *string           `protobuf:"bytes,3,req,name=pool_tree,json=poolTree" json:"pool_tree,omitempty"`
	ResourceDelta   []byte            `protobuf:"bytes,4,req,name=resource_delta,json=resourceDelta" json:"resource_delta,omitempty"` // YSON
	MutatingOptions *TMutatingOptions `protobuf:"bytes,103,opt,name=mutating_options,json=mutatingOptions" json:"mutating_options,omitempty"`
}

func (x *TReqTransferPoolResources) Reset() {
	*x = TReqTransferPoolResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqTransferPoolResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqTransferPoolResources) ProtoMessage() {}

func (x *TReqTransferPoolResources) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqTransferPoolResources.ProtoReflect.Descriptor instead.
func (*TReqTransferPoolResources) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{261}
}

func (x *TReqTransferPoolResources) GetSrcPool() string {
	if x != nil && x.SrcPool != nil {
		return *x.SrcPool
	}
	return ""
}

func (x *TReqTransferPoolResources) GetDstPool() string {
	if x != nil && x.DstPool != nil {
		return *x.DstPool
	}
	return ""
}

func (x *TReqTransferPoolResources) GetPoolTree() string {
	if x != nil && x.PoolTree != nil {
		return *x.PoolTree
	}
	return ""
}

func (x *TReqTransferPoolResources) GetResourceDelta() []byte {
	if x != nil {
		return x.ResourceDelta
	}
	return nil
}

func (x *TReqTransferPoolResources) GetMutatingOptions() *TMutatingOptions {
	if x != nil {
		return x.MutatingOptions
	}
	return nil
}

type TRspTransferPoolResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspTransferPoolResources) Reset() {
	*x = TRspTransferPoolResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspTransferPoolResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspTransferPoolResources) ProtoMessage() {}

func (x *TRspTransferPoolResources) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspTransferPoolResources.ProtoReflect.Descriptor instead.
func (*TRspTransferPoolResources) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{262}
}

type TReqCheckClusterLiveness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckCypressRoot          *bool   `protobuf:"varint,1,req,name=check_cypress_root,json=checkCypressRoot" json:"check_cypress_root,omitempty"`
	CheckSecondaryMasterCells *bool   `protobuf:"varint,2,opt,name=check_secondary_master_cells,json=checkSecondaryMasterCells" json:"check_secondary_master_cells,omitempty"`
	CheckTabletCellBundle     *string `protobuf:"bytes,3,opt,name=check_tablet_cell_bundle,json=checkTabletCellBundle" json:"check_tablet_cell_bundle,omitempty"`
}

func (x *TReqCheckClusterLiveness) Reset() {
	*x = TReqCheckClusterLiveness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCheckClusterLiveness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCheckClusterLiveness) ProtoMessage() {}

func (x *TReqCheckClusterLiveness) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCheckClusterLiveness.ProtoReflect.Descriptor instead.
func (*TReqCheckClusterLiveness) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{263}
}

func (x *TReqCheckClusterLiveness) GetCheckCypressRoot() bool {
	if x != nil && x.CheckCypressRoot != nil {
		return *x.CheckCypressRoot
	}
	return false
}

func (x *TReqCheckClusterLiveness) GetCheckSecondaryMasterCells() bool {
	if x != nil && x.CheckSecondaryMasterCells != nil {
		return *x.CheckSecondaryMasterCells
	}
	return false
}

func (x *TReqCheckClusterLiveness) GetCheckTabletCellBundle() string {
	if x != nil && x.CheckTabletCellBundle != nil {
		return *x.CheckTabletCellBundle
	}
	return ""
}

type TRspCheckClusterLiveness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspCheckClusterLiveness) Reset() {
	*x = TRspCheckClusterLiveness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCheckClusterLiveness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCheckClusterLiveness) ProtoMessage() {}

func (x *TRspCheckClusterLiveness) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCheckClusterLiveness.ProtoReflect.Descriptor instead.
func (*TRspCheckClusterLiveness) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{264}
}

type TReqGetPipelineSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
}

func (x *TReqGetPipelineSpec) Reset() {
	*x = TReqGetPipelineSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetPipelineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetPipelineSpec) ProtoMessage() {}

func (x *TReqGetPipelineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetPipelineSpec.ProtoReflect.Descriptor instead.
func (*TReqGetPipelineSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{265}
}

func (x *TReqGetPipelineSpec) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

type TRspGetPipelineSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *int64 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Spec    []byte `protobuf:"bytes,2,req,name=spec" json:"spec,omitempty"` // YSON
}

func (x *TRspGetPipelineSpec) Reset() {
	*x = TRspGetPipelineSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetPipelineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetPipelineSpec) ProtoMessage() {}

func (x *TRspGetPipelineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetPipelineSpec.ProtoReflect.Descriptor instead.
func (*TRspGetPipelineSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{266}
}

func (x *TRspGetPipelineSpec) GetVersion() int64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *TRspGetPipelineSpec) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

type TReqSetPipelineSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath    []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
	ExpectedVersion *int64 `protobuf:"varint,2,opt,name=expected_version,json=expectedVersion" json:"expected_version,omitempty"`
	Spec            []byte `protobuf:"bytes,3,req,name=spec" json:"spec,omitempty"` // YSON
	// Update spec even if pipeline is not stopped, just paused.
	Force *bool `protobuf:"varint,4,opt,name=force" json:"force,omitempty"`
}

func (x *TReqSetPipelineSpec) Reset() {
	*x = TReqSetPipelineSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSetPipelineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSetPipelineSpec) ProtoMessage() {}

func (x *TReqSetPipelineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSetPipelineSpec.ProtoReflect.Descriptor instead.
func (*TReqSetPipelineSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{267}
}

func (x *TReqSetPipelineSpec) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

func (x *TReqSetPipelineSpec) GetExpectedVersion() int64 {
	if x != nil && x.ExpectedVersion != nil {
		return *x.ExpectedVersion
	}
	return 0
}

func (x *TReqSetPipelineSpec) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TReqSetPipelineSpec) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type TRspSetPipelineSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *int64 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
}

func (x *TRspSetPipelineSpec) Reset() {
	*x = TRspSetPipelineSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSetPipelineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSetPipelineSpec) ProtoMessage() {}

func (x *TRspSetPipelineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSetPipelineSpec.ProtoReflect.Descriptor instead.
func (*TRspSetPipelineSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{268}
}

func (x *TRspSetPipelineSpec) GetVersion() int64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type TReqGetPipelineDynamicSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
}

func (x *TReqGetPipelineDynamicSpec) Reset() {
	*x = TReqGetPipelineDynamicSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetPipelineDynamicSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetPipelineDynamicSpec) ProtoMessage() {}

func (x *TReqGetPipelineDynamicSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetPipelineDynamicSpec.ProtoReflect.Descriptor instead.
func (*TReqGetPipelineDynamicSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{269}
}

func (x *TReqGetPipelineDynamicSpec) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

type TRspGetPipelineDynamicSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *int64 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Spec    []byte `protobuf:"bytes,2,req,name=spec" json:"spec,omitempty"` // YSON
}

func (x *TRspGetPipelineDynamicSpec) Reset() {
	*x = TRspGetPipelineDynamicSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetPipelineDynamicSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetPipelineDynamicSpec) ProtoMessage() {}

func (x *TRspGetPipelineDynamicSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetPipelineDynamicSpec.ProtoReflect.Descriptor instead.
func (*TRspGetPipelineDynamicSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{270}
}

func (x *TRspGetPipelineDynamicSpec) GetVersion() int64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *TRspGetPipelineDynamicSpec) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

type TReqSetPipelineDynamicSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath    []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
	ExpectedVersion *int64 `protobuf:"varint,2,opt,name=expected_version,json=expectedVersion" json:"expected_version,omitempty"`
	Spec            []byte `protobuf:"bytes,3,req,name=spec" json:"spec,omitempty"` // YSON
}

func (x *TReqSetPipelineDynamicSpec) Reset() {
	*x = TReqSetPipelineDynamicSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqSetPipelineDynamicSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqSetPipelineDynamicSpec) ProtoMessage() {}

func (x *TReqSetPipelineDynamicSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqSetPipelineDynamicSpec.ProtoReflect.Descriptor instead.
func (*TReqSetPipelineDynamicSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{271}
}

func (x *TReqSetPipelineDynamicSpec) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

func (x *TReqSetPipelineDynamicSpec) GetExpectedVersion() int64 {
	if x != nil && x.ExpectedVersion != nil {
		return *x.ExpectedVersion
	}
	return 0
}

func (x *TReqSetPipelineDynamicSpec) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

type TRspSetPipelineDynamicSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *int64 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
}

func (x *TRspSetPipelineDynamicSpec) Reset() {
	*x = TRspSetPipelineDynamicSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspSetPipelineDynamicSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspSetPipelineDynamicSpec) ProtoMessage() {}

func (x *TRspSetPipelineDynamicSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspSetPipelineDynamicSpec.ProtoReflect.Descriptor instead.
func (*TRspSetPipelineDynamicSpec) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{272}
}

func (x *TRspSetPipelineDynamicSpec) GetVersion() int64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type TReqStartPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
}

func (x *TReqStartPipeline) Reset() {
	*x = TReqStartPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartPipeline) ProtoMessage() {}

func (x *TReqStartPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartPipeline.ProtoReflect.Descriptor instead.
func (*TReqStartPipeline) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{273}
}

func (x *TReqStartPipeline) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

type TRspStartPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspStartPipeline) Reset() {
	*x = TRspStartPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStartPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStartPipeline) ProtoMessage() {}

func (x *TRspStartPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStartPipeline.ProtoReflect.Descriptor instead.
func (*TRspStartPipeline) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{274}
}

type TReqPausePipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
}

func (x *TReqPausePipeline) Reset() {
	*x = TReqPausePipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPausePipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPausePipeline) ProtoMessage() {}

func (x *TReqPausePipeline) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPausePipeline.ProtoReflect.Descriptor instead.
func (*TReqPausePipeline) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{275}
}

func (x *TReqPausePipeline) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

type TRspPausePipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspPausePipeline) Reset() {
	*x = TRspPausePipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspPausePipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspPausePipeline) ProtoMessage() {}

func (x *TRspPausePipeline) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspPausePipeline.ProtoReflect.Descriptor instead.
func (*TRspPausePipeline) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{276}
}

type TReqStopPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
}

func (x *TReqStopPipeline) Reset() {
	*x = TReqStopPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStopPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStopPipeline) ProtoMessage() {}

func (x *TReqStopPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStopPipeline.ProtoReflect.Descriptor instead.
func (*TReqStopPipeline) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{277}
}

func (x *TReqStopPipeline) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

type TRspStopPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspStopPipeline) Reset() {
	*x = TRspStopPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStopPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStopPipeline) ProtoMessage() {}

func (x *TRspStopPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStopPipeline.ProtoReflect.Descriptor instead.
func (*TRspStopPipeline) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{278}
}

type TReqGetPipelineState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
}

func (x *TReqGetPipelineState) Reset() {
	*x = TReqGetPipelineState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetPipelineState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetPipelineState) ProtoMessage() {}

func (x *TReqGetPipelineState) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetPipelineState.ProtoReflect.Descriptor instead.
func (*TReqGetPipelineState) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{279}
}

func (x *TReqGetPipelineState) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

type TRspGetPipelineState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(babenko): provide native proto enum
	State *int32 `protobuf:"varint,1,req,name=state" json:"state,omitempty"` // EPipelineState
}

func (x *TRspGetPipelineState) Reset() {
	*x = TRspGetPipelineState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetPipelineState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetPipelineState) ProtoMessage() {}

func (x *TRspGetPipelineState) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetPipelineState.ProtoReflect.Descriptor instead.
func (*TRspGetPipelineState) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{280}
}

func (x *TRspGetPipelineState) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

type TReqGetFlowView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePath []byte `protobuf:"bytes,1,req,name=pipeline_path,json=pipelinePath" json:"pipeline_path,omitempty"` // YPath
	ViewPath     []byte `protobuf:"bytes,2,opt,name=view_path,json=viewPath" json:"view_path,omitempty"`             // YPath
	Cache        *bool  `protobuf:"varint,3,opt,name=cache,def=1" json:"cache,omitempty"`
}

// Default values for TReqGetFlowView fields.
const (
	Default_TReqGetFlowView_Cache = bool(true)
)

func (x *TReqGetFlowView) Reset() {
	*x = TReqGetFlowView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetFlowView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetFlowView) ProtoMessage() {}

func (x *TReqGetFlowView) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetFlowView.ProtoReflect.Descriptor instead.
func (*TReqGetFlowView) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{281}
}

func (x *TReqGetFlowView) GetPipelinePath() []byte {
	if x != nil {
		return x.PipelinePath
	}
	return nil
}

func (x *TReqGetFlowView) GetViewPath() []byte {
	if x != nil {
		return x.ViewPath
	}
	return nil
}

func (x *TReqGetFlowView) GetCache() bool {
	if x != nil && x.Cache != nil {
		return *x.Cache
	}
	return Default_TReqGetFlowView_Cache
}

type TRspGetFlowView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowViewPart []byte `protobuf:"bytes,1,req,name=flow_view_part,json=flowViewPart" json:"flow_view_part,omitempty"` // YSON
}

func (x *TRspGetFlowView) Reset() {
	*x = TRspGetFlowView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetFlowView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetFlowView) ProtoMessage() {}

func (x *TRspGetFlowView) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetFlowView.ProtoReflect.Descriptor instead.
func (*TRspGetFlowView) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{282}
}

func (x *TRspGetFlowView) GetFlowViewPart() []byte {
	if x != nil {
		return x.FlowViewPart
	}
	return nil
}

type TOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                              *misc.TGuid          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                            *EOperationType      `protobuf:"varint,2,opt,name=type,enum=NYT.NApi.NRpcProxy.NProto.EOperationType" json:"type,omitempty"`
	State                           *EOperationState     `protobuf:"varint,3,opt,name=state,enum=NYT.NApi.NRpcProxy.NProto.EOperationState" json:"state,omitempty"`
	StartTime                       *uint64              `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`    // TInstant
	FinishTime                      *uint64              `protobuf:"varint,5,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"` // TInstant
	AuthenticatedUser               *string              `protobuf:"bytes,6,opt,name=authenticated_user,json=authenticatedUser" json:"authenticated_user,omitempty"`
	Pools                           *TOperation_TStrings `protobuf:"bytes,8,opt,name=pools" json:"pools,omitempty"`
	BriefSpec                       []byte               `protobuf:"bytes,9,opt,name=brief_spec,json=briefSpec" json:"brief_spec,omitempty"`                          // YSON
	Spec                            []byte               `protobuf:"bytes,10,opt,name=spec" json:"spec,omitempty"`                                                    // YSON
	ProvidedSpec                    []byte               `protobuf:"bytes,27,opt,name=provided_spec,json=providedSpec" json:"provided_spec,omitempty"`                // YSON
	FullSpec                        []byte               `protobuf:"bytes,11,opt,name=full_spec,json=fullSpec" json:"full_spec,omitempty"`                            // YSON
	UnrecognizedSpec                []byte               `protobuf:"bytes,12,opt,name=unrecognized_spec,json=unrecognizedSpec" json:"unrecognized_spec,omitempty"`    // YSON
	BriefProgress                   []byte               `protobuf:"bytes,14,opt,name=brief_progress,json=briefProgress" json:"brief_progress,omitempty"`             // YSON
	Progress                        []byte               `protobuf:"bytes,15,opt,name=progress" json:"progress,omitempty"`                                            // YSON
	RuntimeParameters               []byte               `protobuf:"bytes,16,opt,name=runtime_parameters,json=runtimeParameters" json:"runtime_parameters,omitempty"` // YSON
	Suspended                       *bool                `protobuf:"varint,17,opt,name=suspended" json:"suspended,omitempty"`
	SuspendReason                   *string              `protobuf:"bytes,29,opt,name=suspend_reason,json=suspendReason" json:"suspend_reason,omitempty"`
	Events                          []byte               `protobuf:"bytes,18,opt,name=events" json:"events,omitempty"`                                                                                                // YSON
	Result                          []byte               `protobuf:"bytes,19,opt,name=result" json:"result,omitempty"`                                                                                                // YSON
	SchedulingAttributesPerPoolTree []byte               `protobuf:"bytes,28,opt,name=scheduling_attributes_per_pool_tree,json=schedulingAttributesPerPoolTree" json:"scheduling_attributes_per_pool_tree,omitempty"` // YSON
	SlotIndexPerPoolTree            []byte               `protobuf:"bytes,20,opt,name=slot_index_per_pool_tree,json=slotIndexPerPoolTree" json:"slot_index_per_pool_tree,omitempty"`                                  // YSON
	TaskNames                       []byte               `protobuf:"bytes,21,opt,name=task_names,json=taskNames" json:"task_names,omitempty"`                                                                         // YSON
	ExperimentAssignments           []byte               `protobuf:"bytes,22,opt,name=experiment_assignments,json=experimentAssignments" json:"experiment_assignments,omitempty"`                                     // YSON
	ExperimentAssignmentNames       []byte               `protobuf:"bytes,23,opt,name=experiment_assignment_names,json=experimentAssignmentNames" json:"experiment_assignment_names,omitempty"`                       // YSON
	Alerts                          []byte               `protobuf:"bytes,24,opt,name=alerts" json:"alerts,omitempty"`                                                                                                // YSON
	ControllerFeatures              []byte               `protobuf:"bytes,25,opt,name=controller_features,json=controllerFeatures" json:"controller_features,omitempty"`                                              // YSON
	AlertEvents                     []byte               `protobuf:"bytes,26,opt,name=alert_events,json=alertEvents" json:"alert_events,omitempty"`                                                                   // YSON
	OtherAttributes                 []byte               `protobuf:"bytes,50,opt,name=other_attributes,json=otherAttributes" json:"other_attributes,omitempty"`                                                       // YSON
}

func (x *TOperation) Reset() {
	*x = TOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TOperation) ProtoMessage() {}

func (x *TOperation) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TOperation.ProtoReflect.Descriptor instead.
func (*TOperation) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{283}
}

func (x *TOperation) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TOperation) GetType() EOperationType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EOperationType_OT_UNKNOWN
}

func (x *TOperation) GetState() EOperationState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EOperationState_OS_UNKNOWN
}

func (x *TOperation) GetStartTime() uint64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *TOperation) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *TOperation) GetAuthenticatedUser() string {
	if x != nil && x.AuthenticatedUser != nil {
		return *x.AuthenticatedUser
	}
	return ""
}

func (x *TOperation) GetPools() *TOperation_TStrings {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *TOperation) GetBriefSpec() []byte {
	if x != nil {
		return x.BriefSpec
	}
	return nil
}

func (x *TOperation) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TOperation) GetProvidedSpec() []byte {
	if x != nil {
		return x.ProvidedSpec
	}
	return nil
}

func (x *TOperation) GetFullSpec() []byte {
	if x != nil {
		return x.FullSpec
	}
	return nil
}

func (x *TOperation) GetUnrecognizedSpec() []byte {
	if x != nil {
		return x.UnrecognizedSpec
	}
	return nil
}

func (x *TOperation) GetBriefProgress() []byte {
	if x != nil {
		return x.BriefProgress
	}
	return nil
}

func (x *TOperation) GetProgress() []byte {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *TOperation) GetRuntimeParameters() []byte {
	if x != nil {
		return x.RuntimeParameters
	}
	return nil
}

func (x *TOperation) GetSuspended() bool {
	if x != nil && x.Suspended != nil {
		return *x.Suspended
	}
	return false
}

func (x *TOperation) GetSuspendReason() string {
	if x != nil && x.SuspendReason != nil {
		return *x.SuspendReason
	}
	return ""
}

func (x *TOperation) GetEvents() []byte {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TOperation) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TOperation) GetSchedulingAttributesPerPoolTree() []byte {
	if x != nil {
		return x.SchedulingAttributesPerPoolTree
	}
	return nil
}

func (x *TOperation) GetSlotIndexPerPoolTree() []byte {
	if x != nil {
		return x.SlotIndexPerPoolTree
	}
	return nil
}

func (x *TOperation) GetTaskNames() []byte {
	if x != nil {
		return x.TaskNames
	}
	return nil
}

func (x *TOperation) GetExperimentAssignments() []byte {
	if x != nil {
		return x.ExperimentAssignments
	}
	return nil
}

func (x *TOperation) GetExperimentAssignmentNames() []byte {
	if x != nil {
		return x.ExperimentAssignmentNames
	}
	return nil
}

func (x *TOperation) GetAlerts() []byte {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *TOperation) GetControllerFeatures() []byte {
	if x != nil {
		return x.ControllerFeatures
	}
	return nil
}

func (x *TOperation) GetAlertEvents() []byte {
	if x != nil {
		return x.AlertEvents
	}
	return nil
}

func (x *TOperation) GetOtherAttributes() []byte {
	if x != nil {
		return x.OtherAttributes
	}
	return nil
}

type TListOperationsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations      []*TOperation                                `protobuf:"bytes,1,rep,name=operations" json:"operations,omitempty"`
	PoolCounts      *TListOperationsResult_TPoolCounts           `protobuf:"bytes,2,opt,name=pool_counts,json=poolCounts" json:"pool_counts,omitempty"`
	UserCounts      *TListOperationsResult_TUserCounts           `protobuf:"bytes,3,opt,name=user_counts,json=userCounts" json:"user_counts,omitempty"`
	StateCounts     *TListOperationsResult_TOperationStateCounts `protobuf:"bytes,4,opt,name=state_counts,json=stateCounts" json:"state_counts,omitempty"`
	TypeCounts      *TListOperationsResult_TOperationTypeCounts  `protobuf:"bytes,5,opt,name=type_counts,json=typeCounts" json:"type_counts,omitempty"`
	FailedJobsCount *int64                                       `protobuf:"varint,6,opt,name=failed_jobs_count,json=failedJobsCount" json:"failed_jobs_count,omitempty"`
	Incomplete      *bool                                        `protobuf:"varint,7,opt,name=incomplete,def=0" json:"incomplete,omitempty"`
	PoolTreeCounts  *TListOperationsResult_TPoolTreeCounts       `protobuf:"bytes,8,opt,name=pool_tree_counts,json=poolTreeCounts" json:"pool_tree_counts,omitempty"`
}

// Default values for TListOperationsResult fields.
const (
	Default_TListOperationsResult_Incomplete = bool(false)
)

func (x *TListOperationsResult) Reset() {
	*x = TListOperationsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult) ProtoMessage() {}

func (x *TListOperationsResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult.ProtoReflect.Descriptor instead.
func (*TListOperationsResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284}
}

func (x *TListOperationsResult) GetOperations() []*TOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *TListOperationsResult) GetPoolCounts() *TListOperationsResult_TPoolCounts {
	if x != nil {
		return x.PoolCounts
	}
	return nil
}

func (x *TListOperationsResult) GetUserCounts() *TListOperationsResult_TUserCounts {
	if x != nil {
		return x.UserCounts
	}
	return nil
}

func (x *TListOperationsResult) GetStateCounts() *TListOperationsResult_TOperationStateCounts {
	if x != nil {
		return x.StateCounts
	}
	return nil
}

func (x *TListOperationsResult) GetTypeCounts() *TListOperationsResult_TOperationTypeCounts {
	if x != nil {
		return x.TypeCounts
	}
	return nil
}

func (x *TListOperationsResult) GetFailedJobsCount() int64 {
	if x != nil && x.FailedJobsCount != nil {
		return *x.FailedJobsCount
	}
	return 0
}

func (x *TListOperationsResult) GetIncomplete() bool {
	if x != nil && x.Incomplete != nil {
		return *x.Incomplete
	}
	return Default_TListOperationsResult_Incomplete
}

func (x *TListOperationsResult) GetPoolTreeCounts() *TListOperationsResult_TPoolTreeCounts {
	if x != nil {
		return x.PoolTreeCounts
	}
	return nil
}

type TJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      *misc.TGuid `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                    *EJobType   `protobuf:"varint,2,opt,name=type,enum=NYT.NApi.NRpcProxy.NProto.EJobType" json:"type,omitempty"`
	State                   *EJobState  `protobuf:"varint,3,opt,name=state,enum=NYT.NApi.NRpcProxy.NProto.EJobState" json:"state,omitempty"`
	StartTime               *uint64     `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`    // TInstant
	FinishTime              *uint64     `protobuf:"varint,5,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"` // TInstant
	Address                 *string     `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
	Progress                *float64    `protobuf:"fixed64,7,opt,name=progress" json:"progress,omitempty"`
	StderrSize              *uint64     `protobuf:"varint,8,opt,name=stderr_size,json=stderrSize" json:"stderr_size,omitempty"`
	FailContextSize         *uint64     `protobuf:"varint,9,opt,name=fail_context_size,json=failContextSize" json:"fail_context_size,omitempty"`
	HasSpec                 *bool       `protobuf:"varint,10,opt,name=has_spec,json=hasSpec" json:"has_spec,omitempty"`
	Error                   []byte      `protobuf:"bytes,11,opt,name=error" json:"error,omitempty"`                                               // YSON
	InterruptionInfo        []byte      `protobuf:"bytes,28,opt,name=interruption_info,json=interruptionInfo" json:"interruption_info,omitempty"` // YSON
	BriefStatistics         []byte      `protobuf:"bytes,12,opt,name=brief_statistics,json=briefStatistics" json:"brief_statistics,omitempty"`    // YSON
	InputPaths              []byte      `protobuf:"bytes,13,opt,name=input_paths,json=inputPaths" json:"input_paths,omitempty"`                   // YSON
	CoreInfos               []byte      `protobuf:"bytes,14,opt,name=core_infos,json=coreInfos" json:"core_infos,omitempty"`                      // YSON
	OperationId             *misc.TGuid `protobuf:"bytes,15,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	ControllerState         *EJobState  `protobuf:"varint,16,opt,name=controller_state,json=controllerState,enum=NYT.NApi.NRpcProxy.NProto.EJobState" json:"controller_state,omitempty"`
	ArchiveState            *EJobState  `protobuf:"varint,17,opt,name=archive_state,json=archiveState,enum=NYT.NApi.NRpcProxy.NProto.EJobState" json:"archive_state,omitempty"`
	JobCompetitionId        *misc.TGuid `protobuf:"bytes,18,opt,name=job_competition_id,json=jobCompetitionId" json:"job_competition_id,omitempty"`
	HasCompetitors          *bool       `protobuf:"varint,19,opt,name=has_competitors,json=hasCompetitors" json:"has_competitors,omitempty"`
	IsStale                 *bool       `protobuf:"varint,20,opt,name=is_stale,json=isStale" json:"is_stale,omitempty"`
	ExecAttributes          []byte      `protobuf:"bytes,21,opt,name=exec_attributes,json=execAttributes" json:"exec_attributes,omitempty"` // YSON
	TaskName                *string     `protobuf:"bytes,22,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	PoolTree                *string     `protobuf:"bytes,23,opt,name=pool_tree,json=poolTree" json:"pool_tree,omitempty"`
	Pool                    *string     `protobuf:"bytes,24,opt,name=pool" json:"pool,omitempty"`
	ProbingJobCompetitionId *misc.TGuid `protobuf:"bytes,25,opt,name=probing_job_competition_id,json=probingJobCompetitionId" json:"probing_job_competition_id,omitempty"`
	HasProbingCompetitors   *bool       `protobuf:"varint,26,opt,name=has_probing_competitors,json=hasProbingCompetitors" json:"has_probing_competitors,omitempty"`
	JobCookie               *uint64     `protobuf:"varint,27,opt,name=job_cookie,json=jobCookie" json:"job_cookie,omitempty"`
	ArchiveFeatures         []byte      `protobuf:"bytes,29,opt,name=archive_features,json=archiveFeatures" json:"archive_features,omitempty"` // YSON
	MonitoringDescriptor    *string     `protobuf:"bytes,30,opt,name=monitoring_descriptor,json=monitoringDescriptor" json:"monitoring_descriptor,omitempty"`
	OperationIncarnation    *string     `protobuf:"bytes,31,opt,name=operation_incarnation,json=operationIncarnation" json:"operation_incarnation,omitempty"`
}

func (x *TJob) Reset() {
	*x = TJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TJob) ProtoMessage() {}

func (x *TJob) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TJob.ProtoReflect.Descriptor instead.
func (*TJob) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{285}
}

func (x *TJob) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TJob) GetType() EJobType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EJobType_JT_UNKNOWN
}

func (x *TJob) GetState() EJobState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EJobState_JS_UNKNOWN
}

func (x *TJob) GetStartTime() uint64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *TJob) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *TJob) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *TJob) GetProgress() float64 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *TJob) GetStderrSize() uint64 {
	if x != nil && x.StderrSize != nil {
		return *x.StderrSize
	}
	return 0
}

func (x *TJob) GetFailContextSize() uint64 {
	if x != nil && x.FailContextSize != nil {
		return *x.FailContextSize
	}
	return 0
}

func (x *TJob) GetHasSpec() bool {
	if x != nil && x.HasSpec != nil {
		return *x.HasSpec
	}
	return false
}

func (x *TJob) GetError() []byte {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TJob) GetInterruptionInfo() []byte {
	if x != nil {
		return x.InterruptionInfo
	}
	return nil
}

func (x *TJob) GetBriefStatistics() []byte {
	if x != nil {
		return x.BriefStatistics
	}
	return nil
}

func (x *TJob) GetInputPaths() []byte {
	if x != nil {
		return x.InputPaths
	}
	return nil
}

func (x *TJob) GetCoreInfos() []byte {
	if x != nil {
		return x.CoreInfos
	}
	return nil
}

func (x *TJob) GetOperationId() *misc.TGuid {
	if x != nil {
		return x.OperationId
	}
	return nil
}

func (x *TJob) GetControllerState() EJobState {
	if x != nil && x.ControllerState != nil {
		return *x.ControllerState
	}
	return EJobState_JS_UNKNOWN
}

func (x *TJob) GetArchiveState() EJobState {
	if x != nil && x.ArchiveState != nil {
		return *x.ArchiveState
	}
	return EJobState_JS_UNKNOWN
}

func (x *TJob) GetJobCompetitionId() *misc.TGuid {
	if x != nil {
		return x.JobCompetitionId
	}
	return nil
}

func (x *TJob) GetHasCompetitors() bool {
	if x != nil && x.HasCompetitors != nil {
		return *x.HasCompetitors
	}
	return false
}

func (x *TJob) GetIsStale() bool {
	if x != nil && x.IsStale != nil {
		return *x.IsStale
	}
	return false
}

func (x *TJob) GetExecAttributes() []byte {
	if x != nil {
		return x.ExecAttributes
	}
	return nil
}

func (x *TJob) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *TJob) GetPoolTree() string {
	if x != nil && x.PoolTree != nil {
		return *x.PoolTree
	}
	return ""
}

func (x *TJob) GetPool() string {
	if x != nil && x.Pool != nil {
		return *x.Pool
	}
	return ""
}

func (x *TJob) GetProbingJobCompetitionId() *misc.TGuid {
	if x != nil {
		return x.ProbingJobCompetitionId
	}
	return nil
}

func (x *TJob) GetHasProbingCompetitors() bool {
	if x != nil && x.HasProbingCompetitors != nil {
		return *x.HasProbingCompetitors
	}
	return false
}

func (x *TJob) GetJobCookie() uint64 {
	if x != nil && x.JobCookie != nil {
		return *x.JobCookie
	}
	return 0
}

func (x *TJob) GetArchiveFeatures() []byte {
	if x != nil {
		return x.ArchiveFeatures
	}
	return nil
}

func (x *TJob) GetMonitoringDescriptor() string {
	if x != nil && x.MonitoringDescriptor != nil {
		return *x.MonitoringDescriptor
	}
	return ""
}

func (x *TJob) GetOperationIncarnation() string {
	if x != nil && x.OperationIncarnation != nil {
		return *x.OperationIncarnation
	}
	return ""
}

type TListJobsStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCounts *TListJobsStatistics_TJobStateCounts `protobuf:"bytes,1,req,name=state_counts,json=stateCounts" json:"state_counts,omitempty"`
	TypeCounts  *TListJobsStatistics_TJobTypeCounts  `protobuf:"bytes,2,req,name=type_counts,json=typeCounts" json:"type_counts,omitempty"`
}

func (x *TListJobsStatistics) Reset() {
	*x = TListJobsStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListJobsStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListJobsStatistics) ProtoMessage() {}

func (x *TListJobsStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListJobsStatistics.ProtoReflect.Descriptor instead.
func (*TListJobsStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{286}
}

func (x *TListJobsStatistics) GetStateCounts() *TListJobsStatistics_TJobStateCounts {
	if x != nil {
		return x.StateCounts
	}
	return nil
}

func (x *TListJobsStatistics) GetTypeCounts() *TListJobsStatistics_TJobTypeCounts {
	if x != nil {
		return x.TypeCounts
	}
	return nil
}

type TListJobsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs                    []*TJob              `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
	CypressJobCount         *int32               `protobuf:"varint,2,opt,name=cypress_job_count,json=cypressJobCount" json:"cypress_job_count,omitempty"`
	ControllerAgentJobCount *int32               `protobuf:"varint,3,opt,name=controller_agent_job_count,json=controllerAgentJobCount" json:"controller_agent_job_count,omitempty"`
	ArchiveJobCount         *int32               `protobuf:"varint,4,opt,name=archive_job_count,json=archiveJobCount" json:"archive_job_count,omitempty"`
	Statistics              *TListJobsStatistics `protobuf:"bytes,5,req,name=statistics" json:"statistics,omitempty"`
	Errors                  []*misc.TError       `protobuf:"bytes,6,rep,name=errors" json:"errors,omitempty"`
	ContinuationToken       *string              `protobuf:"bytes,7,opt,name=continuation_token,json=continuationToken" json:"continuation_token,omitempty"`
}

func (x *TListJobsResult) Reset() {
	*x = TListJobsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListJobsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListJobsResult) ProtoMessage() {}

func (x *TListJobsResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListJobsResult.ProtoReflect.Descriptor instead.
func (*TListJobsResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{287}
}

func (x *TListJobsResult) GetJobs() []*TJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *TListJobsResult) GetCypressJobCount() int32 {
	if x != nil && x.CypressJobCount != nil {
		return *x.CypressJobCount
	}
	return 0
}

func (x *TListJobsResult) GetControllerAgentJobCount() int32 {
	if x != nil && x.ControllerAgentJobCount != nil {
		return *x.ControllerAgentJobCount
	}
	return 0
}

func (x *TListJobsResult) GetArchiveJobCount() int32 {
	if x != nil && x.ArchiveJobCount != nil {
		return *x.ArchiveJobCount
	}
	return 0
}

func (x *TListJobsResult) GetStatistics() *TListJobsStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *TListJobsResult) GetErrors() []*misc.TError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *TListJobsResult) GetContinuationToken() string {
	if x != nil && x.ContinuationToken != nil {
		return *x.ContinuationToken
	}
	return ""
}

type TJobTraceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId *misc.TGuid `protobuf:"bytes,1,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	JobId       *misc.TGuid `protobuf:"bytes,2,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	TraceId     *misc.TGuid `protobuf:"bytes,3,req,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	EventIndex  *int64      `protobuf:"varint,4,req,name=event_index,json=eventIndex" json:"event_index,omitempty"`
	Event       *string     `protobuf:"bytes,5,req,name=event" json:"event,omitempty"`
	EventTime   *int64      `protobuf:"varint,6,req,name=event_time,json=eventTime" json:"event_time,omitempty"` // TInstant
}

func (x *TJobTraceEvent) Reset() {
	*x = TJobTraceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TJobTraceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TJobTraceEvent) ProtoMessage() {}

func (x *TJobTraceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TJobTraceEvent.ProtoReflect.Descriptor instead.
func (*TJobTraceEvent) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{288}
}

func (x *TJobTraceEvent) GetOperationId() *misc.TGuid {
	if x != nil {
		return x.OperationId
	}
	return nil
}

func (x *TJobTraceEvent) GetJobId() *misc.TGuid {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *TJobTraceEvent) GetTraceId() *misc.TGuid {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *TJobTraceEvent) GetEventIndex() int64 {
	if x != nil && x.EventIndex != nil {
		return *x.EventIndex
	}
	return 0
}

func (x *TJobTraceEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *TJobTraceEvent) GetEventTime() int64 {
	if x != nil && x.EventTime != nil {
		return *x.EventTime
	}
	return 0
}

type TGetFileFromCacheResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
}

func (x *TGetFileFromCacheResult) Reset() {
	*x = TGetFileFromCacheResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetFileFromCacheResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetFileFromCacheResult) ProtoMessage() {}

func (x *TGetFileFromCacheResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetFileFromCacheResult.ProtoReflect.Descriptor instead.
func (*TGetFileFromCacheResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{289}
}

func (x *TGetFileFromCacheResult) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

type TPutFileToCacheResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []byte `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
}

func (x *TPutFileToCacheResult) Reset() {
	*x = TPutFileToCacheResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPutFileToCacheResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPutFileToCacheResult) ProtoMessage() {}

func (x *TPutFileToCacheResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPutFileToCacheResult.ProtoReflect.Descriptor instead.
func (*TPutFileToCacheResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{290}
}

func (x *TPutFileToCacheResult) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

type TCheckPermissionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      *ESecurityAction `protobuf:"varint,1,req,name=action,enum=NYT.NApi.NRpcProxy.NProto.ESecurityAction" json:"action,omitempty"`
	ObjectId    *misc.TGuid      `protobuf:"bytes,2,req,name=object_id,json=objectId" json:"object_id,omitempty"`
	ObjectName  *string          `protobuf:"bytes,3,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
	SubjectId   *misc.TGuid      `protobuf:"bytes,4,req,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	SubjectName *string          `protobuf:"bytes,5,opt,name=subject_name,json=subjectName" json:"subject_name,omitempty"`
}

func (x *TCheckPermissionResult) Reset() {
	*x = TCheckPermissionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCheckPermissionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCheckPermissionResult) ProtoMessage() {}

func (x *TCheckPermissionResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCheckPermissionResult.ProtoReflect.Descriptor instead.
func (*TCheckPermissionResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{291}
}

func (x *TCheckPermissionResult) GetAction() ESecurityAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ESecurityAction_SA_UNDEFINED
}

func (x *TCheckPermissionResult) GetObjectId() *misc.TGuid {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

func (x *TCheckPermissionResult) GetObjectName() string {
	if x != nil && x.ObjectName != nil {
		return *x.ObjectName
	}
	return ""
}

func (x *TCheckPermissionResult) GetSubjectId() *misc.TGuid {
	if x != nil {
		return x.SubjectId
	}
	return nil
}

func (x *TCheckPermissionResult) GetSubjectName() string {
	if x != nil && x.SubjectName != nil {
		return *x.SubjectName
	}
	return ""
}

type TCheckPermissionByAclResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action          *ESecurityAction `protobuf:"varint,1,req,name=action,enum=NYT.NApi.NRpcProxy.NProto.ESecurityAction" json:"action,omitempty"`
	SubjectId       *misc.TGuid      `protobuf:"bytes,2,req,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	SubjectName     *string          `protobuf:"bytes,3,opt,name=subject_name,json=subjectName" json:"subject_name,omitempty"`
	MissingSubjects []string         `protobuf:"bytes,4,rep,name=missing_subjects,json=missingSubjects" json:"missing_subjects,omitempty"`
}

func (x *TCheckPermissionByAclResult) Reset() {
	*x = TCheckPermissionByAclResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCheckPermissionByAclResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCheckPermissionByAclResult) ProtoMessage() {}

func (x *TCheckPermissionByAclResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCheckPermissionByAclResult.ProtoReflect.Descriptor instead.
func (*TCheckPermissionByAclResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{292}
}

func (x *TCheckPermissionByAclResult) GetAction() ESecurityAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ESecurityAction_SA_UNDEFINED
}

func (x *TCheckPermissionByAclResult) GetSubjectId() *misc.TGuid {
	if x != nil {
		return x.SubjectId
	}
	return nil
}

func (x *TCheckPermissionByAclResult) GetSubjectName() string {
	if x != nil && x.SubjectName != nil {
		return *x.SubjectName
	}
	return ""
}

func (x *TCheckPermissionByAclResult) GetMissingSubjects() []string {
	if x != nil {
		return x.MissingSubjects
	}
	return nil
}

type TReqStartQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage    *string                               `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	Engine               *EQueryEngine                         `protobuf:"varint,2,req,name=engine,enum=NYT.NApi.NRpcProxy.NProto.EQueryEngine" json:"engine,omitempty"`
	Query                *string                               `protobuf:"bytes,3,req,name=query" json:"query,omitempty"`
	Settings             []byte                                `protobuf:"bytes,4,opt,name=settings" json:"settings,omitempty"` // YSON
	Draft                *bool                                 `protobuf:"varint,5,opt,name=draft" json:"draft,omitempty"`
	Annotations          []byte                                `protobuf:"bytes,6,opt,name=annotations" json:"annotations,omitempty"` // YSON
	Files                []*TReqStartQuery_TQueryFile          `protobuf:"bytes,7,rep,name=files" json:"files,omitempty"`
	AccessControlObject  *string                               `protobuf:"bytes,8,opt,name=access_control_object,json=accessControlObject" json:"access_control_object,omitempty"` // COMPAT(mpereskokova)
	AccessControlObjects *TReqStartQuery_TAccessControlObjects `protobuf:"bytes,9,opt,name=access_control_objects,json=accessControlObjects" json:"access_control_objects,omitempty"`
}

func (x *TReqStartQuery) Reset() {
	*x = TReqStartQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartQuery) ProtoMessage() {}

func (x *TReqStartQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartQuery.ProtoReflect.Descriptor instead.
func (*TReqStartQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{293}
}

func (x *TReqStartQuery) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqStartQuery) GetEngine() EQueryEngine {
	if x != nil && x.Engine != nil {
		return *x.Engine
	}
	return EQueryEngine_QE_UNKNOWN
}

func (x *TReqStartQuery) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *TReqStartQuery) GetSettings() []byte {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TReqStartQuery) GetDraft() bool {
	if x != nil && x.Draft != nil {
		return *x.Draft
	}
	return false
}

func (x *TReqStartQuery) GetAnnotations() []byte {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *TReqStartQuery) GetFiles() []*TReqStartQuery_TQueryFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *TReqStartQuery) GetAccessControlObject() string {
	if x != nil && x.AccessControlObject != nil {
		return *x.AccessControlObject
	}
	return ""
}

func (x *TReqStartQuery) GetAccessControlObjects() *TReqStartQuery_TAccessControlObjects {
	if x != nil {
		return x.AccessControlObjects
	}
	return nil
}

type TRspStartQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId *misc.TGuid `protobuf:"bytes,1,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
}

func (x *TRspStartQuery) Reset() {
	*x = TRspStartQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStartQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStartQuery) ProtoMessage() {}

func (x *TRspStartQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStartQuery.ProtoReflect.Descriptor instead.
func (*TRspStartQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{294}
}

func (x *TRspStartQuery) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

type TReqAbortQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage *string     `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	QueryId           *misc.TGuid `protobuf:"bytes,2,req,name=query_id,json=queryId" json:"query_id,omitempty"`
	AbortMessage      *string     `protobuf:"bytes,3,opt,name=abort_message,json=abortMessage" json:"abort_message,omitempty"`
}

func (x *TReqAbortQuery) Reset() {
	*x = TReqAbortQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAbortQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAbortQuery) ProtoMessage() {}

func (x *TReqAbortQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAbortQuery.ProtoReflect.Descriptor instead.
func (*TReqAbortQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{295}
}

func (x *TReqAbortQuery) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqAbortQuery) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *TReqAbortQuery) GetAbortMessage() string {
	if x != nil && x.AbortMessage != nil {
		return *x.AbortMessage
	}
	return ""
}

type TRspAbortQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAbortQuery) Reset() {
	*x = TRspAbortQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAbortQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAbortQuery) ProtoMessage() {}

func (x *TRspAbortQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAbortQuery.ProtoReflect.Descriptor instead.
func (*TRspAbortQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{296}
}

type TReqGetQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage *string     `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	QueryId           *misc.TGuid `protobuf:"bytes,2,req,name=query_id,json=queryId" json:"query_id,omitempty"`
	ResultIndex       *int64      `protobuf:"varint,3,req,name=result_index,json=resultIndex" json:"result_index,omitempty"`
}

func (x *TReqGetQueryResult) Reset() {
	*x = TReqGetQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetQueryResult) ProtoMessage() {}

func (x *TReqGetQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetQueryResult.ProtoReflect.Descriptor instead.
func (*TReqGetQueryResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{297}
}

func (x *TReqGetQueryResult) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqGetQueryResult) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *TReqGetQueryResult) GetResultIndex() int64 {
	if x != nil && x.ResultIndex != nil {
		return *x.ResultIndex
	}
	return 0
}

type TRspGetQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId        *misc.TGuid                   `protobuf:"bytes,1,req,name=query_id,json=queryId" json:"query_id,omitempty"`
	ResultIndex    *int64                        `protobuf:"varint,2,req,name=result_index,json=resultIndex" json:"result_index,omitempty"`
	Error          *misc.TError                  `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	Schema         *TTableSchema                 `protobuf:"bytes,4,opt,name=schema" json:"schema,omitempty"`
	DataStatistics *chunk_client.TDataStatistics `protobuf:"bytes,5,req,name=data_statistics,json=dataStatistics" json:"data_statistics,omitempty"`
	IsTruncated    *bool                         `protobuf:"varint,6,req,name=is_truncated,json=isTruncated" json:"is_truncated,omitempty"`
	FullResult     []byte                        `protobuf:"bytes,7,opt,name=full_result,json=fullResult" json:"full_result,omitempty"` // YSON
}

func (x *TRspGetQueryResult) Reset() {
	*x = TRspGetQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetQueryResult) ProtoMessage() {}

func (x *TRspGetQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetQueryResult.ProtoReflect.Descriptor instead.
func (*TRspGetQueryResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{298}
}

func (x *TRspGetQueryResult) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *TRspGetQueryResult) GetResultIndex() int64 {
	if x != nil && x.ResultIndex != nil {
		return *x.ResultIndex
	}
	return 0
}

func (x *TRspGetQueryResult) GetError() *misc.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TRspGetQueryResult) GetSchema() *TTableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TRspGetQueryResult) GetDataStatistics() *chunk_client.TDataStatistics {
	if x != nil {
		return x.DataStatistics
	}
	return nil
}

func (x *TRspGetQueryResult) GetIsTruncated() bool {
	if x != nil && x.IsTruncated != nil {
		return *x.IsTruncated
	}
	return false
}

func (x *TRspGetQueryResult) GetFullResult() []byte {
	if x != nil {
		return x.FullResult
	}
	return nil
}

type TReqReadQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage *string                       `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	QueryId           *misc.TGuid                   `protobuf:"bytes,2,req,name=query_id,json=queryId" json:"query_id,omitempty"`
	ResultIndex       *int64                        `protobuf:"varint,3,req,name=result_index,json=resultIndex" json:"result_index,omitempty"`
	Columns           *TReqReadQueryResult_TColumns `protobuf:"bytes,4,opt,name=columns" json:"columns,omitempty"`
	LowerRowIndex     *int64                        `protobuf:"varint,5,opt,name=lower_row_index,json=lowerRowIndex" json:"lower_row_index,omitempty"`
	UpperRowIndex     *int64                        `protobuf:"varint,6,opt,name=upper_row_index,json=upperRowIndex" json:"upper_row_index,omitempty"`
}

func (x *TReqReadQueryResult) Reset() {
	*x = TReqReadQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReadQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReadQueryResult) ProtoMessage() {}

func (x *TReqReadQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReadQueryResult.ProtoReflect.Descriptor instead.
func (*TReqReadQueryResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{299}
}

func (x *TReqReadQueryResult) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqReadQueryResult) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *TReqReadQueryResult) GetResultIndex() int64 {
	if x != nil && x.ResultIndex != nil {
		return *x.ResultIndex
	}
	return 0
}

func (x *TReqReadQueryResult) GetColumns() *TReqReadQueryResult_TColumns {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TReqReadQueryResult) GetLowerRowIndex() int64 {
	if x != nil && x.LowerRowIndex != nil {
		return *x.LowerRowIndex
	}
	return 0
}

func (x *TReqReadQueryResult) GetUpperRowIndex() int64 {
	if x != nil && x.UpperRowIndex != nil {
		return *x.UpperRowIndex
	}
	return 0
}

type TRspReadQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor *TRowsetDescriptor `protobuf:"bytes,1,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
}

func (x *TRspReadQueryResult) Reset() {
	*x = TRspReadQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReadQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReadQueryResult) ProtoMessage() {}

func (x *TRspReadQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReadQueryResult.ProtoReflect.Descriptor instead.
func (*TRspReadQueryResult) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{300}
}

func (x *TRspReadQueryResult) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

type TQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   *misc.TGuid                 `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Engine               *EQueryEngine               `protobuf:"varint,2,opt,name=engine,enum=NYT.NApi.NRpcProxy.NProto.EQueryEngine" json:"engine,omitempty"`
	Query                *string                     `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
	Files                []byte                      `protobuf:"bytes,4,opt,name=files" json:"files,omitempty"`                              // YSON
	StartTime            *uint64                     `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`    // TInstant
	FinishTime           *uint64                     `protobuf:"varint,6,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"` // TInstant
	Settings             []byte                      `protobuf:"bytes,7,opt,name=settings" json:"settings,omitempty"`                        // YSON
	User                 *string                     `protobuf:"bytes,8,opt,name=user" json:"user,omitempty"`
	AccessControlObject  *string                     `protobuf:"bytes,9,opt,name=access_control_object,json=accessControlObject" json:"access_control_object,omitempty"` // COMPAT(mpereskokova)
	State                *EQueryState                `protobuf:"varint,10,opt,name=state,enum=NYT.NApi.NRpcProxy.NProto.EQueryState" json:"state,omitempty"`
	ResultCount          *int64                      `protobuf:"varint,11,opt,name=result_count,json=resultCount" json:"result_count,omitempty"`
	Progress             []byte                      `protobuf:"bytes,12,opt,name=progress" json:"progress,omitempty"` // YSON
	Error                *misc.TError                `protobuf:"bytes,13,opt,name=error" json:"error,omitempty"`
	Annotations          []byte                      `protobuf:"bytes,14,opt,name=annotations" json:"annotations,omitempty"` // YSON
	OtherAttributes      *ytree.TAttributeDictionary `protobuf:"bytes,15,opt,name=other_attributes,json=otherAttributes" json:"other_attributes,omitempty"`
	AccessControlObjects []byte                      `protobuf:"bytes,16,opt,name=access_control_objects,json=accessControlObjects" json:"access_control_objects,omitempty"` // YSON
}

func (x *TQuery) Reset() {
	*x = TQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TQuery) ProtoMessage() {}

func (x *TQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TQuery.ProtoReflect.Descriptor instead.
func (*TQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{301}
}

func (x *TQuery) GetId() *misc.TGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TQuery) GetEngine() EQueryEngine {
	if x != nil && x.Engine != nil {
		return *x.Engine
	}
	return EQueryEngine_QE_UNKNOWN
}

func (x *TQuery) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *TQuery) GetFiles() []byte {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *TQuery) GetStartTime() uint64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *TQuery) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *TQuery) GetSettings() []byte {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TQuery) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TQuery) GetAccessControlObject() string {
	if x != nil && x.AccessControlObject != nil {
		return *x.AccessControlObject
	}
	return ""
}

func (x *TQuery) GetState() EQueryState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EQueryState_QS_UNKNOWN
}

func (x *TQuery) GetResultCount() int64 {
	if x != nil && x.ResultCount != nil {
		return *x.ResultCount
	}
	return 0
}

func (x *TQuery) GetProgress() []byte {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *TQuery) GetError() *misc.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TQuery) GetAnnotations() []byte {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *TQuery) GetOtherAttributes() *ytree.TAttributeDictionary {
	if x != nil {
		return x.OtherAttributes
	}
	return nil
}

func (x *TQuery) GetAccessControlObjects() []byte {
	if x != nil {
		return x.AccessControlObjects
	}
	return nil
}

type TReqGetQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage *string                 `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	QueryId           *misc.TGuid             `protobuf:"bytes,2,req,name=query_id,json=queryId" json:"query_id,omitempty"`
	Attributes        *ytree.TAttributeFilter `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Timestamp         *uint64                 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (x *TReqGetQuery) Reset() {
	*x = TReqGetQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetQuery) ProtoMessage() {}

func (x *TReqGetQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetQuery.ProtoReflect.Descriptor instead.
func (*TReqGetQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{302}
}

func (x *TReqGetQuery) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqGetQuery) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *TReqGetQuery) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TReqGetQuery) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type TRspGetQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *TQuery `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (x *TRspGetQuery) Reset() {
	*x = TRspGetQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetQuery) ProtoMessage() {}

func (x *TRspGetQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetQuery.ProtoReflect.Descriptor instead.
func (*TRspGetQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{303}
}

func (x *TRspGetQuery) GetQuery() *TQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type TReqListQueries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage *string                  `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	FromTime          *uint64                  `protobuf:"varint,2,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`       // TInstant
	ToTime            *uint64                  `protobuf:"varint,3,opt,name=to_time,json=toTime" json:"to_time,omitempty"`             // TInstant
	CursorTime        *uint64                  `protobuf:"varint,4,opt,name=cursor_time,json=cursorTime" json:"cursor_time,omitempty"` // TInstant
	CursorDirection   *EOperationSortDirection `protobuf:"varint,5,opt,name=cursor_direction,json=cursorDirection,enum=NYT.NApi.NRpcProxy.NProto.EOperationSortDirection,def=1" json:"cursor_direction,omitempty"`
	UserFilter        *string                  `protobuf:"bytes,6,opt,name=user_filter,json=userFilter" json:"user_filter,omitempty"`
	StateFilter       *EQueryState             `protobuf:"varint,7,opt,name=state_filter,json=stateFilter,enum=NYT.NApi.NRpcProxy.NProto.EQueryState" json:"state_filter,omitempty"`
	EngineFilter      *EQueryEngine            `protobuf:"varint,8,opt,name=engine_filter,json=engineFilter,enum=NYT.NApi.NRpcProxy.NProto.EQueryEngine" json:"engine_filter,omitempty"`
	SubstrFilter      *string                  `protobuf:"bytes,9,opt,name=substr_filter,json=substrFilter" json:"substr_filter,omitempty"`
	Limit             *uint64                  `protobuf:"varint,10,opt,name=limit,def=100" json:"limit,omitempty"`
	Attributes        *ytree.TAttributeFilter  `protobuf:"bytes,11,opt,name=attributes" json:"attributes,omitempty"`
}

// Default values for TReqListQueries fields.
const (
	Default_TReqListQueries_CursorDirection = EOperationSortDirection_OSD_PAST
	Default_TReqListQueries_Limit           = uint64(100)
)

func (x *TReqListQueries) Reset() {
	*x = TReqListQueries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqListQueries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqListQueries) ProtoMessage() {}

func (x *TReqListQueries) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqListQueries.ProtoReflect.Descriptor instead.
func (*TReqListQueries) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{304}
}

func (x *TReqListQueries) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqListQueries) GetFromTime() uint64 {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return 0
}

func (x *TReqListQueries) GetToTime() uint64 {
	if x != nil && x.ToTime != nil {
		return *x.ToTime
	}
	return 0
}

func (x *TReqListQueries) GetCursorTime() uint64 {
	if x != nil && x.CursorTime != nil {
		return *x.CursorTime
	}
	return 0
}

func (x *TReqListQueries) GetCursorDirection() EOperationSortDirection {
	if x != nil && x.CursorDirection != nil {
		return *x.CursorDirection
	}
	return Default_TReqListQueries_CursorDirection
}

func (x *TReqListQueries) GetUserFilter() string {
	if x != nil && x.UserFilter != nil {
		return *x.UserFilter
	}
	return ""
}

func (x *TReqListQueries) GetStateFilter() EQueryState {
	if x != nil && x.StateFilter != nil {
		return *x.StateFilter
	}
	return EQueryState_QS_UNKNOWN
}

func (x *TReqListQueries) GetEngineFilter() EQueryEngine {
	if x != nil && x.EngineFilter != nil {
		return *x.EngineFilter
	}
	return EQueryEngine_QE_UNKNOWN
}

func (x *TReqListQueries) GetSubstrFilter() string {
	if x != nil && x.SubstrFilter != nil {
		return *x.SubstrFilter
	}
	return ""
}

func (x *TReqListQueries) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return Default_TReqListQueries_Limit
}

func (x *TReqListQueries) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type TRspListQueries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries    []*TQuery `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
	Incomplete *bool     `protobuf:"varint,2,req,name=incomplete" json:"incomplete,omitempty"`
	Timestamp  *uint64   `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
}

func (x *TRspListQueries) Reset() {
	*x = TRspListQueries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListQueries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListQueries) ProtoMessage() {}

func (x *TRspListQueries) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListQueries.ProtoReflect.Descriptor instead.
func (*TRspListQueries) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{305}
}

func (x *TRspListQueries) GetQueries() []*TQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *TRspListQueries) GetIncomplete() bool {
	if x != nil && x.Incomplete != nil {
		return *x.Incomplete
	}
	return false
}

func (x *TRspListQueries) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type TReqAlterQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage    *string                               `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	QueryId              *misc.TGuid                           `protobuf:"bytes,2,req,name=query_id,json=queryId" json:"query_id,omitempty"`
	Annotations          []byte                                `protobuf:"bytes,3,opt,name=annotations" json:"annotations,omitempty"`                                              // YSON
	AccessControlObject  *string                               `protobuf:"bytes,4,opt,name=access_control_object,json=accessControlObject" json:"access_control_object,omitempty"` // COMPAT(mpereskokova)
	AccessControlObjects *TReqAlterQuery_TAccessControlObjects `protobuf:"bytes,5,opt,name=access_control_objects,json=accessControlObjects" json:"access_control_objects,omitempty"`
}

func (x *TReqAlterQuery) Reset() {
	*x = TReqAlterQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAlterQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAlterQuery) ProtoMessage() {}

func (x *TReqAlterQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAlterQuery.ProtoReflect.Descriptor instead.
func (*TReqAlterQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{306}
}

func (x *TReqAlterQuery) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqAlterQuery) GetQueryId() *misc.TGuid {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *TReqAlterQuery) GetAnnotations() []byte {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *TReqAlterQuery) GetAccessControlObject() string {
	if x != nil && x.AccessControlObject != nil {
		return *x.AccessControlObject
	}
	return ""
}

func (x *TReqAlterQuery) GetAccessControlObjects() *TReqAlterQuery_TAccessControlObjects {
	if x != nil {
		return x.AccessControlObjects
	}
	return nil
}

type TRspAlterQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspAlterQuery) Reset() {
	*x = TRspAlterQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspAlterQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspAlterQuery) ProtoMessage() {}

func (x *TRspAlterQuery) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspAlterQuery.ProtoReflect.Descriptor instead.
func (*TRspAlterQuery) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{307}
}

type TReqGetQueryTrackerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTrackerStage *string                 `protobuf:"bytes,1,req,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	Attributes        *ytree.TAttributeFilter `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
}

func (x *TReqGetQueryTrackerInfo) Reset() {
	*x = TReqGetQueryTrackerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqGetQueryTrackerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqGetQueryTrackerInfo) ProtoMessage() {}

func (x *TReqGetQueryTrackerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqGetQueryTrackerInfo.ProtoReflect.Descriptor instead.
func (*TReqGetQueryTrackerInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{308}
}

func (x *TReqGetQueryTrackerInfo) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TReqGetQueryTrackerInfo) GetAttributes() *ytree.TAttributeFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type TRspGetQueryTrackerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName          *string  `protobuf:"bytes,1,req,name=cluster_name,json=clusterName" json:"cluster_name,omitempty"`
	SupportedFeatures    []byte   `protobuf:"bytes,2,req,name=supported_features,json=supportedFeatures" json:"supported_features,omitempty"` // YSON
	AccessControlObjects []string `protobuf:"bytes,3,rep,name=access_control_objects,json=accessControlObjects" json:"access_control_objects,omitempty"`
	QueryTrackerStage    *string  `protobuf:"bytes,4,opt,name=query_tracker_stage,json=queryTrackerStage" json:"query_tracker_stage,omitempty"`
	Clusters             []string `protobuf:"bytes,5,rep,name=clusters" json:"clusters,omitempty"`
}

func (x *TRspGetQueryTrackerInfo) Reset() {
	*x = TRspGetQueryTrackerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetQueryTrackerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetQueryTrackerInfo) ProtoMessage() {}

func (x *TRspGetQueryTrackerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetQueryTrackerInfo.ProtoReflect.Descriptor instead.
func (*TRspGetQueryTrackerInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{309}
}

func (x *TRspGetQueryTrackerInfo) GetClusterName() string {
	if x != nil && x.ClusterName != nil {
		return *x.ClusterName
	}
	return ""
}

func (x *TRspGetQueryTrackerInfo) GetSupportedFeatures() []byte {
	if x != nil {
		return x.SupportedFeatures
	}
	return nil
}

func (x *TRspGetQueryTrackerInfo) GetAccessControlObjects() []string {
	if x != nil {
		return x.AccessControlObjects
	}
	return nil
}

func (x *TRspGetQueryTrackerInfo) GetQueryTrackerStage() string {
	if x != nil && x.QueryTrackerStage != nil {
		return *x.QueryTrackerStage
	}
	return ""
}

func (x *TRspGetQueryTrackerInfo) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type TReqStartDistributedWriteSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                 `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // RichYPath
	CookieCount          *int32                 `protobuf:"varint,2,req,name=cookie_count,json=cookieCount" json:"cookie_count,omitempty"`
	TransactionalOptions *TTransactionalOptions `protobuf:"bytes,100,opt,name=transactional_options,json=transactionalOptions" json:"transactional_options,omitempty"`
}

func (x *TReqStartDistributedWriteSession) Reset() {
	*x = TReqStartDistributedWriteSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartDistributedWriteSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartDistributedWriteSession) ProtoMessage() {}

func (x *TReqStartDistributedWriteSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartDistributedWriteSession.ProtoReflect.Descriptor instead.
func (*TReqStartDistributedWriteSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{310}
}

func (x *TReqStartDistributedWriteSession) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqStartDistributedWriteSession) GetCookieCount() int32 {
	if x != nil && x.CookieCount != nil {
		return *x.CookieCount
	}
	return 0
}

func (x *TReqStartDistributedWriteSession) GetTransactionalOptions() *TTransactionalOptions {
	if x != nil {
		return x.TransactionalOptions
	}
	return nil
}

type TRspStartDistributedWriteSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedSession []byte   `protobuf:"bytes,1,req,name=signed_session,json=signedSession" json:"signed_session,omitempty"` // YSON-serialized TSignedDistributedWriteSessionPtr
	SignedCookies [][]byte `protobuf:"bytes,2,rep,name=signed_cookies,json=signedCookies" json:"signed_cookies,omitempty"` // vector of YSON-serialized TSignedDistributedWriteCookiePtr
}

func (x *TRspStartDistributedWriteSession) Reset() {
	*x = TRspStartDistributedWriteSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStartDistributedWriteSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStartDistributedWriteSession) ProtoMessage() {}

func (x *TRspStartDistributedWriteSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStartDistributedWriteSession.ProtoReflect.Descriptor instead.
func (*TRspStartDistributedWriteSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{311}
}

func (x *TRspStartDistributedWriteSession) GetSignedSession() []byte {
	if x != nil {
		return x.SignedSession
	}
	return nil
}

func (x *TRspStartDistributedWriteSession) GetSignedCookies() [][]byte {
	if x != nil {
		return x.SignedCookies
	}
	return nil
}

type TReqFinishDistributedWriteSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedSession               []byte   `protobuf:"bytes,1,req,name=signed_session,json=signedSession" json:"signed_session,omitempty"`                  // YSON-serialized TSignedDistributedWriteSessionPtr
	SignedWriteResults          [][]byte `protobuf:"bytes,2,rep,name=signed_write_results,json=signedWriteResults" json:"signed_write_results,omitempty"` // vector of YSON-serialized TSignedWriteFragmentResultPtr
	MaxChildrenPerAttachRequest *int32   `protobuf:"varint,3,req,name=max_children_per_attach_request,json=maxChildrenPerAttachRequest" json:"max_children_per_attach_request,omitempty"`
}

func (x *TReqFinishDistributedWriteSession) Reset() {
	*x = TReqFinishDistributedWriteSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqFinishDistributedWriteSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqFinishDistributedWriteSession) ProtoMessage() {}

func (x *TReqFinishDistributedWriteSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqFinishDistributedWriteSession.ProtoReflect.Descriptor instead.
func (*TReqFinishDistributedWriteSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{312}
}

func (x *TReqFinishDistributedWriteSession) GetSignedSession() []byte {
	if x != nil {
		return x.SignedSession
	}
	return nil
}

func (x *TReqFinishDistributedWriteSession) GetSignedWriteResults() [][]byte {
	if x != nil {
		return x.SignedWriteResults
	}
	return nil
}

func (x *TReqFinishDistributedWriteSession) GetMaxChildrenPerAttachRequest() int32 {
	if x != nil && x.MaxChildrenPerAttachRequest != nil {
		return *x.MaxChildrenPerAttachRequest
	}
	return 0
}

type TRspFinishDistributedWriteSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspFinishDistributedWriteSession) Reset() {
	*x = TRspFinishDistributedWriteSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspFinishDistributedWriteSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspFinishDistributedWriteSession) ProtoMessage() {}

func (x *TRspFinishDistributedWriteSession) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspFinishDistributedWriteSession.ProtoReflect.Descriptor instead.
func (*TRspFinishDistributedWriteSession) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{313}
}

type TReqWriteTableFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config       []byte `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`                                 // YSON-serialized TTableWriterConfig
	Format       []byte `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`                                 // YSON-serialized TFormat
	SignedCookie []byte `protobuf:"bytes,3,req,name=signed_cookie,json=signedCookie" json:"signed_cookie,omitempty"` // YSON-serialized TSignedWriteFragmentCookiePtr
}

func (x *TReqWriteTableFragment) Reset() {
	*x = TReqWriteTableFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqWriteTableFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqWriteTableFragment) ProtoMessage() {}

func (x *TReqWriteTableFragment) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqWriteTableFragment.ProtoReflect.Descriptor instead.
func (*TReqWriteTableFragment) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{314}
}

func (x *TReqWriteTableFragment) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TReqWriteTableFragment) GetFormat() []byte {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *TReqWriteTableFragment) GetSignedCookie() []byte {
	if x != nil {
		return x.SignedCookie
	}
	return nil
}

type TRspWriteTableFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedWriteResult []byte `protobuf:"bytes,1,req,name=signed_write_result,json=signedWriteResult" json:"signed_write_result,omitempty"` // YSON-serialized TSignedWriteFragmentResultPtr
}

func (x *TRspWriteTableFragment) Reset() {
	*x = TRspWriteTableFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspWriteTableFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspWriteTableFragment) ProtoMessage() {}

func (x *TRspWriteTableFragment) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspWriteTableFragment.ProtoReflect.Descriptor instead.
func (*TRspWriteTableFragment) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{315}
}

func (x *TRspWriteTableFragment) GetSignedWriteResult() []byte {
	if x != nil {
		return x.SignedWriteResult
	}
	return nil
}

type TReqStartShuffle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account             *string     `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	PartitionCount      *int32      `protobuf:"varint,2,req,name=partition_count,json=partitionCount" json:"partition_count,omitempty"`
	ParentTransactionId *misc.TGuid `protobuf:"bytes,3,req,name=parent_transaction_id,json=parentTransactionId" json:"parent_transaction_id,omitempty"`
	Medium              *string     `protobuf:"bytes,4,opt,name=medium" json:"medium,omitempty"`
	ReplicationFactor   *int32      `protobuf:"varint,5,opt,name=replication_factor,json=replicationFactor" json:"replication_factor,omitempty"`
}

func (x *TReqStartShuffle) Reset() {
	*x = TReqStartShuffle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartShuffle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartShuffle) ProtoMessage() {}

func (x *TReqStartShuffle) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartShuffle.ProtoReflect.Descriptor instead.
func (*TReqStartShuffle) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{316}
}

func (x *TReqStartShuffle) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *TReqStartShuffle) GetPartitionCount() int32 {
	if x != nil && x.PartitionCount != nil {
		return *x.PartitionCount
	}
	return 0
}

func (x *TReqStartShuffle) GetParentTransactionId() *misc.TGuid {
	if x != nil {
		return x.ParentTransactionId
	}
	return nil
}

func (x *TReqStartShuffle) GetMedium() string {
	if x != nil && x.Medium != nil {
		return *x.Medium
	}
	return ""
}

func (x *TReqStartShuffle) GetReplicationFactor() int32 {
	if x != nil && x.ReplicationFactor != nil {
		return *x.ReplicationFactor
	}
	return 0
}

type TRspStartShuffle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShuffleHandle []byte `protobuf:"bytes,1,req,name=shuffle_handle,json=shuffleHandle" json:"shuffle_handle,omitempty"` // YSON-serialized TShuffleHandle
}

func (x *TRspStartShuffle) Reset() {
	*x = TRspStartShuffle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspStartShuffle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspStartShuffle) ProtoMessage() {}

func (x *TRspStartShuffle) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspStartShuffle.ProtoReflect.Descriptor instead.
func (*TRspStartShuffle) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{317}
}

func (x *TRspStartShuffle) GetShuffleHandle() []byte {
	if x != nil {
		return x.ShuffleHandle
	}
	return nil
}

type TReqReadShuffleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShuffleHandle  []byte `protobuf:"bytes,1,req,name=shuffle_handle,json=shuffleHandle" json:"shuffle_handle,omitempty"` // YSON-serialized TShuffleHandle
	ReaderConfig   []byte `protobuf:"bytes,2,opt,name=reader_config,json=readerConfig" json:"reader_config,omitempty"`    // YSON-serialized TTableReaderConfig
	PartitionIndex *int32 `protobuf:"varint,3,req,name=partition_index,json=partitionIndex" json:"partition_index,omitempty"`
}

func (x *TReqReadShuffleData) Reset() {
	*x = TReqReadShuffleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReadShuffleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReadShuffleData) ProtoMessage() {}

func (x *TReqReadShuffleData) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReadShuffleData.ProtoReflect.Descriptor instead.
func (*TReqReadShuffleData) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{318}
}

func (x *TReqReadShuffleData) GetShuffleHandle() []byte {
	if x != nil {
		return x.ShuffleHandle
	}
	return nil
}

func (x *TReqReadShuffleData) GetReaderConfig() []byte {
	if x != nil {
		return x.ReaderConfig
	}
	return nil
}

func (x *TReqReadShuffleData) GetPartitionIndex() int32 {
	if x != nil && x.PartitionIndex != nil {
		return *x.PartitionIndex
	}
	return 0
}

type TRspReadShuffleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspReadShuffleData) Reset() {
	*x = TRspReadShuffleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspReadShuffleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspReadShuffleData) ProtoMessage() {}

func (x *TRspReadShuffleData) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspReadShuffleData.ProtoReflect.Descriptor instead.
func (*TRspReadShuffleData) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{319}
}

type TReqWriteShuffleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShuffleHandle   []byte  `protobuf:"bytes,1,req,name=shuffle_handle,json=shuffleHandle" json:"shuffle_handle,omitempty"` // YSON-serialized TShuffleHandle
	WriterConfig    []byte  `protobuf:"bytes,2,opt,name=writer_config,json=writerConfig" json:"writer_config,omitempty"`    // YSON-serialized TTableWriterConfig
	PartitionColumn *string `protobuf:"bytes,3,req,name=partition_column,json=partitionColumn" json:"partition_column,omitempty"`
}

func (x *TReqWriteShuffleData) Reset() {
	*x = TReqWriteShuffleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqWriteShuffleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqWriteShuffleData) ProtoMessage() {}

func (x *TReqWriteShuffleData) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqWriteShuffleData.ProtoReflect.Descriptor instead.
func (*TReqWriteShuffleData) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{320}
}

func (x *TReqWriteShuffleData) GetShuffleHandle() []byte {
	if x != nil {
		return x.ShuffleHandle
	}
	return nil
}

func (x *TReqWriteShuffleData) GetWriterConfig() []byte {
	if x != nil {
		return x.WriterConfig
	}
	return nil
}

func (x *TReqWriteShuffleData) GetPartitionColumn() string {
	if x != nil && x.PartitionColumn != nil {
		return *x.PartitionColumn
	}
	return ""
}

type TRspWriteShuffleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRspWriteShuffleData) Reset() {
	*x = TRspWriteShuffleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspWriteShuffleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspWriteShuffleData) ProtoMessage() {}

func (x *TRspWriteShuffleData) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspWriteShuffleData.ProtoReflect.Descriptor instead.
func (*TRspWriteShuffleData) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{321}
}

type TRowsetDescriptor_TNameTableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// COMPAT(babenko)
	Type *int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	// COMPAT(babenko)
	LogicalType *int32 `protobuf:"varint,3,opt,name=logical_type,json=logicalType" json:"logical_type,omitempty"`
}

func (x *TRowsetDescriptor_TNameTableEntry) Reset() {
	*x = TRowsetDescriptor_TNameTableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRowsetDescriptor_TNameTableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRowsetDescriptor_TNameTableEntry) ProtoMessage() {}

func (x *TRowsetDescriptor_TNameTableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRowsetDescriptor_TNameTableEntry.ProtoReflect.Descriptor instead.
func (*TRowsetDescriptor_TNameTableEntry) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TRowsetDescriptor_TNameTableEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TRowsetDescriptor_TNameTableEntry) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TRowsetDescriptor_TNameTableEntry) GetLogicalType() int32 {
	if x != nil && x.LogicalType != nil {
		return *x.LogicalType
	}
	return 0
}

type TReqStartTransaction_TReplicateToMasterCellTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellTags []uint32 `protobuf:"varint,1,rep,name=cell_tags,json=cellTags" json:"cell_tags,omitempty"`
}

func (x *TReqStartTransaction_TReplicateToMasterCellTags) Reset() {
	*x = TReqStartTransaction_TReplicateToMasterCellTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartTransaction_TReplicateToMasterCellTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartTransaction_TReplicateToMasterCellTags) ProtoMessage() {}

func (x *TReqStartTransaction_TReplicateToMasterCellTags) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartTransaction_TReplicateToMasterCellTags.ProtoReflect.Descriptor instead.
func (*TReqStartTransaction_TReplicateToMasterCellTags) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TReqStartTransaction_TReplicateToMasterCellTags) GetCellTags() []uint32 {
	if x != nil {
		return x.CellTags
	}
	return nil
}

type TReqMultiLookup_TSubrequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []byte                              `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // YPath
	Columns              []string                            `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	KeepMissingRows      *bool                               `protobuf:"varint,3,opt,name=keep_missing_rows,json=keepMissingRows,def=1" json:"keep_missing_rows,omitempty"`
	EnablePartialResult  *bool                               `protobuf:"varint,4,opt,name=enable_partial_result,json=enablePartialResult,def=0" json:"enable_partial_result,omitempty"`
	UseLookupCache       *bool                               `protobuf:"varint,5,opt,name=use_lookup_cache,json=useLookupCache,def=0" json:"use_lookup_cache,omitempty"`
	RowsetDescriptor     *TRowsetDescriptor                  `protobuf:"bytes,6,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	AttachmentCount      *int32                              `protobuf:"varint,7,req,name=attachment_count,json=attachmentCount" json:"attachment_count,omitempty"`
	VersionedReadOptions *table_client.TVersionedReadOptions `protobuf:"bytes,8,opt,name=versioned_read_options,json=versionedReadOptions" json:"versioned_read_options,omitempty"`
}

// Default values for TReqMultiLookup_TSubrequest fields.
const (
	Default_TReqMultiLookup_TSubrequest_KeepMissingRows     = bool(true)
	Default_TReqMultiLookup_TSubrequest_EnablePartialResult = bool(false)
	Default_TReqMultiLookup_TSubrequest_UseLookupCache      = bool(false)
)

func (x *TReqMultiLookup_TSubrequest) Reset() {
	*x = TReqMultiLookup_TSubrequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMultiLookup_TSubrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMultiLookup_TSubrequest) ProtoMessage() {}

func (x *TReqMultiLookup_TSubrequest) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMultiLookup_TSubrequest.ProtoReflect.Descriptor instead.
func (*TReqMultiLookup_TSubrequest) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{18, 0}
}

func (x *TReqMultiLookup_TSubrequest) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TReqMultiLookup_TSubrequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TReqMultiLookup_TSubrequest) GetKeepMissingRows() bool {
	if x != nil && x.KeepMissingRows != nil {
		return *x.KeepMissingRows
	}
	return Default_TReqMultiLookup_TSubrequest_KeepMissingRows
}

func (x *TReqMultiLookup_TSubrequest) GetEnablePartialResult() bool {
	if x != nil && x.EnablePartialResult != nil {
		return *x.EnablePartialResult
	}
	return Default_TReqMultiLookup_TSubrequest_EnablePartialResult
}

func (x *TReqMultiLookup_TSubrequest) GetUseLookupCache() bool {
	if x != nil && x.UseLookupCache != nil {
		return *x.UseLookupCache
	}
	return Default_TReqMultiLookup_TSubrequest_UseLookupCache
}

func (x *TReqMultiLookup_TSubrequest) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TReqMultiLookup_TSubrequest) GetAttachmentCount() int32 {
	if x != nil && x.AttachmentCount != nil {
		return *x.AttachmentCount
	}
	return 0
}

func (x *TReqMultiLookup_TSubrequest) GetVersionedReadOptions() *table_client.TVersionedReadOptions {
	if x != nil {
		return x.VersionedReadOptions
	}
	return nil
}

type TRspMultiLookup_TSubresponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsetDescriptor      *TRowsetDescriptor `protobuf:"bytes,1,req,name=rowset_descriptor,json=rowsetDescriptor" json:"rowset_descriptor,omitempty"`
	AttachmentCount       *int32             `protobuf:"varint,2,req,name=attachment_count,json=attachmentCount" json:"attachment_count,omitempty"`
	UnavailableKeyIndexes []int32            `protobuf:"varint,3,rep,name=unavailable_key_indexes,json=unavailableKeyIndexes" json:"unavailable_key_indexes,omitempty"`
}

func (x *TRspMultiLookup_TSubresponse) Reset() {
	*x = TRspMultiLookup_TSubresponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspMultiLookup_TSubresponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspMultiLookup_TSubresponse) ProtoMessage() {}

func (x *TRspMultiLookup_TSubresponse) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspMultiLookup_TSubresponse.ProtoReflect.Descriptor instead.
func (*TRspMultiLookup_TSubresponse) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{19, 0}
}

func (x *TRspMultiLookup_TSubresponse) GetRowsetDescriptor() *TRowsetDescriptor {
	if x != nil {
		return x.RowsetDescriptor
	}
	return nil
}

func (x *TRspMultiLookup_TSubresponse) GetAttachmentCount() int32 {
	if x != nil && x.AttachmentCount != nil {
		return *x.AttachmentCount
	}
	return 0
}

func (x *TRspMultiLookup_TSubresponse) GetUnavailableKeyIndexes() []int32 {
	if x != nil {
		return x.UnavailableKeyIndexes
	}
	return nil
}

// The most reasonable way to make a std::optional<std::vector<int>> field.
type TReqRegisterQueueConsumer_TRegistrationPartitions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []int32 `protobuf:"varint,1,rep,name=items" json:"items,omitempty"`
}

func (x *TReqRegisterQueueConsumer_TRegistrationPartitions) Reset() {
	*x = TReqRegisterQueueConsumer_TRegistrationPartitions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqRegisterQueueConsumer_TRegistrationPartitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqRegisterQueueConsumer_TRegistrationPartitions) ProtoMessage() {}

func (x *TReqRegisterQueueConsumer_TRegistrationPartitions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqRegisterQueueConsumer_TRegistrationPartitions.ProtoReflect.Descriptor instead.
func (*TReqRegisterQueueConsumer_TRegistrationPartitions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{32, 0}
}

func (x *TReqRegisterQueueConsumer_TRegistrationPartitions) GetItems() []int32 {
	if x != nil {
		return x.Items
	}
	return nil
}

type TRspListQueueConsumerRegistrations_TQueueConsumerRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePath    []byte                                                                                 `protobuf:"bytes,1,opt,name=queue_path,json=queuePath" json:"queue_path,omitempty"`          // RichYPath
	ConsumerPath []byte                                                                                 `protobuf:"bytes,2,opt,name=consumer_path,json=consumerPath" json:"consumer_path,omitempty"` // RichYPath
	Vital        *bool                                                                                  `protobuf:"varint,3,opt,name=vital" json:"vital,omitempty"`
	Partitions   *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions `protobuf:"bytes,4,opt,name=partitions" json:"partitions,omitempty"`
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) Reset() {
	*x = TRspListQueueConsumerRegistrations_TQueueConsumerRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) ProtoMessage() {}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListQueueConsumerRegistrations_TQueueConsumerRegistration.ProtoReflect.Descriptor instead.
func (*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{37, 0}
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) GetQueuePath() []byte {
	if x != nil {
		return x.QueuePath
	}
	return nil
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) GetConsumerPath() []byte {
	if x != nil {
		return x.ConsumerPath
	}
	return nil
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) GetVital() bool {
	if x != nil && x.Vital != nil {
		return *x.Vital
	}
	return false
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration) GetPartitions() *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions {
	if x != nil {
		return x.Partitions
	}
	return nil
}

// The most reasonable way to make a std::optional<std::vector<int>> field.
type TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []int32 `protobuf:"varint,1,rep,name=items" json:"items,omitempty"`
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions) Reset() {
	*x = TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions) ProtoMessage() {
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions.ProtoReflect.Descriptor instead.
func (*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{37, 0, 0}
}

func (x *TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions) GetItems() []int32 {
	if x != nil {
		return x.Items
	}
	return nil
}

type TRspGetTabletInfos_TTabletInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRowCount           *int64                                         `protobuf:"varint,1,req,name=total_row_count,json=totalRowCount" json:"total_row_count,omitempty"`
	TrimmedRowCount         *int64                                         `protobuf:"varint,2,req,name=trimmed_row_count,json=trimmedRowCount" json:"trimmed_row_count,omitempty"`
	DelayedLocklessRowCount *int64                                         `protobuf:"varint,7,opt,name=delayed_lockless_row_count,json=delayedLocklessRowCount" json:"delayed_lockless_row_count,omitempty"`
	BarrierTimestamp        *uint64                                        `protobuf:"varint,3,opt,name=barrier_timestamp,json=barrierTimestamp" json:"barrier_timestamp,omitempty"`
	LastWriteTimestamp      *uint64                                        `protobuf:"varint,4,opt,name=last_write_timestamp,json=lastWriteTimestamp" json:"last_write_timestamp,omitempty"`
	Replicas                []*TRspGetTabletInfos_TTabletInfo_TReplicaInfo `protobuf:"bytes,5,rep,name=replicas" json:"replicas,omitempty"`
	TabletErrors            []*misc.TError                                 `protobuf:"bytes,6,rep,name=tablet_errors,json=tabletErrors" json:"tablet_errors,omitempty"`
}

func (x *TRspGetTabletInfos_TTabletInfo) Reset() {
	*x = TRspGetTabletInfos_TTabletInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTabletInfos_TTabletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTabletInfos_TTabletInfo) ProtoMessage() {}

func (x *TRspGetTabletInfos_TTabletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTabletInfos_TTabletInfo.ProtoReflect.Descriptor instead.
func (*TRspGetTabletInfos_TTabletInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{50, 0}
}

func (x *TRspGetTabletInfos_TTabletInfo) GetTotalRowCount() int64 {
	if x != nil && x.TotalRowCount != nil {
		return *x.TotalRowCount
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo) GetTrimmedRowCount() int64 {
	if x != nil && x.TrimmedRowCount != nil {
		return *x.TrimmedRowCount
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo) GetDelayedLocklessRowCount() int64 {
	if x != nil && x.DelayedLocklessRowCount != nil {
		return *x.DelayedLocklessRowCount
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo) GetBarrierTimestamp() uint64 {
	if x != nil && x.BarrierTimestamp != nil {
		return *x.BarrierTimestamp
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo) GetLastWriteTimestamp() uint64 {
	if x != nil && x.LastWriteTimestamp != nil {
		return *x.LastWriteTimestamp
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo) GetReplicas() []*TRspGetTabletInfos_TTabletInfo_TReplicaInfo {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *TRspGetTabletInfos_TTabletInfo) GetTabletErrors() []*misc.TError {
	if x != nil {
		return x.TabletErrors
	}
	return nil
}

type TRspGetTabletInfos_TTabletInfo_TReplicaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId                    *misc.TGuid  `protobuf:"bytes,1,req,name=replica_id,json=replicaId" json:"replica_id,omitempty"`
	LastReplicationTimestamp     *uint64      `protobuf:"varint,2,req,name=last_replication_timestamp,json=lastReplicationTimestamp" json:"last_replication_timestamp,omitempty"`
	Mode                         *int32       `protobuf:"varint,3,req,name=mode" json:"mode,omitempty"` // ETableReplicaMode
	CurrentReplicationRowIndex   *int64       `protobuf:"varint,4,req,name=current_replication_row_index,json=currentReplicationRowIndex" json:"current_replication_row_index,omitempty"`
	CommittedReplicationRowIndex *int64       `protobuf:"varint,6,req,name=committed_replication_row_index,json=committedReplicationRowIndex" json:"committed_replication_row_index,omitempty"`
	ReplicationError             *misc.TError `protobuf:"bytes,5,opt,name=replication_error,json=replicationError" json:"replication_error,omitempty"`
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) Reset() {
	*x = TRspGetTabletInfos_TTabletInfo_TReplicaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTabletInfos_TTabletInfo_TReplicaInfo) ProtoMessage() {}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTabletInfos_TTabletInfo_TReplicaInfo.ProtoReflect.Descriptor instead.
func (*TRspGetTabletInfos_TTabletInfo_TReplicaInfo) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{50, 0, 0}
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) GetReplicaId() *misc.TGuid {
	if x != nil {
		return x.ReplicaId
	}
	return nil
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) GetLastReplicationTimestamp() uint64 {
	if x != nil && x.LastReplicationTimestamp != nil {
		return *x.LastReplicationTimestamp
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) GetMode() int32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) GetCurrentReplicationRowIndex() int64 {
	if x != nil && x.CurrentReplicationRowIndex != nil {
		return *x.CurrentReplicationRowIndex
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) GetCommittedReplicationRowIndex() int64 {
	if x != nil && x.CommittedReplicationRowIndex != nil {
		return *x.CommittedReplicationRowIndex
	}
	return 0
}

func (x *TRspGetTabletInfos_TTabletInfo_TReplicaInfo) GetReplicationError() *misc.TError {
	if x != nil {
		return x.ReplicationError
	}
	return nil
}

type TRspGetTabletErrors_TErrorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*misc.TError `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
}

func (x *TRspGetTabletErrors_TErrorList) Reset() {
	*x = TRspGetTabletErrors_TErrorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspGetTabletErrors_TErrorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspGetTabletErrors_TErrorList) ProtoMessage() {}

func (x *TRspGetTabletErrors_TErrorList) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspGetTabletErrors_TErrorList.ProtoReflect.Descriptor instead.
func (*TRspGetTabletErrors_TErrorList) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{52, 0}
}

func (x *TRspGetTabletErrors_TErrorList) GetErrors() []*misc.TError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type TRspRemoveMaintenance_TMaintenanceCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counts map[int32]int32 `protobuf:"bytes,1,rep,name=counts" json:"counts,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Key: EMaintenanceType
}

func (x *TRspRemoveMaintenance_TMaintenanceCounts) Reset() {
	*x = TRspRemoveMaintenance_TMaintenanceCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspRemoveMaintenance_TMaintenanceCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspRemoveMaintenance_TMaintenanceCounts) ProtoMessage() {}

func (x *TRspRemoveMaintenance_TMaintenanceCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspRemoveMaintenance_TMaintenanceCounts.ProtoReflect.Descriptor instead.
func (*TRspRemoveMaintenance_TMaintenanceCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{84, 1}
}

func (x *TRspRemoveMaintenance_TMaintenanceCounts) GetCounts() map[int32]int32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

type TPrerequisiteOptions_TTransactionPrerequisite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId *misc.TGuid `protobuf:"bytes,1,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (x *TPrerequisiteOptions_TTransactionPrerequisite) Reset() {
	*x = TPrerequisiteOptions_TTransactionPrerequisite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPrerequisiteOptions_TTransactionPrerequisite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPrerequisiteOptions_TTransactionPrerequisite) ProtoMessage() {}

func (x *TPrerequisiteOptions_TTransactionPrerequisite) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPrerequisiteOptions_TTransactionPrerequisite.ProtoReflect.Descriptor instead.
func (*TPrerequisiteOptions_TTransactionPrerequisite) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{86, 0}
}

func (x *TPrerequisiteOptions_TTransactionPrerequisite) GetTransactionId() *misc.TGuid {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

type TPrerequisiteOptions_TRevisionPrerequisite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     []byte  `protobuf:"bytes,2,req,name=path" json:"path,omitempty"` // YPath
	Revision *uint64 `protobuf:"varint,3,req,name=revision" json:"revision,omitempty"`
}

func (x *TPrerequisiteOptions_TRevisionPrerequisite) Reset() {
	*x = TPrerequisiteOptions_TRevisionPrerequisite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPrerequisiteOptions_TRevisionPrerequisite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPrerequisiteOptions_TRevisionPrerequisite) ProtoMessage() {}

func (x *TPrerequisiteOptions_TRevisionPrerequisite) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPrerequisiteOptions_TRevisionPrerequisite.ProtoReflect.Descriptor instead.
func (*TPrerequisiteOptions_TRevisionPrerequisite) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{86, 1}
}

func (x *TPrerequisiteOptions_TRevisionPrerequisite) GetPath() []byte {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TPrerequisiteOptions_TRevisionPrerequisite) GetRevision() uint64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

type TBackupManifest_TClusterManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster        *string                 `protobuf:"bytes,1,req,name=cluster" json:"cluster,omitempty"`
	TableManifests []*TTableBackupManifest `protobuf:"bytes,2,rep,name=table_manifests,json=tableManifests" json:"table_manifests,omitempty"`
}

func (x *TBackupManifest_TClusterManifest) Reset() {
	*x = TBackupManifest_TClusterManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBackupManifest_TClusterManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBackupManifest_TClusterManifest) ProtoMessage() {}

func (x *TBackupManifest_TClusterManifest) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBackupManifest_TClusterManifest.ProtoReflect.Descriptor instead.
func (*TBackupManifest_TClusterManifest) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{113, 0}
}

func (x *TBackupManifest_TClusterManifest) GetCluster() string {
	if x != nil && x.Cluster != nil {
		return *x.Cluster
	}
	return ""
}

func (x *TBackupManifest_TClusterManifest) GetTableManifests() []*TTableBackupManifest {
	if x != nil {
		return x.TableManifests
	}
	return nil
}

type TReqMultisetAttributesNode_TSubrequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *string `protobuf:"bytes,1,req,name=attribute" json:"attribute,omitempty"`
	Value     []byte  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"` // YSON
}

func (x *TReqMultisetAttributesNode_TSubrequest) Reset() {
	*x = TReqMultisetAttributesNode_TSubrequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqMultisetAttributesNode_TSubrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqMultisetAttributesNode_TSubrequest) ProtoMessage() {}

func (x *TReqMultisetAttributesNode_TSubrequest) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqMultisetAttributesNode_TSubrequest.ProtoReflect.Descriptor instead.
func (*TReqMultisetAttributesNode_TSubrequest) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{124, 0}
}

func (x *TReqMultisetAttributesNode_TSubrequest) GetAttribute() string {
	if x != nil && x.Attribute != nil {
		return *x.Attribute
	}
	return ""
}

func (x *TReqMultisetAttributesNode_TSubrequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TReqConcatenateNodes_TFetcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeRpcTimeout *uint64 `protobuf:"varint,1,opt,name=node_rpc_timeout,json=nodeRpcTimeout,def=30000000" json:"node_rpc_timeout,omitempty"` // TDuration, 30 seconds by default
}

// Default values for TReqConcatenateNodes_TFetcher fields.
const (
	Default_TReqConcatenateNodes_TFetcher_NodeRpcTimeout = uint64(30000000)
)

func (x *TReqConcatenateNodes_TFetcher) Reset() {
	*x = TReqConcatenateNodes_TFetcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqConcatenateNodes_TFetcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqConcatenateNodes_TFetcher) ProtoMessage() {}

func (x *TReqConcatenateNodes_TFetcher) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqConcatenateNodes_TFetcher.ProtoReflect.Descriptor instead.
func (*TReqConcatenateNodes_TFetcher) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{136, 0}
}

func (x *TReqConcatenateNodes_TFetcher) GetNodeRpcTimeout() uint64 {
	if x != nil && x.NodeRpcTimeout != nil {
		return *x.NodeRpcTimeout
	}
	return Default_TReqConcatenateNodes_TFetcher_NodeRpcTimeout
}

type TReqPartitionTables_TChunkSliceFetcherConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSlicesPerFetch *int32 `protobuf:"varint,1,opt,name=max_slices_per_fetch,json=maxSlicesPerFetch" json:"max_slices_per_fetch,omitempty"`
}

func (x *TReqPartitionTables_TChunkSliceFetcherConfig) Reset() {
	*x = TReqPartitionTables_TChunkSliceFetcherConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqPartitionTables_TChunkSliceFetcherConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqPartitionTables_TChunkSliceFetcherConfig) ProtoMessage() {}

func (x *TReqPartitionTables_TChunkSliceFetcherConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqPartitionTables_TChunkSliceFetcherConfig.ProtoReflect.Descriptor instead.
func (*TReqPartitionTables_TChunkSliceFetcherConfig) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{181, 0}
}

func (x *TReqPartitionTables_TChunkSliceFetcherConfig) GetMaxSlicesPerFetch() int32 {
	if x != nil && x.MaxSlicesPerFetch != nil {
		return *x.MaxSlicesPerFetch
	}
	return 0
}

type TMultiTablePartition_TStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkCount *int64 `protobuf:"varint,1,opt,name=chunk_count,json=chunkCount" json:"chunk_count,omitempty"`
	DataWeight *int64 `protobuf:"varint,2,opt,name=data_weight,json=dataWeight" json:"data_weight,omitempty"`
	RowCount   *int64 `protobuf:"varint,3,opt,name=row_count,json=rowCount" json:"row_count,omitempty"`
}

func (x *TMultiTablePartition_TStatistics) Reset() {
	*x = TMultiTablePartition_TStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMultiTablePartition_TStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMultiTablePartition_TStatistics) ProtoMessage() {}

func (x *TMultiTablePartition_TStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMultiTablePartition_TStatistics.ProtoReflect.Descriptor instead.
func (*TMultiTablePartition_TStatistics) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{182, 0}
}

func (x *TMultiTablePartition_TStatistics) GetChunkCount() int64 {
	if x != nil && x.ChunkCount != nil {
		return *x.ChunkCount
	}
	return 0
}

func (x *TMultiTablePartition_TStatistics) GetDataWeight() int64 {
	if x != nil && x.DataWeight != nil {
		return *x.DataWeight
	}
	return 0
}

func (x *TMultiTablePartition_TStatistics) GetRowCount() int64 {
	if x != nil && x.RowCount != nil {
		return *x.RowCount
	}
	return 0
}

type TReqCheckPermission_TColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *TReqCheckPermission_TColumns) Reset() {
	*x = TReqCheckPermission_TColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqCheckPermission_TColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqCheckPermission_TColumns) ProtoMessage() {}

func (x *TReqCheckPermission_TColumns) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqCheckPermission_TColumns.ProtoReflect.Descriptor instead.
func (*TReqCheckPermission_TColumns) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{255, 0}
}

func (x *TReqCheckPermission_TColumns) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type TRspCheckPermission_TColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TCheckPermissionResult `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *TRspCheckPermission_TColumns) Reset() {
	*x = TRspCheckPermission_TColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRspCheckPermission_TColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRspCheckPermission_TColumns) ProtoMessage() {}

func (x *TRspCheckPermission_TColumns) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRspCheckPermission_TColumns.ProtoReflect.Descriptor instead.
func (*TRspCheckPermission_TColumns) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{256, 0}
}

func (x *TRspCheckPermission_TColumns) GetItems() []*TCheckPermissionResult {
	if x != nil {
		return x.Items
	}
	return nil
}

type TOperation_TStrings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *TOperation_TStrings) Reset() {
	*x = TOperation_TStrings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TOperation_TStrings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TOperation_TStrings) ProtoMessage() {}

func (x *TOperation_TStrings) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TOperation_TStrings.ProtoReflect.Descriptor instead.
func (*TOperation_TStrings) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{283, 0}
}

func (x *TOperation_TStrings) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type TListOperationsResult_TPoolCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TListOperationsResult_TPoolCounts_TPoolCount `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *TListOperationsResult_TPoolCounts) Reset() {
	*x = TListOperationsResult_TPoolCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TPoolCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TPoolCounts) ProtoMessage() {}

func (x *TListOperationsResult_TPoolCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TPoolCounts.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TPoolCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 0}
}

func (x *TListOperationsResult_TPoolCounts) GetEntries() []*TListOperationsResult_TPoolCounts_TPoolCount {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListOperationsResult_TUserCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TListOperationsResult_TUserCounts_TUserCount `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *TListOperationsResult_TUserCounts) Reset() {
	*x = TListOperationsResult_TUserCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TUserCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TUserCounts) ProtoMessage() {}

func (x *TListOperationsResult_TUserCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TUserCounts.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TUserCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 1}
}

func (x *TListOperationsResult_TUserCounts) GetEntries() []*TListOperationsResult_TUserCounts_TUserCount {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListOperationsResult_TOperationStateCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TListOperationsResult_TOperationStateCounts_TOperationStateCount `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *TListOperationsResult_TOperationStateCounts) Reset() {
	*x = TListOperationsResult_TOperationStateCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TOperationStateCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TOperationStateCounts) ProtoMessage() {}

func (x *TListOperationsResult_TOperationStateCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TOperationStateCounts.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TOperationStateCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 2}
}

func (x *TListOperationsResult_TOperationStateCounts) GetEntries() []*TListOperationsResult_TOperationStateCounts_TOperationStateCount {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListOperationsResult_TOperationTypeCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TListOperationsResult_TOperationTypeCounts_TOperationTypeCount `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *TListOperationsResult_TOperationTypeCounts) Reset() {
	*x = TListOperationsResult_TOperationTypeCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TOperationTypeCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TOperationTypeCounts) ProtoMessage() {}

func (x *TListOperationsResult_TOperationTypeCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TOperationTypeCounts.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TOperationTypeCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 3}
}

func (x *TListOperationsResult_TOperationTypeCounts) GetEntries() []*TListOperationsResult_TOperationTypeCounts_TOperationTypeCount {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListOperationsResult_TPoolTreeCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]int64 `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (x *TListOperationsResult_TPoolTreeCounts) Reset() {
	*x = TListOperationsResult_TPoolTreeCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TPoolTreeCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TPoolTreeCounts) ProtoMessage() {}

func (x *TListOperationsResult_TPoolTreeCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TPoolTreeCounts.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TPoolTreeCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 4}
}

func (x *TListOperationsResult_TPoolTreeCounts) GetEntries() map[string]int64 {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListOperationsResult_TPoolCounts_TPoolCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool  *string `protobuf:"bytes,1,req,name=pool" json:"pool,omitempty"`
	Count *int64  `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *TListOperationsResult_TPoolCounts_TPoolCount) Reset() {
	*x = TListOperationsResult_TPoolCounts_TPoolCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TPoolCounts_TPoolCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TPoolCounts_TPoolCount) ProtoMessage() {}

func (x *TListOperationsResult_TPoolCounts_TPoolCount) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TPoolCounts_TPoolCount.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TPoolCounts_TPoolCount) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 0, 0}
}

func (x *TListOperationsResult_TPoolCounts_TPoolCount) GetPool() string {
	if x != nil && x.Pool != nil {
		return *x.Pool
	}
	return ""
}

func (x *TListOperationsResult_TPoolCounts_TPoolCount) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type TListOperationsResult_TUserCounts_TUserCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *string `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	Count *int64  `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *TListOperationsResult_TUserCounts_TUserCount) Reset() {
	*x = TListOperationsResult_TUserCounts_TUserCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TUserCounts_TUserCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TUserCounts_TUserCount) ProtoMessage() {}

func (x *TListOperationsResult_TUserCounts_TUserCount) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TUserCounts_TUserCount.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TUserCounts_TUserCount) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 1, 0}
}

func (x *TListOperationsResult_TUserCounts_TUserCount) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TListOperationsResult_TUserCounts_TUserCount) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type TListOperationsResult_TOperationStateCounts_TOperationStateCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *EOperationState `protobuf:"varint,1,req,name=state,enum=NYT.NApi.NRpcProxy.NProto.EOperationState" json:"state,omitempty"`
	Count *int64           `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *TListOperationsResult_TOperationStateCounts_TOperationStateCount) Reset() {
	*x = TListOperationsResult_TOperationStateCounts_TOperationStateCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TOperationStateCounts_TOperationStateCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TOperationStateCounts_TOperationStateCount) ProtoMessage() {}

func (x *TListOperationsResult_TOperationStateCounts_TOperationStateCount) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TOperationStateCounts_TOperationStateCount.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TOperationStateCounts_TOperationStateCount) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 2, 0}
}

func (x *TListOperationsResult_TOperationStateCounts_TOperationStateCount) GetState() EOperationState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EOperationState_OS_UNKNOWN
}

func (x *TListOperationsResult_TOperationStateCounts_TOperationStateCount) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type TListOperationsResult_TOperationTypeCounts_TOperationTypeCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EOperationType `protobuf:"varint,1,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.EOperationType" json:"type,omitempty"`
	Count *int64          `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) Reset() {
	*x = TListOperationsResult_TOperationTypeCounts_TOperationTypeCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) ProtoMessage() {}

func (x *TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListOperationsResult_TOperationTypeCounts_TOperationTypeCount.ProtoReflect.Descriptor instead.
func (*TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{284, 3, 0}
}

func (x *TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) GetType() EOperationType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EOperationType_OT_UNKNOWN
}

func (x *TListOperationsResult_TOperationTypeCounts_TOperationTypeCount) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type TListJobsStatistics_TJobStateCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TListJobsStatistics_TJobStateCounts_TJobStateCount `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *TListJobsStatistics_TJobStateCounts) Reset() {
	*x = TListJobsStatistics_TJobStateCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListJobsStatistics_TJobStateCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListJobsStatistics_TJobStateCounts) ProtoMessage() {}

func (x *TListJobsStatistics_TJobStateCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListJobsStatistics_TJobStateCounts.ProtoReflect.Descriptor instead.
func (*TListJobsStatistics_TJobStateCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{286, 0}
}

func (x *TListJobsStatistics_TJobStateCounts) GetEntries() []*TListJobsStatistics_TJobStateCounts_TJobStateCount {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListJobsStatistics_TJobTypeCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TListJobsStatistics_TJobTypeCounts_TJobTypeCount `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *TListJobsStatistics_TJobTypeCounts) Reset() {
	*x = TListJobsStatistics_TJobTypeCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListJobsStatistics_TJobTypeCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListJobsStatistics_TJobTypeCounts) ProtoMessage() {}

func (x *TListJobsStatistics_TJobTypeCounts) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListJobsStatistics_TJobTypeCounts.ProtoReflect.Descriptor instead.
func (*TListJobsStatistics_TJobTypeCounts) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{286, 1}
}

func (x *TListJobsStatistics_TJobTypeCounts) GetEntries() []*TListJobsStatistics_TJobTypeCounts_TJobTypeCount {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TListJobsStatistics_TJobStateCounts_TJobStateCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *EJobState `protobuf:"varint,1,req,name=state,enum=NYT.NApi.NRpcProxy.NProto.EJobState" json:"state,omitempty"`
	Count *int64     `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *TListJobsStatistics_TJobStateCounts_TJobStateCount) Reset() {
	*x = TListJobsStatistics_TJobStateCounts_TJobStateCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListJobsStatistics_TJobStateCounts_TJobStateCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListJobsStatistics_TJobStateCounts_TJobStateCount) ProtoMessage() {}

func (x *TListJobsStatistics_TJobStateCounts_TJobStateCount) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListJobsStatistics_TJobStateCounts_TJobStateCount.ProtoReflect.Descriptor instead.
func (*TListJobsStatistics_TJobStateCounts_TJobStateCount) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{286, 0, 0}
}

func (x *TListJobsStatistics_TJobStateCounts_TJobStateCount) GetState() EJobState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EJobState_JS_UNKNOWN
}

func (x *TListJobsStatistics_TJobStateCounts_TJobStateCount) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type TListJobsStatistics_TJobTypeCounts_TJobTypeCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EJobType `protobuf:"varint,1,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.EJobType" json:"type,omitempty"`
	Count *int64    `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *TListJobsStatistics_TJobTypeCounts_TJobTypeCount) Reset() {
	*x = TListJobsStatistics_TJobTypeCounts_TJobTypeCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListJobsStatistics_TJobTypeCounts_TJobTypeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListJobsStatistics_TJobTypeCounts_TJobTypeCount) ProtoMessage() {}

func (x *TListJobsStatistics_TJobTypeCounts_TJobTypeCount) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListJobsStatistics_TJobTypeCounts_TJobTypeCount.ProtoReflect.Descriptor instead.
func (*TListJobsStatistics_TJobTypeCounts_TJobTypeCount) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{286, 1, 0}
}

func (x *TListJobsStatistics_TJobTypeCounts_TJobTypeCount) GetType() EJobType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EJobType_JT_UNKNOWN
}

func (x *TListJobsStatistics_TJobTypeCounts_TJobTypeCount) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type TReqStartQuery_TQueryFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string       `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Content *string       `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	Type    *EContentType `protobuf:"varint,3,req,name=type,enum=NYT.NApi.NRpcProxy.NProto.EContentType" json:"type,omitempty"`
}

func (x *TReqStartQuery_TQueryFile) Reset() {
	*x = TReqStartQuery_TQueryFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartQuery_TQueryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartQuery_TQueryFile) ProtoMessage() {}

func (x *TReqStartQuery_TQueryFile) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartQuery_TQueryFile.ProtoReflect.Descriptor instead.
func (*TReqStartQuery_TQueryFile) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{293, 0}
}

func (x *TReqStartQuery_TQueryFile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TReqStartQuery_TQueryFile) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *TReqStartQuery_TQueryFile) GetType() EContentType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EContentType_CT_RAW_INLINE_DATA
}

type TReqStartQuery_TAccessControlObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *TReqStartQuery_TAccessControlObjects) Reset() {
	*x = TReqStartQuery_TAccessControlObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqStartQuery_TAccessControlObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqStartQuery_TAccessControlObjects) ProtoMessage() {}

func (x *TReqStartQuery_TAccessControlObjects) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqStartQuery_TAccessControlObjects.ProtoReflect.Descriptor instead.
func (*TReqStartQuery_TAccessControlObjects) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{293, 1}
}

func (x *TReqStartQuery_TAccessControlObjects) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type TReqReadQueryResult_TColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *TReqReadQueryResult_TColumns) Reset() {
	*x = TReqReadQueryResult_TColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqReadQueryResult_TColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqReadQueryResult_TColumns) ProtoMessage() {}

func (x *TReqReadQueryResult_TColumns) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqReadQueryResult_TColumns.ProtoReflect.Descriptor instead.
func (*TReqReadQueryResult_TColumns) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{299, 0}
}

func (x *TReqReadQueryResult_TColumns) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type TReqAlterQuery_TAccessControlObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *TReqAlterQuery_TAccessControlObjects) Reset() {
	*x = TReqAlterQuery_TAccessControlObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReqAlterQuery_TAccessControlObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReqAlterQuery_TAccessControlObjects) ProtoMessage() {}

func (x *TReqAlterQuery_TAccessControlObjects) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReqAlterQuery_TAccessControlObjects.ProtoReflect.Descriptor instead.
func (*TReqAlterQuery_TAccessControlObjects) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP(), []int{306, 0}
}

func (x *TReqAlterQuery_TAccessControlObjects) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto protoreflect.FileDescriptor

var file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x79, 0x74, 0x2f, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x79, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x69, 0x73, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x6c,
	0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x79, 0x74, 0x72, 0x65, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x79, 0x74, 0x72, 0x65, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x79, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3c, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x31, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x79, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x14, 0x54, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x22, 0x85, 0x04, 0x0a, 0x11, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x13, 0x77, 0x69, 0x72, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x11, 0x77, 0x69, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0b, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x6f, 0x77, 0x73,
	0x65, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x3a, 0x0e, 0x52, 0x4b, 0x5f, 0x55, 0x4e, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x52, 0x0a, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x59, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x0a, 0x52, 0x46, 0x5f, 0x59, 0x54, 0x5f, 0x57, 0x49, 0x52, 0x45, 0x52,
	0x0c, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x6a, 0x0a,
	0x12, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x5c, 0x0a, 0x0f, 0x54, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x54, 0x52, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xf2, 0x07, 0x0a, 0x14, 0x54, 0x52,
	0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x6f, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x06, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x69, 0x63, 0x6b, 0x79, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x2b, 0x0a, 0x0e, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0d, 0x70,
	0x69, 0x6e, 0x67, 0x41, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x09,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x41, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x3a, 0x06, 0x41, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x52, 0x09,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x64, 0x75, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x44, 0x75, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x3a, 0x06, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x52, 0x0a, 0x64,
	0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x53,
	0x0a, 0x1c, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x8c, 0x01, 0x0a,
	0x1d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x19, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x1a, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x22, 0x9d,
	0x01, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x82,
	0x01, 0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x0e, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0d,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x4a, 0x04, 0x08,
	0x06, 0x10, 0x07, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xed, 0x02, 0x0a, 0x15, 0x54,
	0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x58,
	0x0a, 0x1f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x1c, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10,
	0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x54,
	0x52, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x48, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4d, 0x61, 0x70, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x50, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x46, 0x6c, 0x75, 0x73,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x14,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x12, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x73, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x71, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4a, 0x04, 0x08, 0x06,
	0x10, 0x07, 0x22, 0x16, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x06, 0x0a, 0x0e, 0x54,
	0x52, 0x65, 0x71, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x13, 0x34, 0x36, 0x31, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x38,
	0x34, 0x32, 0x37, 0x33, 0x38, 0x37, 0x36, 0x34, 0x39, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x13, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x12, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74,
	0x72, 0x75, 0x65, 0x52, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x52, 0x6f, 0x77, 0x73, 0x12, 0x39, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2f, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x5d, 0x0a, 0x13, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x59, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x5a, 0x0a, 0x11, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x18, 0xc8, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x64, 0x0a, 0x16, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4a, 0x04, 0x08,
	0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0xa5, 0x01, 0x0a, 0x0e, 0x54, 0x52,
	0x73, 0x70, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x5a, 0x0a, 0x11,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0xc8, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x17, 0x75, 0x6e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x75, 0x6e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x22, 0x89, 0x02, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x31, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x31, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x0a, 0x31, 0x38, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x74, 0x6c, 0x12, 0x2c, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x0a, 0x31, 0x38, 0x30, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x30, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x54, 0x74, 0x6c,
	0x12, 0x3b, 0x0a, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x14, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xed, 0x05,
	0x0a, 0x17, 0x54, 0x52, 0x65, 0x71, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x13, 0x34, 0x36, 0x31, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x38, 0x34, 0x32, 0x37, 0x33,
	0x38, 0x37, 0x36, 0x34, 0x39, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x6b, 0x65,
	0x65, 0x70, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0f, 0x6b, 0x65, 0x65,
	0x70, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x56, 0x0a, 0x10,
	0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2f, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x5d, 0x0a, 0x13, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x59, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x5a, 0x0a, 0x11, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x18, 0xc8, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xae, 0x01,
	0x0a, 0x17, 0x54, 0x52, 0x73, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x5a, 0x0a, 0x11, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0xc8,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x17, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0xc9, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0xb5,
	0x07, 0x0a, 0x0f, 0x54, 0x52, 0x65, 0x71, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x12, 0x58, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x2e, 0x54, 0x53, 0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x13, 0x34, 0x36, 0x31, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x38, 0x34, 0x32, 0x37, 0x33, 0x38,
	0x37, 0x36, 0x34, 0x39, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x32, 0x0a, 0x13, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x12, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x5d, 0x0a, 0x13, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x11, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x59, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x1a, 0xc5,
	0x03, 0x0a, 0x0b, 0x54, 0x53, 0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x11,
	0x6b, 0x65, 0x65, 0x70, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0f, 0x6b,
	0x65, 0x65, 0x70, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x39,
	0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x64, 0x0a, 0x16, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x14, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x5b, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73,
	0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x2e, 0x54, 0x53, 0x75,
	0x62, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0xcc, 0x01, 0x0a, 0x0c, 0x54, 0x53, 0x75, 0x62,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x17, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x15, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0xfc, 0x04, 0x0a, 0x10, 0x54, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x6f, 0x77, 0x73, 0x57, 0x72,
	0x69, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x77, 0x61, 0x69, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a,
	0x10, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x0f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x9e, 0x0b, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x13, 0x34, 0x36, 0x31, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x38, 0x34, 0x32, 0x37,
	0x33, 0x38, 0x37, 0x36, 0x34, 0x39, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x32, 0x0a, 0x13, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x12, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x72,
	0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x6f, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x78, 0x70,
	0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x66,
	0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x66, 0x61, 0x69, 0x6c, 0x4f, 0x6e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x64, 0x66, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,
	0x75, 0x64, 0x66, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x31, 0x0a, 0x15, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x77,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x75, 0x73, 0x65,
	0x5f, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x19, 0x75, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x28, 0x0a, 0x0e,
	0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x12, 0x64, 0x0a, 0x16, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x14, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x3a, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x53, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x21, 0x73,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4a, 0x04, 0x08, 0x18, 0x10, 0x19, 0x22, 0xba, 0x01, 0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x5a, 0x0a, 0x11, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0xc8,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x18, 0x54, 0x52, 0x65, 0x71, 0x41, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x6c, 0x64,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x54, 0x52, 0x73, 0x70, 0x41, 0x64, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x22, 0x9e, 0x03, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x50, 0x75, 0x73, 0x68, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x5a, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0xc8, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x22, 0x75, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x50, 0x75, 0x73, 0x68, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x54, 0x52,
	0x6f, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x52, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x36,
	0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x65, 0x72, 0x52,
	0x6f, 0x77, 0x48, 0x69, 0x6e, 0x74, 0x22, 0xf9, 0x02, 0x0a, 0x0d, 0x54, 0x52, 0x65, 0x71, 0x50,
	0x75, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x64, 0x0a, 0x16, 0x72, 0x6f, 0x77, 0x5f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x72, 0x6f, 0x77, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41,
	0x0a, 0x1a, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x16, 0x75, 0x73, 0x65, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x12,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x54, 0x52, 0x73, 0x70, 0x50, 0x75, 0x6c, 0x6c, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0xe3, 0x02, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x50, 0x75, 0x6c, 0x6c, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x64, 0x0a, 0x16, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52,
	0x6f, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x13, 0x72, 0x6f, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x54, 0x52, 0x73,
	0x70, 0x50, 0x75, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x94, 0x02, 0x0a, 0x19, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x6c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x2e, 0x54, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2f, 0x0a, 0x17, 0x54, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x54, 0x52, 0x73, 0x70, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x1b, 0x54, 0x52, 0x65, 0x71, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1d, 0x0a, 0x1b, 0x54, 0x52, 0x73, 0x70, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x22, 0x54, 0x52, 0x65, 0x71, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68,
	0x22, 0xe1, 0x03, 0x0a, 0x22, 0x54, 0x52, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x7e, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xba, 0x02, 0x0a, 0x1a, 0x54, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x69, 0x74, 0x61, 0x6c,
	0x12, 0x90, 0x01, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x70, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x2f, 0x0a, 0x17, 0x54, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x1e, 0x54, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x1e, 0x54, 0x52, 0x73, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x54,
	0x52, 0x73, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x04,
	0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x13, 0x34, 0x36, 0x31,
	0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x38, 0x34, 0x32, 0x37, 0x33, 0x38, 0x37, 0x36, 0x34, 0x39,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x6f, 0x77, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x75,
	0x62, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e,
	0x12, 0x37, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x64, 0x66,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x75, 0x64, 0x66, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x13,
	0x6e, 0x65, 0x77, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0e,
	0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x53, 0x75, 0x62, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x28, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x14,
	0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0xcc, 0x03, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x13, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x14, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x73, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2f, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x11,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x50, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x60, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x68, 0x61, 0x6f, 0x73, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x13,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x72, 0x0a, 0x1d,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x1a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x22, 0x9d, 0x03, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x6f, 0x77,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x60, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x68, 0x61, 0x6f, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x13, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x6e, 0x0a, 0x1b, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x18, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x09,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x22, 0xe9, 0x01, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x3f, 0x0a, 0x1c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x5a, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x4b, 0x0a, 0x15,
	0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x73, 0x22, 0x7d, 0x0a, 0x12, 0x54, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xe6, 0x06, 0x0a, 0x12, 0x54, 0x52, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x53, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e,
	0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x73, 0x1a, 0xfa, 0x05, 0x0a, 0x0b, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x72, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x6d, 0x6d, 0x65, 0x64,
	0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x62, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x1a, 0xdd, 0x02, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x1a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x3f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x3f, 0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x9f, 0x03, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x5e, 0x0a, 0x0d,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0b,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x73,
	0x12, 0x68, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x54, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0xd4, 0x05, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x39, 0x0a, 0x19, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x16, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x65, 0x0a, 0x16, 0x72, 0x6f, 0x77,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x72, 0x6f, 0x77, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x31, 0x0a, 0x15, 0x72, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x12, 0x72, 0x6f, 0x77, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x72,
	0x6f, 0x77, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12,
	0x41, 0x0a, 0x13, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x40, 0x0a,
	0x09, 0x72, 0x6f, 0x77, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x6f, 0x63,
	0x6b, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x5a, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x18, 0xc8, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x54,
	0x52, 0x73, 0x70, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x70, 0x0a,
	0x13, 0x54, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x52, 0x6f, 0x77, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x52, 0x6f, 0x77, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x54, 0x52, 0x65, 0x71, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x07,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64,
	0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x1c, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52,
	0x19, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x11, 0x54, 0x52,
	0x73, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x22, 0x12, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x2e, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x71, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x54, 0x52, 0x73, 0x70, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x4e,
	0x0a, 0x20, 0x54, 0x52, 0x65, 0x71, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x62, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x22,
	0x0a, 0x20, 0x54, 0x52, 0x73, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x62, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x54, 0x52, 0x65, 0x71, 0x47, 0x43, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x22,
	0x0f, 0x0a, 0x0d, 0x54, 0x52, 0x73, 0x70, 0x47, 0x43, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x22, 0x5b, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x71, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x13, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x11, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x54, 0x52, 0x73, 0x70, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x5a, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x41, 0x0a, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64,
	0x52, 0x11, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xdc, 0x01, 0x0a,
	0x1b, 0x54, 0x52, 0x65, 0x71, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x6f, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47,
	0x75, 0x69, 0x64, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x54,
	0x52, 0x73, 0x70, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x15, 0x54, 0x52,
	0x65, 0x71, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6f, 0x73, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x73, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x6f, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x54, 0x52,
	0x65, 0x71, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6f, 0x73, 0x43, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x73,
	0x22, 0x16, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x68,
	0x61, 0x6f, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x71,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x73,
	0x22, 0x18, 0x0a, 0x16, 0x54, 0x52, 0x73, 0x70, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x45, 0x0a, 0x15, 0x54, 0x52,
	0x65, 0x71, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x73, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0xa1, 0x02, 0x0a, 0x12, 0x54,
	0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x1c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x65, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xee,
	0x01, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x62, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70,
	0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x64, 0x50, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x69, 0x64, 0x50, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x51, 0x0a, 0x10,
	0x49, 0x64, 0x50, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xde, 0x02, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47,
	0x75, 0x69, 0x64, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x04, 0x6d, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x65, 0x12, 0x46, 0x0a, 0x1c, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50,
	0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xfc, 0x08, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x61,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x63,
	0x65, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x5f, 0x6d,
	0x61, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x15, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64,
	0x4f, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x1a, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x1c, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x65,
	0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xa9, 0x01, 0x0a, 0x25, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x57, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x21, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x50, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x4b, 0x0a, 0x1d, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb8, 0x01, 0x0a, 0x12, 0x54, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x67, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x54, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x99, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x59, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x73, 0x70,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x54, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa9, 0x02, 0x0a, 0x15, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c,
	0x0a, 0x0e, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x70,
	0x69, 0x6e, 0x67, 0x41, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x25,
	0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x34, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x8e, 0x03, 0x0a, 0x14,
	0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6c, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x63, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x54, 0x0a, 0x18, 0x54, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x4d, 0x0a,
	0x15, 0x54, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0xa3, 0x03, 0x0a,
	0x12, 0x54, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x55, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x69,
	0x6e, 0x64, 0x3a, 0x0c, 0x4d, 0x52, 0x4b, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x4c, 0x0a, 0x23, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x1b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0x5c, 0x0a, 0x10, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0a,
	0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x22, 0x88, 0x02, 0x0a, 0x22, 0x54, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x18, 0x73, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x1e, 0x73, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x1c, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a, 0x23, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x20, 0x73, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x22, 0x6f, 0x0a, 0x13, 0x54,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xaa, 0x01, 0x0a,
	0x12, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x69,
	0x6e, 0x64, 0x3a, 0x0a, 0x54, 0x52, 0x4b, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x5d, 0x0a, 0x16, 0x54, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x73, 0x12, 0x17, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x22, 0x36, 0x0a, 0x16, 0x54, 0x52, 0x73, 0x70,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0xdf, 0x03, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62,
	0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0xc2, 0x06, 0x0a,
	0x0b, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x5c, 0x0a, 0x11, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x10, 0x6c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x43,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x5c,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x65, 0x0a, 0x15,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10,
	0x06, 0x22, 0x23, 0x0a, 0x0b, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xff, 0x05, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x5c, 0x0a, 0x11, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x10, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65,
	0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62,
	0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x24, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84,
	0x02, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x73, 0x79, 0x6e, 0x63, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x56, 0x0a,
	0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x42, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x93, 0x03, 0x0a, 0x0d, 0x54, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x76, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x56, 0x33,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61,
	0x78, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x31, 0x0a, 0x0e, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x0c, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x42, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x52, 0x0a,
	0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x08, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x54, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0c,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0xf3, 0x03, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x08,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x40, 0x0a, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x41, 0x0a, 0x13, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x41, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x54, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0f, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0xf3, 0x01, 0x0a, 0x0f, 0x54, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x2e, 0x54, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x86, 0x01, 0x0a,
	0x10, 0x54, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x46, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x18, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x16, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x22, 0xe0, 0x01, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x46, 0x0a, 0x08,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0xfb,
	0x04, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x37, 0x0a, 0x14, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x12, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x0e,
	0x54, 0x52, 0x73, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x0e, 0x54,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x22, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a,
	0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x9f, 0x04, 0x0a, 0x0b, 0x54, 0x52, 0x65, 0x71,
	0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14,
	0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x54, 0x52, 0x73,
	0x70, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xa2, 0x05, 0x0a, 0x1a, 0x54, 0x52, 0x65,
	0x71, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x63, 0x0a, 0x0b, 0x73,
	0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65,
	0x71, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x54, 0x53, 0x75, 0x62, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a,
	0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x41, 0x0a, 0x0b, 0x54, 0x53,
	0x75, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1c, 0x0a,
	0x1a, 0x54, 0x52, 0x73, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xbe, 0x03, 0x0a, 0x0c,
	0x54, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x77, 0x61, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x77,
	0x61, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x82, 0x01, 0x0a,
	0x0c, 0x54, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xc7, 0x02, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13,
	0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54,
	0x52, 0x73, 0x70, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xea, 0x08,
	0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x70, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x14, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x1a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x18, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x18, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x16, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x1b, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x19, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x2c, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0b, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x2e, 0x0a, 0x0f, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x17, 0x70, 0x65, 0x73, 0x73, 0x69, 0x6d,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x15, 0x70,
	0x65, 0x73, 0x73, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x69, 0x6e,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x16, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f,
	0x70, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x50, 0x0a, 0x21, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61,
	0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x1e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62,
	0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x0a, 0x0c, 0x54, 0x52,
	0x73, 0x70, 0x43, 0x6f, 0x70, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x8e, 0x08, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x4d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x76, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x30, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3b, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x14, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43,
	0x0a, 0x1a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x18, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x16, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x1b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x19, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x0e, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x41, 0x63, 0x6c, 0x12, 0x3c, 0x0a, 0x17, 0x70, 0x65, 0x73, 0x73, 0x69, 0x6d, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x15, 0x70, 0x65, 0x73, 0x73,
	0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x3f, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x16, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x70, 0x79, 0x69,
	0x6e, 0x67, 0x12, 0x50, 0x0a, 0x21, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x1e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70, 0x4d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x85, 0x04, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x6e, 0x6b,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12,
	0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0f,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13,
	0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x0a, 0x0c, 0x54,
	0x52, 0x73, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xa1, 0x03, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x07, 0x64, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x52, 0x0a, 0x07, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74,
	0x65, 0x6e, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x54, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x07, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x15,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x08, 0x54,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x08, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x52, 0x0e, 0x6e, 0x6f, 0x64,
	0x65, 0x52, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x54,
	0x52, 0x73, 0x70, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x54, 0x52, 0x65,
	0x71, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x54,
	0x52, 0x73, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61,
	0x62, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x18, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75,
	0x65, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x0e, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x63, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x73, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xe3, 0x02, 0x0a, 0x15,
	0x54, 0x52, 0x73, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x43, 0x0a, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x44, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x51, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe4, 0x02,
	0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x06, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12,
	0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x55,
	0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x10,
	0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x55, 0x6e,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x10, 0x54,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x12, 0x0a,
	0x10, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x54, 0x52, 0x65, 0x71, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x46, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x54, 0x52, 0x65, 0x71, 0x55,
	0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x52,
	0x73, 0x70, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0xcb, 0x03, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x64, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x6e,
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f,
	0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x60, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x5a, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x12, 0x0a,
	0x10, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x93, 0x02, 0x0a, 0x19, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0c, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x0b, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a,
	0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x54, 0x52, 0x73, 0x70, 0x52,
	0x65, 0x73, 0x68, 0x61, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x72,
	0x0a, 0x0d, 0x54, 0x52, 0x65, 0x71, 0x54, 0x72, 0x69, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x6d, 0x6d, 0x65,
	0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x52, 0x73, 0x70, 0x54, 0x72, 0x69, 0x6d, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0xd0, 0x04, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x41, 0x0a, 0x13,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x11, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12,
	0x64, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x12, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x68, 0x61, 0x6f, 0x73,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56,
	0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xdd, 0x03, 0x0a, 0x15, 0x54, 0x52, 0x65,
	0x71, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x40,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x09, 0x61, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x1f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x22, 0xc1, 0x03, 0x0a, 0x18, 0x54, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x41,
	0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x11,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x16, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x58, 0x0a, 0x1f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x1c,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13,
	0x63, 0x6f, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a,
	0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x54, 0x52, 0x73, 0x70, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x50, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x1c, 0x6d, 0x61,
	0x78, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x18, 0x6d, 0x61, 0x78, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x65, 0x72, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x0e, 0x54, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x70, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xe8, 0x03, 0x0a, 0x19, 0x54, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x50, 0x0a, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5c, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x61,
	0x72, 0x6c, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x61, 0x72, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xa8, 0x04, 0x0a, 0x13, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x3a, 0x0a, 0x18, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x3a, 0x01, 0x30, 0x52, 0x15, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x61, 0x78, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x18, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4e, 0x6f, 0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x6f, 0x77, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x5c, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x68, 0x79, 0x70, 0x65, 0x72,
	0x6c, 0x6f, 0x67, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x48, 0x79, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c, 0x6f, 0x67, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x52, 0x18, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x6f, 0x67, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x4a, 0x04,
	0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07,
	0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0x6b, 0x0a, 0x19,
	0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x78, 0x0a, 0x19, 0x54, 0x52, 0x65,
	0x71, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f,
	0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x54, 0x52, 0x73, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x38, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x19, 0x54,
	0x52, 0x65, 0x71, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x14, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x44, 0x69, 0x73,
	0x6b, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x54, 0x52, 0x73, 0x70, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x38, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0x7a, 0x0a, 0x1b, 0x54, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x73, 0x75, 0x72, 0x72, 0x65, 0x63, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x1b, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x73,
	0x75, 0x72, 0x72, 0x65, 0x63, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0x37,
	0x0a, 0x12, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0xde, 0x06,
	0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x50, 0x0a, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x84, 0x01, 0x0a, 0x1a, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x54, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x17, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x16, 0x64, 0x61, 0x74, 0x61, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d,
	0x61, 0x78, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x61, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x4b, 0x0a, 0x18, 0x54, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a,
	0x14, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x22, 0x97,
	0x02, 0x0a, 0x14, 0x54, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x14, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x13, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x6c, 0x0a, 0x0b, 0x54, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x4f, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xd9, 0x01, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x71, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0c, 0x6b, 0x65,
	0x65, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0b, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x16,
	0x54, 0x52, 0x73, 0x70, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x8d, 0x02, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x62, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xa2, 0x04, 0x0a, 0x12, 0x54, 0x52, 0x65, 0x71, 0x50, 0x75, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64,
	0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x45, 0x0a, 0x1b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x19, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62,
	0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x12, 0x54, 0x52, 0x73,
	0x70, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x48, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x75, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa6, 0x02, 0x0a, 0x12, 0x54, 0x52,
	0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb5,
	0x01, 0x0a, 0x12, 0x54, 0x52, 0x65, 0x71, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x6f, 0x72,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x17, 0x0a,
	0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdf, 0x01, 0x0a,
	0x14, 0x54, 0x52, 0x65, 0x71, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x33, 0x0a, 0x12, 0x61, 0x62, 0x6f, 0x72,
	0x74, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x10, 0x61, 0x62, 0x6f,
	0x72, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x16,
	0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x52,
	0x73, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x17,
	0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f,
	0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52, 0x73, 0x70, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xbb, 0x01, 0x0a, 0x1d, 0x54, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x1f,
	0x0a, 0x1d, 0x54, 0x52, 0x73, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22,
	0xd1, 0x01, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x71, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47,
	0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x3b, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x70, 0x65, 0x63, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x54, 0x52, 0x73, 0x70, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x22, 0xd0, 0x03,
	0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54,
	0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x63, 0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x22, 0x26, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xa9, 0x08, 0x0a, 0x12, 0x54, 0x52, 0x65,
	0x71, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x4f, 0x53, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x54, 0x52, 0x0f,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x4d, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x4a, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x77, 0x69, 0x74, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2e,
	0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x2f,
	0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x03,
	0x31, 0x30, 0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x6c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x10, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2b, 0x0a,
	0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x55, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x41, 0x0a, 0x18, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x04, 0x3a, 0x07, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x52, 0x16, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4a, 0x04,
	0x08, 0x06, 0x10, 0x07, 0x22, 0x5e, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x0a, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69,
	0x74, 0x68, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x51, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3a,
	0x08, 0x4a, 0x53, 0x46, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x5a, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0d, 0x4a, 0x53, 0x44, 0x5f, 0x41, 0x53, 0x43, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x3a,
	0x04, 0x31, 0x30, 0x30, 0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x01, 0x30, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x63, 0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x43, 0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x07, 0x44, 0x53, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x62,
	0x65, 0x68, 0x69, 0x6e, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x1b, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x4c,
	0x6f, 0x6f, 0x6b, 0x62, 0x65, 0x68, 0x69, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x3f, 0x0a, 0x12, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x10,
	0x6a, 0x6f, 0x62, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68,
	0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x77, 0x69,
	0x74, 0x68, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x17, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f,
	0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x52, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd5, 0x02, 0x0a,
	0x0a, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x36, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x28,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x11, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x10, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x0f, 0x6a, 0x6f, 0x62,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x08, 0x4a,
	0x53, 0x53, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x22, 0xc7, 0x02, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x13, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04,
	0x74, 0x72, 0x75, 0x65, 0x52, 0x11, 0x6f, 0x6d, 0x69, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x16, 0x6f, 0x6d, 0x69, 0x74, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x13,
	0x6f, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x73, 0x12, 0x3c, 0x0a, 0x17, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x14, 0x6f, 0x6d, 0x69,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x12, 0x5b, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x08, 0x4a, 0x53, 0x53, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x52,
	0x0d, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2b,
	0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x22, 0xe6, 0x01, 0x0a, 0x10,
	0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x22, 0x50, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e,
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xeb, 0x02, 0x0a, 0x0f, 0x54, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47,
	0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x28, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x22, 0x54, 0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4a, 0x6f, 0x62, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x54,
	0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x52,
	0x73, 0x70, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x52, 0x0a, 0x12, 0x54, 0x52, 0x65, 0x71, 0x44, 0x75, 0x6d, 0x70, 0x4a,
	0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x44,
	0x75, 0x6d, 0x70, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a,
	0x0e, 0x54, 0x52, 0x65, 0x71, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x12,
	0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52, 0x73,
	0x70, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x22, 0x7b, 0x0a, 0x10, 0x54,
	0x52, 0x65, 0x71, 0x50, 0x6f, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12,
	0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x65,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x65, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70,
	0x50, 0x6f, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x65, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x4a, 0x6f, 0x62, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x72, 0x75, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x54,
	0x52, 0x73, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x22, 0x89, 0x01, 0x0a, 0x13,
	0x54, 0x52, 0x65, 0x71, 0x44, 0x75, 0x6d, 0x70, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x4c, 0x6f, 0x67, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x44,
	0x75, 0x6d, 0x70, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x67, 0x22, 0xe2,
	0x02, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x65, 0x0a, 0x15, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x4e, 0x0a, 0x0d, 0x54, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x0d, 0x54, 0x52, 0x65, 0x71, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4d, 0x64,
	0x35, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x52, 0x73, 0x70, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0xfa, 0x02, 0x0a, 0x0f, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x61, 0x64, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x6f, 0x77,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x61, 0x64, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0xb8, 0x03, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a,
	0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x70, 0x72,
	0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x6c, 0x61,
	0x67, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x05, 0x33,
	0x32, 0x37, 0x36, 0x38, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c, 0x61, 0x67,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14,
	0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x12, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x22, 0x82, 0x02, 0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x54, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x62, 0x0a,
	0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x52, 0x73,
	0x70, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x22, 0xaf, 0x06, 0x0a, 0x0d, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x09, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x09, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x19, 0x6f,
	0x6d, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x17, 0x6f, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x33,
	0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x2f, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x33, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x68, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x0a, 0x52, 0x46, 0x5f, 0x59,
	0x54, 0x5f, 0x57, 0x49, 0x52, 0x45, 0x52, 0x13, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x75, 0x0a, 0x1c, 0x61,
	0x72, 0x72, 0x6f, 0x77, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52,
	0x6f, 0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x0a, 0x52, 0x46, 0x5f,
	0x59, 0x54, 0x5f, 0x57, 0x49, 0x52, 0x45, 0x52, 0x19, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x46, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x8e, 0x01, 0x0a, 0x24, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x21, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x92, 0x02, 0x0a, 0x11, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x61, 0x64, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x40, 0x0a, 0x1c, 0x6f, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x6f, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x52, 0x73, 0x70, 0x52,
	0x65, 0x61, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x54, 0x52, 0x65,
	0x71, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x0f, 0x54, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52,
	0x73, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a,
	0x0f, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47,
	0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x0f, 0x6a, 0x6f,
	0x62, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x08,
	0x4a, 0x53, 0x53, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x0d, 0x54,
	0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x52, 0x73, 0x70, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x92, 0x04, 0x0a, 0x13, 0x54,
	0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x62, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x13, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x74, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x1a, 0x20, 0x0a,
	0x08, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x88, 0x02, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x51, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x52, 0x73, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x53, 0x0a, 0x08, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe2, 0x02, 0x0a, 0x18, 0x54,
	0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x63, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x12, 0x3d, 0x0a,
	0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x62, 0x0a, 0x14,
	0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x70, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x5d, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x6a, 0x0a, 0x18, 0x54, 0x52, 0x73, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x6c, 0x12, 0x4e, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x1c,
	0x54, 0x52, 0x65, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x72, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x72, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1e, 0x0a,
	0x1c, 0x54, 0x52, 0x73, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xed, 0x01,
	0x0a, 0x19, 0x54, 0x52, 0x65, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x72, 0x63, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x72, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1b, 0x0a,
	0x19, 0x54, 0x52, 0x73, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x18, 0x54,
	0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x63, 0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x79, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x1a, 0x0a, 0x18, 0x54, 0x52, 0x73, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x13, 0x54,
	0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x43, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x8f, 0x01, 0x0a,
	0x13, 0x54, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x2f,
	0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x53, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x41, 0x0a, 0x1a, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x4a, 0x0a, 0x1a, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x80,
	0x01, 0x0a, 0x1a, 0x54, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x22, 0x36, 0x0a, 0x1a, 0x54, 0x52, 0x73, 0x70, 0x53, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x11, 0x54, 0x52, 0x65,
	0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x52, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x38, 0x0a, 0x11, 0x54, 0x52, 0x65, 0x71,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x52, 0x73, 0x70, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x37, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x53,
	0x74, 0x6f, 0x70, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x12, 0x0a, 0x10, 0x54, 0x52, 0x73, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0x3b, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x2c, 0x0a, 0x14, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x6f, 0x0a, 0x0f, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x22, 0x37, 0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x6c, 0x6f,
	0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x72, 0x74, 0x22, 0xcd, 0x09, 0x0a, 0x0a, 0x54, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x05, 0x70,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x72, 0x69, 0x65, 0x66, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x72, 0x65, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x75, 0x6e, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x72, 0x69,
	0x65, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x11, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x23, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x65,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x15, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x19, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x2f,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x1e, 0x0a,
	0x08, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08,
	0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x0e, 0x22, 0xb8, 0x0d, 0x0a, 0x15, 0x54, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x0b, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x54, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x70,
	0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x69, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x0a, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4a, 0x6f,
	0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x6a,
	0x0a, 0x10, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x50, 0x6f, 0x6f, 0x6c,
	0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0e, 0x70, 0x6f, 0x6f, 0x6c,
	0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x0b, 0x54,
	0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x61, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x50,
	0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x50, 0x6f, 0x6f, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x36, 0x0a,
	0x0a, 0x54, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x0b, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x61, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70,
	0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x36, 0x0a, 0x0a, 0x54, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0xfe, 0x01, 0x0a, 0x15, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x75, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2e, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x1a, 0x6e, 0x0a, 0x14, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0xf7, 0x01, 0x0a, 0x14, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x73, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2e, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a,
	0x6a, 0x0a, 0x13, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xb6, 0x01, 0x0a, 0x0f,
	0x54, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x67, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4d, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x54, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x0a, 0x0a, 0x04, 0x54, 0x4a, 0x6f, 0x62, 0x12, 0x21, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x66, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x34, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x12, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x10, 0x6a, 0x6f, 0x62, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68,
	0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6f, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12,
	0x4e, 0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x4a,
	0x6f, 0x62, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6a, 0x6f, 0x62,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x15, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x05, 0x0a, 0x13,
	0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x61, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0xde, 0x01, 0x0a, 0x0f, 0x54, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x62, 0x0a, 0x0e, 0x54, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xd7, 0x01, 0x0a, 0x0e, 0x54, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x65, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x1a, 0x5e, 0x0a, 0x0d, 0x54, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x86, 0x03, 0x0a, 0x0f, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x79,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4a, 0x6f,
	0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x6a,
	0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x4e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x2a, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x54,
	0x4a, 0x6f, 0x62, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x2d, 0x0a, 0x17, 0x54, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x2b, 0x0a, 0x15, 0x54, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x82, 0x02,
	0x0a, 0x16, 0x54, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x1b, 0x54, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x8a, 0x05, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e,
	0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x54,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x75, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e,
	0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x54, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x77, 0x0a, 0x0a, 0x54,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0x2d, 0x0a, 0x15, 0x54, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x3e, 0x0a, 0x0e, 0x54, 0x52, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x54, 0x52, 0x65, 0x71, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x6f,
	0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52, 0x73,
	0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x12,
	0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xe7, 0x02, 0x0a, 0x12, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4e, 0x59, 0x54,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x51, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x02,
	0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x51, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x70, 0x70, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x20, 0x0a, 0x08, 0x54, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x13, 0x54,
	0x52, 0x73, 0x70, 0x52, 0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x6f, 0x77, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x8f, 0x05,
	0x0a, 0x06, 0x54, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22,
	0xcf, 0x01, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x47, 0x0a, 0x0c, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x37, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xc0, 0x04, 0x0a, 0x0f, 0x54,
	0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x6f,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x4f, 0x53, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x54, 0x52, 0x0f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x49, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69,
	0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x03, 0x31, 0x30,
	0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x0f, 0x54, 0x52, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xea, 0x02, 0x0a,
	0x0e, 0x54, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x75, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41, 0x70, 0x69, 0x2e, 0x4e,
	0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x54,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x2d, 0x0a, 0x15, 0x54, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x52, 0x73,
	0x70, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x17,
	0x54, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x59, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xed, 0x01, 0x0a,
	0x17, 0x54, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0xc0, 0x01, 0x0a,
	0x20, 0x54, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x41,
	0x70, 0x69, 0x2e, 0x4e, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x70, 0x0a, 0x20, 0x54, 0x52, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x22, 0xc2, 0x01, 0x0a, 0x21, 0x54, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x1f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x1b, 0x6d, 0x61, 0x78, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x54, 0x52, 0x73, 0x70, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x16, 0x54,
	0x52, 0x65, 0x71, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x61,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x54, 0x52,
	0x73, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x54, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x15,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x59,
	0x54, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x75, 0x69, 0x64, 0x52, 0x13,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x39, 0x0a, 0x10, 0x54, 0x52,
	0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x54, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x61, 0x64, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x52, 0x73, 0x70, 0x52, 0x65, 0x61, 0x64, 0x53, 0x68,
	0x75, 0x66, 0x66, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x54, 0x52,
	0x65, 0x71, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x68, 0x75, 0x66,
	0x66, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x54, 0x52, 0x73,
	0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x2a, 0x30, 0x0a, 0x10, 0x45, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x5f, 0x4d, 0x41, 0x53, 0x54,
	0x45, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x54, 0x10, 0x01, 0x2a, 0x45, 0x0a, 0x14, 0x45, 0x52, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x4d, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4d,
	0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4d,
	0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x10, 0x03, 0x2a, 0x24, 0x0a, 0x0a, 0x45, 0x41,
	0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x5f, 0x46, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01,
	0x2a, 0x26, 0x0a, 0x0b, 0x45, 0x44, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01, 0x2a, 0x5d, 0x0a, 0x11, 0x45, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x52, 0x4d, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x52, 0x4d, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x52,
	0x4d, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x52, 0x4d, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x54, 0x4f,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x03, 0x2a, 0x31, 0x0a, 0x13, 0x45, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x52, 0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x52, 0x4d, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01, 0x2a, 0x58, 0x0a, 0x0f, 0x45, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0e, 0x0a,
	0x0a, 0x4d, 0x52, 0x4b, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4d, 0x52, 0x4b, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4d, 0x52, 0x4b, 0x5f, 0x43, 0x41, 0x43, 0x48, 0x45, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x52, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x43,
	0x48, 0x45, 0x10, 0x03, 0x2a, 0x33, 0x0a, 0x0b, 0x45, 0x52, 0x6f, 0x77, 0x73, 0x65, 0x74, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4b, 0x5f, 0x55, 0x4e, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4b, 0x5f, 0x56, 0x45,
	0x52, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x3c, 0x0a, 0x0d, 0x45, 0x52, 0x6f,
	0x77, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x46,
	0x5f, 0x59, 0x54, 0x5f, 0x57, 0x49, 0x52, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x46,
	0x5f, 0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x46, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x02, 0x2a, 0x4f, 0x0a, 0x0f, 0x45, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x52,
	0x4b, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x52,
	0x4b, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x52, 0x4b, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x5f, 0x46, 0x4f,
	0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x02, 0x2a, 0xaf, 0x01, 0x0a, 0x0e, 0x45, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4f,
	0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x4f,
	0x54, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x54, 0x5f, 0x4d, 0x45,
	0x52, 0x47, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x54, 0x5f, 0x45, 0x52, 0x41, 0x53,
	0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x54, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45,
	0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f,
	0x43, 0x4f, 0x50, 0x59, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x54, 0x5f, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x54,
	0x5f, 0x56, 0x41, 0x4e, 0x49, 0x4c, 0x4c, 0x41, 0x10, 0x08, 0x2a, 0xef, 0x02, 0x0a, 0x0f, 0x45,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x64, 0x12, 0x0b,
	0x0a, 0x07, 0x4f, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x4f, 0x53, 0x5f, 0x4f, 0x52, 0x50, 0x48, 0x41, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x4f, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x53, 0x5f, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c,
	0x4f, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x4f, 0x53, 0x5f, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49,
	0x4e, 0x47, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x56,
	0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x49,
	0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4a, 0x4f, 0x42, 0x53, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x4f,
	0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x4f,
	0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x4f,
	0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x0b, 0x12, 0x10,
	0x0a, 0x0c, 0x4f, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0c,
	0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10,
	0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x10,
	0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x56, 0x45, 0x5f, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x11, 0x2a, 0x45, 0x0a, 0x17,
	0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x53, 0x44, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x53, 0x44, 0x5f, 0x50, 0x41, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x44, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52,
	0x45, 0x10, 0x02, 0x2a, 0xb3, 0x04, 0x0a, 0x08, 0x45, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0a, 0x4a, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xe8,
	0x07, 0x12, 0x0a, 0x0a, 0x06, 0x4a, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x4a, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41,
	0x50, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x54, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x54, 0x5f, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x04, 0x12, 0x16,
	0x0a, 0x12, 0x4a, 0x54, 0x5f, 0x55, 0x4e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4d,
	0x45, 0x52, 0x47, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x54, 0x5f, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x54, 0x5f, 0x53,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d,
	0x4a, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x10, 0x08, 0x12,
	0x14, 0x0a, 0x10, 0x4a, 0x54, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x44,
	0x55, 0x43, 0x45, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x4a, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x54,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x10, 0x0a, 0x12, 0x16,
	0x0a, 0x12, 0x4a, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x42,
	0x49, 0x4e, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x54, 0x5f, 0x52, 0x45, 0x4d,
	0x4f, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x50, 0x59, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x4a, 0x54,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x4f,
	0x52, 0x54, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x45, 0x44, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x54, 0x5f, 0x4a,
	0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a,
	0x4a, 0x54, 0x5f, 0x56, 0x41, 0x4e, 0x49, 0x4c, 0x4c, 0x41, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10,
	0x4a, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45,
	0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x4a, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x62, 0x12, 0x16, 0x0a, 0x12,
	0x4a, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x55,
	0x4e, 0x4b, 0x10, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x54, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x54, 0x5f,
	0x52, 0x45, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x66, 0x12, 0x11,
	0x0a, 0x0d, 0x4a, 0x54, 0x5f, 0x53, 0x45, 0x41, 0x4c, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10,
	0x67, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x43, 0x48,
	0x55, 0x4e, 0x4b, 0x53, 0x10, 0x68, 0x12, 0x17, 0x0a, 0x13, 0x4a, 0x54, 0x5f, 0x41, 0x55, 0x54,
	0x4f, 0x54, 0x4f, 0x4d, 0x49, 0x5a, 0x45, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x69, 0x12,
	0x18, 0x0a, 0x14, 0x4a, 0x54, 0x5f, 0x52, 0x45, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x4e, 0x41, 0x54,
	0x45, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x6a, 0x2a, 0x97, 0x01, 0x0a, 0x09, 0x45, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x53, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x53, 0x5f, 0x57, 0x41,
	0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x53, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x53, 0x5f, 0x41, 0x42,
	0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x53, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4a, 0x53,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x53, 0x5f,
	0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x53, 0x5f,
	0x4c, 0x4f, 0x53, 0x54, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x53, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x08, 0x2a, 0xb7, 0x01, 0x0a, 0x0d, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x53, 0x46, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x53, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4a, 0x53, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x53, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x53, 0x46, 0x5f, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x53, 0x46,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x53,
	0x46, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x4a, 0x53, 0x46, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x07, 0x12, 0x0a,
	0x0a, 0x06, 0x4a, 0x53, 0x46, 0x5f, 0x49, 0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x53,
	0x46, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x09, 0x2a, 0x3a, 0x0a,
	0x11, 0x45, 0x4a, 0x6f, 0x62, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x53, 0x44, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x53, 0x44, 0x5f, 0x44, 0x45, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x2a, 0x49, 0x0a, 0x0b, 0x45, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x53, 0x5f, 0x41,
	0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x53, 0x5f, 0x52,
	0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x53, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x53, 0x5f, 0x4d, 0x41, 0x4e, 0x55,
	0x41, 0x4c, 0x10, 0x03, 0x2a, 0x3e, 0x0a, 0x0f, 0x45, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x41, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x41, 0x5f, 0x44, 0x45,
	0x4e, 0x59, 0x10, 0x02, 0x2a, 0x55, 0x0a, 0x11, 0x45, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x42, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x42, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x42, 0x5f,
	0x48, 0x45, 0x41, 0x56, 0x59, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x42, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x18, 0x45,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x53, 0x4d, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x53, 0x4d, 0x5f, 0x55, 0x4e, 0x56,
	0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x01, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x53, 0x4d, 0x5f, 0x55, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x45, 0x44, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x4f,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x5e, 0x0a, 0x1e, 0x45, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x53, 0x46, 0x4d,
	0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x53, 0x46, 0x4d, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x53, 0x46, 0x4d, 0x5f, 0x46, 0x41, 0x4c, 0x4c,
	0x42, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x14, 0x45, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x54, 0x50, 0x4d, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x50, 0x4d, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x50, 0x4d, 0x5f, 0x55, 0x4e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x02, 0x2a, 0xa6, 0x01, 0x0a, 0x10, 0x45, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x54, 0x5f, 0x42, 0x41,
	0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x54, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x54, 0x5f, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52,
	0x5f, 0x4a, 0x4f, 0x42, 0x53, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x54, 0x5f, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x54, 0x5f, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f, 0x43, 0x45, 0x4c, 0x4c,
	0x53, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x54, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x06, 0x2a, 0x5e, 0x0a, 0x15, 0x45,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x43, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x43, 0x5f,
	0x48, 0x54, 0x54, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x4d, 0x43, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x43, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x04, 0x2a, 0x3f, 0x0a, 0x0e, 0x45,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x4a, 0x53, 0x53, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4a,
	0x53, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x08,
	0x4a, 0x53, 0x53, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10, 0xff, 0xff, 0x03, 0x2a, 0x5c, 0x0a, 0x0c,
	0x45, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x51, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x64, 0x12, 0x09, 0x0a, 0x05,
	0x51, 0x45, 0x5f, 0x51, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x45, 0x5f, 0x59, 0x51,
	0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x45, 0x5f, 0x43, 0x48, 0x59, 0x54, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x51, 0x45, 0x5f, 0x4d, 0x4f, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x51, 0x45, 0x5f, 0x53, 0x50, 0x59, 0x54, 0x10, 0x04, 0x2a, 0x32, 0x0a, 0x0c, 0x45, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x54,
	0x5f, 0x52, 0x41, 0x57, 0x5f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x54, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x01, 0x2a, 0xb0,
	0x01, 0x0a, 0x0b, 0x45, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x51, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x64, 0x12, 0x0c,
	0x0a, 0x08, 0x51, 0x53, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x51, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x51, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x51, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x51, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x51, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05,
	0x12, 0x10, 0x0a, 0x0c, 0x51, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x51, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x08, 0x42, 0x58, 0x0a, 0x16, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x79, 0x74, 0x73, 0x61, 0x75, 0x72,
	0x75, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x42, 0x09, 0x41, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x01, 0x5a, 0x31, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x79, 0x74, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
}

var (
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescOnce sync.Once
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescData = file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDesc
)

func file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescGZIP() []byte {
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescOnce.Do(func() {
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescData)
	})
	return file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDescData
}

var file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes = make([]protoimpl.EnumInfo, 29)
var file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes = make([]protoimpl.MessageInfo, 365)
var file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_goTypes = []interface{}{
	(ETransactionType)(0),                                     // 0: NYT.NApi.NRpcProxy.NProto.ETransactionType
	(ERowModificationType)(0),                                 // 1: NYT.NApi.NRpcProxy.NProto.ERowModificationType
	(EAtomicity)(0),                                           // 2: NYT.NApi.NRpcProxy.NProto.EAtomicity
	(EDurability)(0),                                          // 3: NYT.NApi.NRpcProxy.NProto.EDurability
	(ETableReplicaMode)(0),                                    // 4: NYT.NApi.NRpcProxy.NProto.ETableReplicaMode
	(EReplicaConsistency)(0),                                  // 5: NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	(EMasterReadKind)(0),                                      // 6: NYT.NApi.NRpcProxy.NProto.EMasterReadKind
	(ERowsetKind)(0),                                          // 7: NYT.NApi.NRpcProxy.NProto.ERowsetKind
	(ERowsetFormat)(0),                                        // 8: NYT.NApi.NRpcProxy.NProto.ERowsetFormat
	(ETabletReadKind)(0),                                      // 9: NYT.NApi.NRpcProxy.NProto.ETabletReadKind
	(EOperationType)(0),                                       // 10: NYT.NApi.NRpcProxy.NProto.EOperationType
	(EOperationState)(0),                                      // 11: NYT.NApi.NRpcProxy.NProto.EOperationState
	(EOperationSortDirection)(0),                              // 12: NYT.NApi.NRpcProxy.NProto.EOperationSortDirection
	(EJobType)(0),                                             // 13: NYT.NApi.NRpcProxy.NProto.EJobType
	(EJobState)(0),                                            // 14: NYT.NApi.NRpcProxy.NProto.EJobState
	(EJobSortField)(0),                                        // 15: NYT.NApi.NRpcProxy.NProto.EJobSortField
	(EJobSortDirection)(0),                                    // 16: NYT.NApi.NRpcProxy.NProto.EJobSortDirection
	(EDataSource)(0),                                          // 17: NYT.NApi.NRpcProxy.NProto.EDataSource
	(ESecurityAction)(0),                                      // 18: NYT.NApi.NRpcProxy.NProto.ESecurityAction
	(EMultiplexingBand)(0),                                    // 19: NYT.NApi.NRpcProxy.NProto.EMultiplexingBand
	(ETableSchemaModification)(0),                             // 20: NYT.NApi.NRpcProxy.NProto.ETableSchemaModification
	(EColumnarStatisticsFetcherMode)(0),                       // 21: NYT.NApi.NRpcProxy.NProto.EColumnarStatisticsFetcherMode
	(EPartitionTablesMode)(0),                                 // 22: NYT.NApi.NRpcProxy.NProto.EPartitionTablesMode
	(EMaintenanceType)(0),                                     // 23: NYT.NApi.NRpcProxy.NProto.EMaintenanceType
	(EMaintenanceComponent)(0),                                // 24: NYT.NApi.NRpcProxy.NProto.EMaintenanceComponent
	(EJobSpecSource)(0),                                       // 25: NYT.NApi.NRpcProxy.NProto.EJobSpecSource
	(EQueryEngine)(0),                                         // 26: NYT.NApi.NRpcProxy.NProto.EQueryEngine
	(EContentType)(0),                                         // 27: NYT.NApi.NRpcProxy.NProto.EContentType
	(EQueryState)(0),                                          // 28: NYT.NApi.NRpcProxy.NProto.EQueryState
	(*TLegacyAttributeKeys)(nil),                              // 29: NYT.NApi.NRpcProxy.NProto.TLegacyAttributeKeys
	(*TRowsetDescriptor)(nil),                                 // 30: NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	(*TRowsetStatistics)(nil),                                 // 31: NYT.NApi.NRpcProxy.NProto.TRowsetStatistics
	(*TReqStartTransaction)(nil),                              // 32: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction
	(*TRspStartTransaction)(nil),                              // 33: NYT.NApi.NRpcProxy.NProto.TRspStartTransaction
	(*TReqPingTransaction)(nil),                               // 34: NYT.NApi.NRpcProxy.NProto.TReqPingTransaction
	(*TRspPingTransaction)(nil),                               // 35: NYT.NApi.NRpcProxy.NProto.TRspPingTransaction
	(*TReqCommitTransaction)(nil),                             // 36: NYT.NApi.NRpcProxy.NProto.TReqCommitTransaction
	(*TRspCommitTransaction)(nil),                             // 37: NYT.NApi.NRpcProxy.NProto.TRspCommitTransaction
	(*TReqFlushTransaction)(nil),                              // 38: NYT.NApi.NRpcProxy.NProto.TReqFlushTransaction
	(*TRspFlushTransaction)(nil),                              // 39: NYT.NApi.NRpcProxy.NProto.TRspFlushTransaction
	(*TReqAbortTransaction)(nil),                              // 40: NYT.NApi.NRpcProxy.NProto.TReqAbortTransaction
	(*TRspAbortTransaction)(nil),                              // 41: NYT.NApi.NRpcProxy.NProto.TRspAbortTransaction
	(*TReqLookupRows)(nil),                                    // 42: NYT.NApi.NRpcProxy.NProto.TReqLookupRows
	(*TRspLookupRows)(nil),                                    // 43: NYT.NApi.NRpcProxy.NProto.TRspLookupRows
	(*TRetentionConfig)(nil),                                  // 44: NYT.NApi.NRpcProxy.NProto.TRetentionConfig
	(*TReqVersionedLookupRows)(nil),                           // 45: NYT.NApi.NRpcProxy.NProto.TReqVersionedLookupRows
	(*TRspVersionedLookupRows)(nil),                           // 46: NYT.NApi.NRpcProxy.NProto.TRspVersionedLookupRows
	(*TReqMultiLookup)(nil),                                   // 47: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup
	(*TRspMultiLookup)(nil),                                   // 48: NYT.NApi.NRpcProxy.NProto.TRspMultiLookup
	(*TQueryStatistics)(nil),                                  // 49: NYT.NApi.NRpcProxy.NProto.TQueryStatistics
	(*TReqSelectRows)(nil),                                    // 50: NYT.NApi.NRpcProxy.NProto.TReqSelectRows
	(*TRspSelectRows)(nil),                                    // 51: NYT.NApi.NRpcProxy.NProto.TRspSelectRows
	(*TReqAdvanceQueueConsumer)(nil),                          // 52: NYT.NApi.NRpcProxy.NProto.TReqAdvanceQueueConsumer
	(*TRspAdvanceQueueConsumer)(nil),                          // 53: NYT.NApi.NRpcProxy.NProto.TRspAdvanceQueueConsumer
	(*TReqPushQueueProducer)(nil),                             // 54: NYT.NApi.NRpcProxy.NProto.TReqPushQueueProducer
	(*TRspPushQueueProducer)(nil),                             // 55: NYT.NApi.NRpcProxy.NProto.TRspPushQueueProducer
	(*TRowBatchReadOptions)(nil),                              // 56: NYT.NApi.NRpcProxy.NProto.TRowBatchReadOptions
	(*TReqPullQueue)(nil),                                     // 57: NYT.NApi.NRpcProxy.NProto.TReqPullQueue
	(*TRspPullQueue)(nil),                                     // 58: NYT.NApi.NRpcProxy.NProto.TRspPullQueue
	(*TReqPullQueueConsumer)(nil),                             // 59: NYT.NApi.NRpcProxy.NProto.TReqPullQueueConsumer
	(*TRspPullQueueConsumer)(nil),                             // 60: NYT.NApi.NRpcProxy.NProto.TRspPullQueueConsumer
	(*TReqRegisterQueueConsumer)(nil),                         // 61: NYT.NApi.NRpcProxy.NProto.TReqRegisterQueueConsumer
	(*TRspRegisterQueueConsumer)(nil),                         // 62: NYT.NApi.NRpcProxy.NProto.TRspRegisterQueueConsumer
	(*TReqUnregisterQueueConsumer)(nil),                       // 63: NYT.NApi.NRpcProxy.NProto.TReqUnregisterQueueConsumer
	(*TRspUnregisterQueueConsumer)(nil),                       // 64: NYT.NApi.NRpcProxy.NProto.TRspUnregisterQueueConsumer
	(*TReqListQueueConsumerRegistrations)(nil),                // 65: NYT.NApi.NRpcProxy.NProto.TReqListQueueConsumerRegistrations
	(*TRspListQueueConsumerRegistrations)(nil),                // 66: NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations
	(*TReqCreateQueueProducerSession)(nil),                    // 67: NYT.NApi.NRpcProxy.NProto.TReqCreateQueueProducerSession
	(*TRspCreateQueueProducerSession)(nil),                    // 68: NYT.NApi.NRpcProxy.NProto.TRspCreateQueueProducerSession
	(*TReqRemoveQueueProducerSession)(nil),                    // 69: NYT.NApi.NRpcProxy.NProto.TReqRemoveQueueProducerSession
	(*TRspRemoveQueueProducerSession)(nil),                    // 70: NYT.NApi.NRpcProxy.NProto.TRspRemoveQueueProducerSession
	(*TReqExplainQuery)(nil),                                  // 71: NYT.NApi.NRpcProxy.NProto.TReqExplainQuery
	(*TRspExplainQuery)(nil),                                  // 72: NYT.NApi.NRpcProxy.NProto.TRspExplainQuery
	(*TReplicationRowIndex)(nil),                              // 73: NYT.NApi.NRpcProxy.NProto.TReplicationRowIndex
	(*TReqPullRows)(nil),                                      // 74: NYT.NApi.NRpcProxy.NProto.TReqPullRows
	(*TRspPullRows)(nil),                                      // 75: NYT.NApi.NRpcProxy.NProto.TRspPullRows
	(*TReqGetInSyncReplicas)(nil),                             // 76: NYT.NApi.NRpcProxy.NProto.TReqGetInSyncReplicas
	(*TRspGetInSyncReplicas)(nil),                             // 77: NYT.NApi.NRpcProxy.NProto.TRspGetInSyncReplicas
	(*TReqGetTabletInfos)(nil),                                // 78: NYT.NApi.NRpcProxy.NProto.TReqGetTabletInfos
	(*TRspGetTabletInfos)(nil),                                // 79: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos
	(*TReqGetTabletErrors)(nil),                               // 80: NYT.NApi.NRpcProxy.NProto.TReqGetTabletErrors
	(*TRspGetTabletErrors)(nil),                               // 81: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors
	(*TReqModifyRows)(nil),                                    // 82: NYT.NApi.NRpcProxy.NProto.TReqModifyRows
	(*TRspModifyRows)(nil),                                    // 83: NYT.NApi.NRpcProxy.NProto.TRspModifyRows
	(*TReqBatchModifyRows)(nil),                               // 84: NYT.NApi.NRpcProxy.NProto.TReqBatchModifyRows
	(*TRspBatchModifyRows)(nil),                               // 85: NYT.NApi.NRpcProxy.NProto.TRspBatchModifyRows
	(*TReqBuildSnapshot)(nil),                                 // 86: NYT.NApi.NRpcProxy.NProto.TReqBuildSnapshot
	(*TRspBuildSnapshot)(nil),                                 // 87: NYT.NApi.NRpcProxy.NProto.TRspBuildSnapshot
	(*TReqExitReadOnly)(nil),                                  // 88: NYT.NApi.NRpcProxy.NProto.TReqExitReadOnly
	(*TRspExitReadOnly)(nil),                                  // 89: NYT.NApi.NRpcProxy.NProto.TRspExitReadOnly
	(*TReqMasterExitReadOnly)(nil),                            // 90: NYT.NApi.NRpcProxy.NProto.TReqMasterExitReadOnly
	(*TRspMasterExitReadOnly)(nil),                            // 91: NYT.NApi.NRpcProxy.NProto.TRspMasterExitReadOnly
	(*TReqDiscombobulateNonvotingPeers)(nil),                  // 92: NYT.NApi.NRpcProxy.NProto.TReqDiscombobulateNonvotingPeers
	(*TRspDiscombobulateNonvotingPeers)(nil),                  // 93: NYT.NApi.NRpcProxy.NProto.TRspDiscombobulateNonvotingPeers
	(*TReqGCCollect)(nil),                                     // 94: NYT.NApi.NRpcProxy.NProto.TReqGCCollect
	(*TRspGCCollect)(nil),                                     // 95: NYT.NApi.NRpcProxy.NProto.TRspGCCollect
	(*TReqSuspendCoordinator)(nil),                            // 96: NYT.NApi.NRpcProxy.NProto.TReqSuspendCoordinator
	(*TRspSuspendCoordinator)(nil),                            // 97: NYT.NApi.NRpcProxy.NProto.TRspSuspendCoordinator
	(*TReqResumeCoordinator)(nil),                             // 98: NYT.NApi.NRpcProxy.NProto.TReqResumeCoordinator
	(*TRspResumeCoordinator)(nil),                             // 99: NYT.NApi.NRpcProxy.NProto.TRspResumeCoordinator
	(*TReqMigrateReplicationCards)(nil),                       // 100: NYT.NApi.NRpcProxy.NProto.TReqMigrateReplicationCards
	(*TRspMigrateReplicationCards)(nil),                       // 101: NYT.NApi.NRpcProxy.NProto.TRspMigrateReplicationCards
	(*TReqSuspendChaosCells)(nil),                             // 102: NYT.NApi.NRpcProxy.NProto.TReqSuspendChaosCells
	(*TRspSuspendChaosCells)(nil),                             // 103: NYT.NApi.NRpcProxy.NProto.TRspSuspendChaosCells
	(*TReqResumeChaosCells)(nil),                              // 104: NYT.NApi.NRpcProxy.NProto.TReqResumeChaosCells
	(*TRspResumeChaosCells)(nil),                              // 105: NYT.NApi.NRpcProxy.NProto.TRspResumeChaosCells
	(*TReqSuspendTabletCells)(nil),                            // 106: NYT.NApi.NRpcProxy.NProto.TReqSuspendTabletCells
	(*TRspSuspendTabletCells)(nil),                            // 107: NYT.NApi.NRpcProxy.NProto.TRspSuspendTabletCells
	(*TReqResumeTabletCells)(nil),                             // 108: NYT.NApi.NRpcProxy.NProto.TReqResumeTabletCells
	(*TRspResumeTabletCells)(nil),                             // 109: NYT.NApi.NRpcProxy.NProto.TRspResumeTabletCells
	(*TReqAddMaintenance)(nil),                                // 110: NYT.NApi.NRpcProxy.NProto.TReqAddMaintenance
	(*TRspAddMaintenance)(nil),                                // 111: NYT.NApi.NRpcProxy.NProto.TRspAddMaintenance
	(*TReqRemoveMaintenance)(nil),                             // 112: NYT.NApi.NRpcProxy.NProto.TReqRemoveMaintenance
	(*TRspRemoveMaintenance)(nil),                             // 113: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance
	(*TTransactionalOptions)(nil),                             // 114: NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	(*TPrerequisiteOptions)(nil),                              // 115: NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	(*TMasterReadOptions)(nil),                                // 116: NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	(*TMutatingOptions)(nil),                                  // 117: NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	(*TSuppressableAccessTrackingOptions)(nil),                // 118: NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	(*TTabletRangeOptions)(nil),                               // 119: NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	(*TTabletReadOptions)(nil),                                // 120: NYT.NApi.NRpcProxy.NProto.TTabletReadOptions
	(*TReqGenerateTimestamps)(nil),                            // 121: NYT.NApi.NRpcProxy.NProto.TReqGenerateTimestamps
	(*TRspGenerateTimestamps)(nil),                            // 122: NYT.NApi.NRpcProxy.NProto.TRspGenerateTimestamps
	(*TReqExistsNode)(nil),                                    // 123: NYT.NApi.NRpcProxy.NProto.TReqExistsNode
	(*TRspExistsNode)(nil),                                    // 124: NYT.NApi.NRpcProxy.NProto.TRspExistsNode
	(*TReqGetNode)(nil),                                       // 125: NYT.NApi.NRpcProxy.NProto.TReqGetNode
	(*TRspGetNode)(nil),                                       // 126: NYT.NApi.NRpcProxy.NProto.TRspGetNode
	(*TReqListNode)(nil),                                      // 127: NYT.NApi.NRpcProxy.NProto.TReqListNode
	(*TRspListNode)(nil),                                      // 128: NYT.NApi.NRpcProxy.NProto.TRspListNode
	(*TReqCreateObject)(nil),                                  // 129: NYT.NApi.NRpcProxy.NProto.TReqCreateObject
	(*TRspCreateObject)(nil),                                  // 130: NYT.NApi.NRpcProxy.NProto.TRspCreateObject
	(*TColumnSchema)(nil),                                     // 131: NYT.NApi.NRpcProxy.NProto.TColumnSchema
	(*TDeletedColumn)(nil),                                    // 132: NYT.NApi.NRpcProxy.NProto.TDeletedColumn
	(*TTableSchema)(nil),                                      // 133: NYT.NApi.NRpcProxy.NProto.TTableSchema
	(*TTabletInfo)(nil),                                       // 134: NYT.NApi.NRpcProxy.NProto.TTabletInfo
	(*TReplicaInfo)(nil),                                      // 135: NYT.NApi.NRpcProxy.NProto.TReplicaInfo
	(*TIndexInfo)(nil),                                        // 136: NYT.NApi.NRpcProxy.NProto.TIndexInfo
	(*TReqGetTableMountInfo)(nil),                             // 137: NYT.NApi.NRpcProxy.NProto.TReqGetTableMountInfo
	(*TRspGetTableMountInfo)(nil),                             // 138: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo
	(*TReqGetTablePivotKeys)(nil),                             // 139: NYT.NApi.NRpcProxy.NProto.TReqGetTablePivotKeys
	(*TRspGetTablePivotKeys)(nil),                             // 140: NYT.NApi.NRpcProxy.NProto.TRspGetTablePivotKeys
	(*TTableBackupManifest)(nil),                              // 141: NYT.NApi.NRpcProxy.NProto.TTableBackupManifest
	(*TBackupManifest)(nil),                                   // 142: NYT.NApi.NRpcProxy.NProto.TBackupManifest
	(*TReqCreateTableBackup)(nil),                             // 143: NYT.NApi.NRpcProxy.NProto.TReqCreateTableBackup
	(*TRspCreateTableBackup)(nil),                             // 144: NYT.NApi.NRpcProxy.NProto.TRspCreateTableBackup
	(*TReqRestoreTableBackup)(nil),                            // 145: NYT.NApi.NRpcProxy.NProto.TReqRestoreTableBackup
	(*TRspRestoreTableBackup)(nil),                            // 146: NYT.NApi.NRpcProxy.NProto.TRspRestoreTableBackup
	(*TReqCreateNode)(nil),                                    // 147: NYT.NApi.NRpcProxy.NProto.TReqCreateNode
	(*TRspCreateNode)(nil),                                    // 148: NYT.NApi.NRpcProxy.NProto.TRspCreateNode
	(*TReqRemoveNode)(nil),                                    // 149: NYT.NApi.NRpcProxy.NProto.TReqRemoveNode
	(*TRspRemoveNode)(nil),                                    // 150: NYT.NApi.NRpcProxy.NProto.TRspRemoveNode
	(*TReqSetNode)(nil),                                       // 151: NYT.NApi.NRpcProxy.NProto.TReqSetNode
	(*TRspSetNode)(nil),                                       // 152: NYT.NApi.NRpcProxy.NProto.TRspSetNode
	(*TReqMultisetAttributesNode)(nil),                        // 153: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode
	(*TRspMultisetAttributesNode)(nil),                        // 154: NYT.NApi.NRpcProxy.NProto.TRspMultisetAttributesNode
	(*TReqLockNode)(nil),                                      // 155: NYT.NApi.NRpcProxy.NProto.TReqLockNode
	(*TRspLockNode)(nil),                                      // 156: NYT.NApi.NRpcProxy.NProto.TRspLockNode
	(*TReqUnlockNode)(nil),                                    // 157: NYT.NApi.NRpcProxy.NProto.TReqUnlockNode
	(*TRspUnlockNode)(nil),                                    // 158: NYT.NApi.NRpcProxy.NProto.TRspUnlockNode
	(*TReqCopyNode)(nil),                                      // 159: NYT.NApi.NRpcProxy.NProto.TReqCopyNode
	(*TRspCopyNode)(nil),                                      // 160: NYT.NApi.NRpcProxy.NProto.TRspCopyNode
	(*TReqMoveNode)(nil),                                      // 161: NYT.NApi.NRpcProxy.NProto.TReqMoveNode
	(*TRspMoveNode)(nil),                                      // 162: NYT.NApi.NRpcProxy.NProto.TRspMoveNode
	(*TReqLinkNode)(nil),                                      // 163: NYT.NApi.NRpcProxy.NProto.TReqLinkNode
	(*TRspLinkNode)(nil),                                      // 164: NYT.NApi.NRpcProxy.NProto.TRspLinkNode
	(*TReqConcatenateNodes)(nil),                              // 165: NYT.NApi.NRpcProxy.NProto.TReqConcatenateNodes
	(*TRspConcatenateNodes)(nil),                              // 166: NYT.NApi.NRpcProxy.NProto.TRspConcatenateNodes
	(*TReqExternalizeNode)(nil),                               // 167: NYT.NApi.NRpcProxy.NProto.TReqExternalizeNode
	(*TRspExternalizeNode)(nil),                               // 168: NYT.NApi.NRpcProxy.NProto.TRspExternalizeNode
	(*TReqInternalizeNode)(nil),                               // 169: NYT.NApi.NRpcProxy.NProto.TReqInternalizeNode
	(*TRspInternalizeNode)(nil),                               // 170: NYT.NApi.NRpcProxy.NProto.TRspInternalizeNode
	(*TReqAttachTransaction)(nil),                             // 171: NYT.NApi.NRpcProxy.NProto.TReqAttachTransaction
	(*TRspAttachTransaction)(nil),                             // 172: NYT.NApi.NRpcProxy.NProto.TRspAttachTransaction
	(*TReqDetachTransaction)(nil),                             // 173: NYT.NApi.NRpcProxy.NProto.TReqDetachTransaction
	(*TRspDetachTransaction)(nil),                             // 174: NYT.NApi.NRpcProxy.NProto.TRspDetachTransaction
	(*TReqMountTable)(nil),                                    // 175: NYT.NApi.NRpcProxy.NProto.TReqMountTable
	(*TRspMountTable)(nil),                                    // 176: NYT.NApi.NRpcProxy.NProto.TRspMountTable
	(*TReqUnmountTable)(nil),                                  // 177: NYT.NApi.NRpcProxy.NProto.TReqUnmountTable
	(*TRspUnmountTable)(nil),                                  // 178: NYT.NApi.NRpcProxy.NProto.TRspUnmountTable
	(*TReqRemountTable)(nil),                                  // 179: NYT.NApi.NRpcProxy.NProto.TReqRemountTable
	(*TRspRemountTable)(nil),                                  // 180: NYT.NApi.NRpcProxy.NProto.TRspRemountTable
	(*TReqFreezeTable)(nil),                                   // 181: NYT.NApi.NRpcProxy.NProto.TReqFreezeTable
	(*TRspFreezeTable)(nil),                                   // 182: NYT.NApi.NRpcProxy.NProto.TRspFreezeTable
	(*TReqUnfreezeTable)(nil),                                 // 183: NYT.NApi.NRpcProxy.NProto.TReqUnfreezeTable
	(*TRspUnfreezeTable)(nil),                                 // 184: NYT.NApi.NRpcProxy.NProto.TRspUnfreezeTable
	(*TReqReshardTable)(nil),                                  // 185: NYT.NApi.NRpcProxy.NProto.TReqReshardTable
	(*TRspReshardTable)(nil),                                  // 186: NYT.NApi.NRpcProxy.NProto.TRspReshardTable
	(*TReqReshardTableAutomatic)(nil),                         // 187: NYT.NApi.NRpcProxy.NProto.TReqReshardTableAutomatic
	(*TRspReshardTableAutomatic)(nil),                         // 188: NYT.NApi.NRpcProxy.NProto.TRspReshardTableAutomatic
	(*TReqTrimTable)(nil),                                     // 189: NYT.NApi.NRpcProxy.NProto.TReqTrimTable
	(*TRspTrimTable)(nil),                                     // 190: NYT.NApi.NRpcProxy.NProto.TRspTrimTable
	(*TReqAlterTable)(nil),                                    // 191: NYT.NApi.NRpcProxy.NProto.TReqAlterTable
	(*TRspAlterTable)(nil),                                    // 192: NYT.NApi.NRpcProxy.NProto.TRspAlterTable
	(*TReqAlterTableReplica)(nil),                             // 193: NYT.NApi.NRpcProxy.NProto.TReqAlterTableReplica
	(*TRspAlterTableReplica)(nil),                             // 194: NYT.NApi.NRpcProxy.NProto.TRspAlterTableReplica
	(*TReqAlterReplicationCard)(nil),                          // 195: NYT.NApi.NRpcProxy.NProto.TReqAlterReplicationCard
	(*TRspAlterReplicationCard)(nil),                          // 196: NYT.NApi.NRpcProxy.NProto.TRspAlterReplicationCard
	(*TFetchChunkSpecConfig)(nil),                             // 197: NYT.NApi.NRpcProxy.NProto.TFetchChunkSpecConfig
	(*TFetcherConfig)(nil),                                    // 198: NYT.NApi.NRpcProxy.NProto.TFetcherConfig
	(*TReqGetColumnarStatistics)(nil),                         // 199: NYT.NApi.NRpcProxy.NProto.TReqGetColumnarStatistics
	(*TColumnarStatistics)(nil),                               // 200: NYT.NApi.NRpcProxy.NProto.TColumnarStatistics
	(*TRspGetColumnarStatistics)(nil),                         // 201: NYT.NApi.NRpcProxy.NProto.TRspGetColumnarStatistics
	(*TReqDisableChunkLocations)(nil),                         // 202: NYT.NApi.NRpcProxy.NProto.TReqDisableChunkLocations
	(*TRspDisableChunkLocations)(nil),                         // 203: NYT.NApi.NRpcProxy.NProto.TRspDisableChunkLocations
	(*TReqDestroyChunkLocations)(nil),                         // 204: NYT.NApi.NRpcProxy.NProto.TReqDestroyChunkLocations
	(*TRspDestroyChunkLocations)(nil),                         // 205: NYT.NApi.NRpcProxy.NProto.TRspDestroyChunkLocations
	(*TReqResurrectChunkLocations)(nil),                       // 206: NYT.NApi.NRpcProxy.NProto.TReqResurrectChunkLocations
	(*TRspResurrectChunkLocations)(nil),                       // 207: NYT.NApi.NRpcProxy.NProto.TRspResurrectChunkLocations
	(*TReqRequestRestart)(nil),                                // 208: NYT.NApi.NRpcProxy.NProto.TReqRequestRestart
	(*TRspRequestRestart)(nil),                                // 209: NYT.NApi.NRpcProxy.NProto.TRspRequestRestart
	(*TReqPartitionTables)(nil),                               // 210: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables
	(*TMultiTablePartition)(nil),                              // 211: NYT.NApi.NRpcProxy.NProto.TMultiTablePartition
	(*TRspPartitionTables)(nil),                               // 212: NYT.NApi.NRpcProxy.NProto.TRspPartitionTables
	(*TReqBalanceTabletCells)(nil),                            // 213: NYT.NApi.NRpcProxy.NProto.TReqBalanceTabletCells
	(*TRspBalanceTabletCells)(nil),                            // 214: NYT.NApi.NRpcProxy.NProto.TRspBalanceTabletCells
	(*TReqGetFileFromCache)(nil),                              // 215: NYT.NApi.NRpcProxy.NProto.TReqGetFileFromCache
	(*TRspGetFileFromCache)(nil),                              // 216: NYT.NApi.NRpcProxy.NProto.TRspGetFileFromCache
	(*TReqPutFileToCache)(nil),                                // 217: NYT.NApi.NRpcProxy.NProto.TReqPutFileToCache
	(*TRspPutFileToCache)(nil),                                // 218: NYT.NApi.NRpcProxy.NProto.TRspPutFileToCache
	(*TReqStartOperation)(nil),                                // 219: NYT.NApi.NRpcProxy.NProto.TReqStartOperation
	(*TRspStartOperation)(nil),                                // 220: NYT.NApi.NRpcProxy.NProto.TRspStartOperation
	(*TReqAbortOperation)(nil),                                // 221: NYT.NApi.NRpcProxy.NProto.TReqAbortOperation
	(*TRspAbortOperation)(nil),                                // 222: NYT.NApi.NRpcProxy.NProto.TRspAbortOperation
	(*TReqSuspendOperation)(nil),                              // 223: NYT.NApi.NRpcProxy.NProto.TReqSuspendOperation
	(*TRspSuspendOperation)(nil),                              // 224: NYT.NApi.NRpcProxy.NProto.TRspSuspendOperation
	(*TReqResumeOperation)(nil),                               // 225: NYT.NApi.NRpcProxy.NProto.TReqResumeOperation
	(*TRspResumeOperation)(nil),                               // 226: NYT.NApi.NRpcProxy.NProto.TRspResumeOperation
	(*TReqCompleteOperation)(nil),                             // 227: NYT.NApi.NRpcProxy.NProto.TReqCompleteOperation
	(*TRspCompleteOperation)(nil),                             // 228: NYT.NApi.NRpcProxy.NProto.TRspCompleteOperation
	(*TReqUpdateOperationParameters)(nil),                     // 229: NYT.NApi.NRpcProxy.NProto.TReqUpdateOperationParameters
	(*TRspUpdateOperationParameters)(nil),                     // 230: NYT.NApi.NRpcProxy.NProto.TRspUpdateOperationParameters
	(*TReqPatchOperationSpec)(nil),                            // 231: NYT.NApi.NRpcProxy.NProto.TReqPatchOperationSpec
	(*TRspPatchOperationSpec)(nil),                            // 232: NYT.NApi.NRpcProxy.NProto.TRspPatchOperationSpec
	(*TReqGetOperation)(nil),                                  // 233: NYT.NApi.NRpcProxy.NProto.TReqGetOperation
	(*TRspGetOperation)(nil),                                  // 234: NYT.NApi.NRpcProxy.NProto.TRspGetOperation
	(*TReqListOperations)(nil),                                // 235: NYT.NApi.NRpcProxy.NProto.TReqListOperations
	(*TRspListOperations)(nil),                                // 236: NYT.NApi.NRpcProxy.NProto.TRspListOperations
	(*TReqListJobs)(nil),                                      // 237: NYT.NApi.NRpcProxy.NProto.TReqListJobs
	(*TRspListJobs)(nil),                                      // 238: NYT.NApi.NRpcProxy.NProto.TRspListJobs
	(*TReqGetJob)(nil),                                        // 239: NYT.NApi.NRpcProxy.NProto.TReqGetJob
	(*TRspGetJob)(nil),                                        // 240: NYT.NApi.NRpcProxy.NProto.TRspGetJob
	(*TReqGetJobInputPaths)(nil),                              // 241: NYT.NApi.NRpcProxy.NProto.TReqGetJobInputPaths
	(*TRspGetJobInputPaths)(nil),                              // 242: NYT.NApi.NRpcProxy.NProto.TRspGetJobInputPaths
	(*TReqGetJobSpec)(nil),                                    // 243: NYT.NApi.NRpcProxy.NProto.TReqGetJobSpec
	(*TRspGetJobSpec)(nil),                                    // 244: NYT.NApi.NRpcProxy.NProto.TRspGetJobSpec
	(*TReqGetJobStderr)(nil),                                  // 245: NYT.NApi.NRpcProxy.NProto.TReqGetJobStderr
	(*TRspGetJobStderr)(nil),                                  // 246: NYT.NApi.NRpcProxy.NProto.TRspGetJobStderr
	(*TReqGetJobTrace)(nil),                                   // 247: NYT.NApi.NRpcProxy.NProto.TReqGetJobTrace
	(*TRspGetJobTrace)(nil),                                   // 248: NYT.NApi.NRpcProxy.NProto.TRspGetJobTrace
	(*TReqGetJobFailContext)(nil),                             // 249: NYT.NApi.NRpcProxy.NProto.TReqGetJobFailContext
	(*TRspGetJobFailContext)(nil),                             // 250: NYT.NApi.NRpcProxy.NProto.TRspGetJobFailContext
	(*TReqDumpJobContext)(nil),                                // 251: NYT.NApi.NRpcProxy.NProto.TReqDumpJobContext
	(*TRspDumpJobContext)(nil),                                // 252: NYT.NApi.NRpcProxy.NProto.TRspDumpJobContext
	(*TReqAbandonJob)(nil),                                    // 253: NYT.NApi.NRpcProxy.NProto.TReqAbandonJob
	(*TRspAbandonJob)(nil),                                    // 254: NYT.NApi.NRpcProxy.NProto.TRspAbandonJob
	(*TReqPollJobShell)(nil),                                  // 255: NYT.NApi.NRpcProxy.NProto.TReqPollJobShell
	(*TRspPollJobShell)(nil),                                  // 256: NYT.NApi.NRpcProxy.NProto.TRspPollJobShell
	(*TReqAbortJob)(nil),                                      // 257: NYT.NApi.NRpcProxy.NProto.TReqAbortJob
	(*TRspAbortJob)(nil),                                      // 258: NYT.NApi.NRpcProxy.NProto.TRspAbortJob
	(*TReqDumpJobProxyLog)(nil),                               // 259: NYT.NApi.NRpcProxy.NProto.TReqDumpJobProxyLog
	(*TRspDumpJobProxyLog)(nil),                               // 260: NYT.NApi.NRpcProxy.NProto.TRspDumpJobProxyLog
	(*TReqReadFile)(nil),                                      // 261: NYT.NApi.NRpcProxy.NProto.TReqReadFile
	(*TReadFileMeta)(nil),                                     // 262: NYT.NApi.NRpcProxy.NProto.TReadFileMeta
	(*TRspReadFile)(nil),                                      // 263: NYT.NApi.NRpcProxy.NProto.TRspReadFile
	(*TReqWriteFile)(nil),                                     // 264: NYT.NApi.NRpcProxy.NProto.TReqWriteFile
	(*TRspWriteFile)(nil),                                     // 265: NYT.NApi.NRpcProxy.NProto.TRspWriteFile
	(*TReqReadJournal)(nil),                                   // 266: NYT.NApi.NRpcProxy.NProto.TReqReadJournal
	(*TRspReadJournal)(nil),                                   // 267: NYT.NApi.NRpcProxy.NProto.TRspReadJournal
	(*TReqWriteJournal)(nil),                                  // 268: NYT.NApi.NRpcProxy.NProto.TReqWriteJournal
	(*TRspWriteJournal)(nil),                                  // 269: NYT.NApi.NRpcProxy.NProto.TRspWriteJournal
	(*TReqTruncateJournal)(nil),                               // 270: NYT.NApi.NRpcProxy.NProto.TReqTruncateJournal
	(*TRspTruncateJournal)(nil),                               // 271: NYT.NApi.NRpcProxy.NProto.TRspTruncateJournal
	(*TReqReadTable)(nil),                                     // 272: NYT.NApi.NRpcProxy.NProto.TReqReadTable
	(*TRspReadTableMeta)(nil),                                 // 273: NYT.NApi.NRpcProxy.NProto.TRspReadTableMeta
	(*TRspReadTable)(nil),                                     // 274: NYT.NApi.NRpcProxy.NProto.TRspReadTable
	(*TReqWriteTable)(nil),                                    // 275: NYT.NApi.NRpcProxy.NProto.TReqWriteTable
	(*TWriteTableMeta)(nil),                                   // 276: NYT.NApi.NRpcProxy.NProto.TWriteTableMeta
	(*TRspWriteTable)(nil),                                    // 277: NYT.NApi.NRpcProxy.NProto.TRspWriteTable
	(*TReqGetJobInput)(nil),                                   // 278: NYT.NApi.NRpcProxy.NProto.TReqGetJobInput
	(*TRspGetJobInput)(nil),                                   // 279: NYT.NApi.NRpcProxy.NProto.TRspGetJobInput
	(*TReqAddMember)(nil),                                     // 280: NYT.NApi.NRpcProxy.NProto.TReqAddMember
	(*TRspAddMember)(nil),                                     // 281: NYT.NApi.NRpcProxy.NProto.TRspAddMember
	(*TReqRemoveMember)(nil),                                  // 282: NYT.NApi.NRpcProxy.NProto.TReqRemoveMember
	(*TRspRemoveMember)(nil),                                  // 283: NYT.NApi.NRpcProxy.NProto.TRspRemoveMember
	(*TReqCheckPermission)(nil),                               // 284: NYT.NApi.NRpcProxy.NProto.TReqCheckPermission
	(*TRspCheckPermission)(nil),                               // 285: NYT.NApi.NRpcProxy.NProto.TRspCheckPermission
	(*TReqCheckPermissionByAcl)(nil),                          // 286: NYT.NApi.NRpcProxy.NProto.TReqCheckPermissionByAcl
	(*TRspCheckPermissionByAcl)(nil),                          // 287: NYT.NApi.NRpcProxy.NProto.TRspCheckPermissionByAcl
	(*TReqTransferAccountResources)(nil),                      // 288: NYT.NApi.NRpcProxy.NProto.TReqTransferAccountResources
	(*TRspTransferAccountResources)(nil),                      // 289: NYT.NApi.NRpcProxy.NProto.TRspTransferAccountResources
	(*TReqTransferPoolResources)(nil),                         // 290: NYT.NApi.NRpcProxy.NProto.TReqTransferPoolResources
	(*TRspTransferPoolResources)(nil),                         // 291: NYT.NApi.NRpcProxy.NProto.TRspTransferPoolResources
	(*TReqCheckClusterLiveness)(nil),                          // 292: NYT.NApi.NRpcProxy.NProto.TReqCheckClusterLiveness
	(*TRspCheckClusterLiveness)(nil),                          // 293: NYT.NApi.NRpcProxy.NProto.TRspCheckClusterLiveness
	(*TReqGetPipelineSpec)(nil),                               // 294: NYT.NApi.NRpcProxy.NProto.TReqGetPipelineSpec
	(*TRspGetPipelineSpec)(nil),                               // 295: NYT.NApi.NRpcProxy.NProto.TRspGetPipelineSpec
	(*TReqSetPipelineSpec)(nil),                               // 296: NYT.NApi.NRpcProxy.NProto.TReqSetPipelineSpec
	(*TRspSetPipelineSpec)(nil),                               // 297: NYT.NApi.NRpcProxy.NProto.TRspSetPipelineSpec
	(*TReqGetPipelineDynamicSpec)(nil),                        // 298: NYT.NApi.NRpcProxy.NProto.TReqGetPipelineDynamicSpec
	(*TRspGetPipelineDynamicSpec)(nil),                        // 299: NYT.NApi.NRpcProxy.NProto.TRspGetPipelineDynamicSpec
	(*TReqSetPipelineDynamicSpec)(nil),                        // 300: NYT.NApi.NRpcProxy.NProto.TReqSetPipelineDynamicSpec
	(*TRspSetPipelineDynamicSpec)(nil),                        // 301: NYT.NApi.NRpcProxy.NProto.TRspSetPipelineDynamicSpec
	(*TReqStartPipeline)(nil),                                 // 302: NYT.NApi.NRpcProxy.NProto.TReqStartPipeline
	(*TRspStartPipeline)(nil),                                 // 303: NYT.NApi.NRpcProxy.NProto.TRspStartPipeline
	(*TReqPausePipeline)(nil),                                 // 304: NYT.NApi.NRpcProxy.NProto.TReqPausePipeline
	(*TRspPausePipeline)(nil),                                 // 305: NYT.NApi.NRpcProxy.NProto.TRspPausePipeline
	(*TReqStopPipeline)(nil),                                  // 306: NYT.NApi.NRpcProxy.NProto.TReqStopPipeline
	(*TRspStopPipeline)(nil),                                  // 307: NYT.NApi.NRpcProxy.NProto.TRspStopPipeline
	(*TReqGetPipelineState)(nil),                              // 308: NYT.NApi.NRpcProxy.NProto.TReqGetPipelineState
	(*TRspGetPipelineState)(nil),                              // 309: NYT.NApi.NRpcProxy.NProto.TRspGetPipelineState
	(*TReqGetFlowView)(nil),                                   // 310: NYT.NApi.NRpcProxy.NProto.TReqGetFlowView
	(*TRspGetFlowView)(nil),                                   // 311: NYT.NApi.NRpcProxy.NProto.TRspGetFlowView
	(*TOperation)(nil),                                        // 312: NYT.NApi.NRpcProxy.NProto.TOperation
	(*TListOperationsResult)(nil),                             // 313: NYT.NApi.NRpcProxy.NProto.TListOperationsResult
	(*TJob)(nil),                                              // 314: NYT.NApi.NRpcProxy.NProto.TJob
	(*TListJobsStatistics)(nil),                               // 315: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics
	(*TListJobsResult)(nil),                                   // 316: NYT.NApi.NRpcProxy.NProto.TListJobsResult
	(*TJobTraceEvent)(nil),                                    // 317: NYT.NApi.NRpcProxy.NProto.TJobTraceEvent
	(*TGetFileFromCacheResult)(nil),                           // 318: NYT.NApi.NRpcProxy.NProto.TGetFileFromCacheResult
	(*TPutFileToCacheResult)(nil),                             // 319: NYT.NApi.NRpcProxy.NProto.TPutFileToCacheResult
	(*TCheckPermissionResult)(nil),                            // 320: NYT.NApi.NRpcProxy.NProto.TCheckPermissionResult
	(*TCheckPermissionByAclResult)(nil),                       // 321: NYT.NApi.NRpcProxy.NProto.TCheckPermissionByAclResult
	(*TReqStartQuery)(nil),                                    // 322: NYT.NApi.NRpcProxy.NProto.TReqStartQuery
	(*TRspStartQuery)(nil),                                    // 323: NYT.NApi.NRpcProxy.NProto.TRspStartQuery
	(*TReqAbortQuery)(nil),                                    // 324: NYT.NApi.NRpcProxy.NProto.TReqAbortQuery
	(*TRspAbortQuery)(nil),                                    // 325: NYT.NApi.NRpcProxy.NProto.TRspAbortQuery
	(*TReqGetQueryResult)(nil),                                // 326: NYT.NApi.NRpcProxy.NProto.TReqGetQueryResult
	(*TRspGetQueryResult)(nil),                                // 327: NYT.NApi.NRpcProxy.NProto.TRspGetQueryResult
	(*TReqReadQueryResult)(nil),                               // 328: NYT.NApi.NRpcProxy.NProto.TReqReadQueryResult
	(*TRspReadQueryResult)(nil),                               // 329: NYT.NApi.NRpcProxy.NProto.TRspReadQueryResult
	(*TQuery)(nil),                                            // 330: NYT.NApi.NRpcProxy.NProto.TQuery
	(*TReqGetQuery)(nil),                                      // 331: NYT.NApi.NRpcProxy.NProto.TReqGetQuery
	(*TRspGetQuery)(nil),                                      // 332: NYT.NApi.NRpcProxy.NProto.TRspGetQuery
	(*TReqListQueries)(nil),                                   // 333: NYT.NApi.NRpcProxy.NProto.TReqListQueries
	(*TRspListQueries)(nil),                                   // 334: NYT.NApi.NRpcProxy.NProto.TRspListQueries
	(*TReqAlterQuery)(nil),                                    // 335: NYT.NApi.NRpcProxy.NProto.TReqAlterQuery
	(*TRspAlterQuery)(nil),                                    // 336: NYT.NApi.NRpcProxy.NProto.TRspAlterQuery
	(*TReqGetQueryTrackerInfo)(nil),                           // 337: NYT.NApi.NRpcProxy.NProto.TReqGetQueryTrackerInfo
	(*TRspGetQueryTrackerInfo)(nil),                           // 338: NYT.NApi.NRpcProxy.NProto.TRspGetQueryTrackerInfo
	(*TReqStartDistributedWriteSession)(nil),                  // 339: NYT.NApi.NRpcProxy.NProto.TReqStartDistributedWriteSession
	(*TRspStartDistributedWriteSession)(nil),                  // 340: NYT.NApi.NRpcProxy.NProto.TRspStartDistributedWriteSession
	(*TReqFinishDistributedWriteSession)(nil),                 // 341: NYT.NApi.NRpcProxy.NProto.TReqFinishDistributedWriteSession
	(*TRspFinishDistributedWriteSession)(nil),                 // 342: NYT.NApi.NRpcProxy.NProto.TRspFinishDistributedWriteSession
	(*TReqWriteTableFragment)(nil),                            // 343: NYT.NApi.NRpcProxy.NProto.TReqWriteTableFragment
	(*TRspWriteTableFragment)(nil),                            // 344: NYT.NApi.NRpcProxy.NProto.TRspWriteTableFragment
	(*TReqStartShuffle)(nil),                                  // 345: NYT.NApi.NRpcProxy.NProto.TReqStartShuffle
	(*TRspStartShuffle)(nil),                                  // 346: NYT.NApi.NRpcProxy.NProto.TRspStartShuffle
	(*TReqReadShuffleData)(nil),                               // 347: NYT.NApi.NRpcProxy.NProto.TReqReadShuffleData
	(*TRspReadShuffleData)(nil),                               // 348: NYT.NApi.NRpcProxy.NProto.TRspReadShuffleData
	(*TReqWriteShuffleData)(nil),                              // 349: NYT.NApi.NRpcProxy.NProto.TReqWriteShuffleData
	(*TRspWriteShuffleData)(nil),                              // 350: NYT.NApi.NRpcProxy.NProto.TRspWriteShuffleData
	(*TRowsetDescriptor_TNameTableEntry)(nil),                 // 351: NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor.TNameTableEntry
	(*TReqStartTransaction_TReplicateToMasterCellTags)(nil),   // 352: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.TReplicateToMasterCellTags
	(*TReqMultiLookup_TSubrequest)(nil),                       // 353: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.TSubrequest
	(*TRspMultiLookup_TSubresponse)(nil),                      // 354: NYT.NApi.NRpcProxy.NProto.TRspMultiLookup.TSubresponse
	(*TReqRegisterQueueConsumer_TRegistrationPartitions)(nil), // 355: NYT.NApi.NRpcProxy.NProto.TReqRegisterQueueConsumer.TRegistrationPartitions
	(*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration)(nil),                         // 356: NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations.TQueueConsumerRegistration
	(*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions)(nil), // 357: NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations.TQueueConsumerRegistration.TRegistrationPartitions
	(*TRspGetTabletInfos_TTabletInfo)(nil),                                                        // 358: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo
	(*TRspGetTabletInfos_TTabletInfo_TReplicaInfo)(nil),                                           // 359: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo.TReplicaInfo
	(*TRspGetTabletErrors_TErrorList)(nil),                                                        // 360: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.TErrorList
	nil,                                                                                           // 361: NYT.NApi.NRpcProxy.NProto.TRspAddMaintenance.IdPerTargetEntry
	nil,                                                                                           // 362: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.RemovedMaintenanceCountsEntry
	(*TRspRemoveMaintenance_TMaintenanceCounts)(nil),                                              // 363: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.TMaintenanceCounts
	nil, // 364: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.RemovedMaintenanceCountsPerTargetEntry
	nil, // 365: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.TMaintenanceCounts.CountsEntry
	(*TPrerequisiteOptions_TTransactionPrerequisite)(nil),                    // 366: NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.TTransactionPrerequisite
	(*TPrerequisiteOptions_TRevisionPrerequisite)(nil),                       // 367: NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.TRevisionPrerequisite
	(*TBackupManifest_TClusterManifest)(nil),                                 // 368: NYT.NApi.NRpcProxy.NProto.TBackupManifest.TClusterManifest
	(*TReqMultisetAttributesNode_TSubrequest)(nil),                           // 369: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.TSubrequest
	(*TReqConcatenateNodes_TFetcher)(nil),                                    // 370: NYT.NApi.NRpcProxy.NProto.TReqConcatenateNodes.TFetcher
	(*TReqPartitionTables_TChunkSliceFetcherConfig)(nil),                     // 371: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.TChunkSliceFetcherConfig
	(*TMultiTablePartition_TStatistics)(nil),                                 // 372: NYT.NApi.NRpcProxy.NProto.TMultiTablePartition.TStatistics
	(*TReqCheckPermission_TColumns)(nil),                                     // 373: NYT.NApi.NRpcProxy.NProto.TReqCheckPermission.TColumns
	(*TRspCheckPermission_TColumns)(nil),                                     // 374: NYT.NApi.NRpcProxy.NProto.TRspCheckPermission.TColumns
	(*TOperation_TStrings)(nil),                                              // 375: NYT.NApi.NRpcProxy.NProto.TOperation.TStrings
	(*TListOperationsResult_TPoolCounts)(nil),                                // 376: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolCounts
	(*TListOperationsResult_TUserCounts)(nil),                                // 377: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TUserCounts
	(*TListOperationsResult_TOperationStateCounts)(nil),                      // 378: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationStateCounts
	(*TListOperationsResult_TOperationTypeCounts)(nil),                       // 379: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationTypeCounts
	(*TListOperationsResult_TPoolTreeCounts)(nil),                            // 380: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolTreeCounts
	(*TListOperationsResult_TPoolCounts_TPoolCount)(nil),                     // 381: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolCounts.TPoolCount
	(*TListOperationsResult_TUserCounts_TUserCount)(nil),                     // 382: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TUserCounts.TUserCount
	(*TListOperationsResult_TOperationStateCounts_TOperationStateCount)(nil), // 383: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationStateCounts.TOperationStateCount
	(*TListOperationsResult_TOperationTypeCounts_TOperationTypeCount)(nil),   // 384: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationTypeCounts.TOperationTypeCount
	nil, // 385: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolTreeCounts.EntriesEntry
	(*TListJobsStatistics_TJobStateCounts)(nil),                // 386: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobStateCounts
	(*TListJobsStatistics_TJobTypeCounts)(nil),                 // 387: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobTypeCounts
	(*TListJobsStatistics_TJobStateCounts_TJobStateCount)(nil), // 388: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobStateCounts.TJobStateCount
	(*TListJobsStatistics_TJobTypeCounts_TJobTypeCount)(nil),   // 389: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobTypeCounts.TJobTypeCount
	(*TReqStartQuery_TQueryFile)(nil),                          // 390: NYT.NApi.NRpcProxy.NProto.TReqStartQuery.TQueryFile
	(*TReqStartQuery_TAccessControlObjects)(nil),               // 391: NYT.NApi.NRpcProxy.NProto.TReqStartQuery.TAccessControlObjects
	(*TReqReadQueryResult_TColumns)(nil),                       // 392: NYT.NApi.NRpcProxy.NProto.TReqReadQueryResult.TColumns
	(*TReqAlterQuery_TAccessControlObjects)(nil),               // 393: NYT.NApi.NRpcProxy.NProto.TReqAlterQuery.TAccessControlObjects
	(*chunk_client.TDataStatistics)(nil),                       // 394: NYT.NChunkClient.NProto.TDataStatistics
	(*misc.TGuid)(nil),                                         // 395: NYT.NProto.TGuid
	(*ytree.TAttributeDictionary)(nil),                         // 396: NYT.NYTree.NProto.TAttributeDictionary
	(*hive.TTimestampMap)(nil),                                 // 397: NYT.NHiveClient.NProto.TTimestampMap
	(*table_client.TVersionedReadOptions)(nil),                 // 398: NYT.NTableClient.NProto.TVersionedReadOptions
	(*chaos_client.TReplicationProgress)(nil),                  // 399: NYT.NChaosClient.NProto.TReplicationProgress
	(*tablet_client.TLockMask)(nil),                            // 400: NYT.NTabletClient.NProto.TLockMask
	(*ytree.TAttributeFilter)(nil),                             // 401: NYT.NYTree.NProto.TAttributeFilter
	(*ytree.TReadRequestComplexityLimits)(nil),                 // 402: NYT.NYTree.NProto.TReadRequestComplexityLimits
	(*misc.THyperLogLogDigest)(nil),                            // 403: NYT.NProto.THyperLogLogDigest
	(*scheduler.TSpecPatch)(nil),                               // 404: NYT.NScheduler.NProto.TSpecPatch
	(*misc.TError)(nil),                                        // 405: NYT.NProto.TError
}
var file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_depIdxs = []int32{
	7,   // 0: NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor.rowset_kind:type_name -> NYT.NApi.NRpcProxy.NProto.ERowsetKind
	8,   // 1: NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor.rowset_format:type_name -> NYT.NApi.NRpcProxy.NProto.ERowsetFormat
	351, // 2: NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor.name_table_entries:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor.TNameTableEntry
	133, // 3: NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor.schema:type_name -> NYT.NApi.NRpcProxy.NProto.TTableSchema
	394, // 4: NYT.NApi.NRpcProxy.NProto.TRowsetStatistics.data_statistics:type_name -> NYT.NChunkClient.NProto.TDataStatistics
	0,   // 5: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.type:type_name -> NYT.NApi.NRpcProxy.NProto.ETransactionType
	395, // 6: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.id:type_name -> NYT.NProto.TGuid
	395, // 7: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.parent_id:type_name -> NYT.NProto.TGuid
	2,   // 8: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.atomicity:type_name -> NYT.NApi.NRpcProxy.NProto.EAtomicity
	3,   // 9: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.durability:type_name -> NYT.NApi.NRpcProxy.NProto.EDurability
	396, // 10: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.attributes:type_name -> NYT.NYTree.NProto.TAttributeDictionary
	395, // 11: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.prerequisite_transaction_ids:type_name -> NYT.NProto.TGuid
	352, // 12: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.replicate_to_master_cell_tags:type_name -> NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.TReplicateToMasterCellTags
	117, // 13: NYT.NApi.NRpcProxy.NProto.TReqStartTransaction.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 14: NYT.NApi.NRpcProxy.NProto.TRspStartTransaction.id:type_name -> NYT.NProto.TGuid
	395, // 15: NYT.NApi.NRpcProxy.NProto.TReqPingTransaction.transaction_id:type_name -> NYT.NProto.TGuid
	395, // 16: NYT.NApi.NRpcProxy.NProto.TReqCommitTransaction.transaction_id:type_name -> NYT.NProto.TGuid
	395, // 17: NYT.NApi.NRpcProxy.NProto.TReqCommitTransaction.additional_participant_cell_ids:type_name -> NYT.NProto.TGuid
	115, // 18: NYT.NApi.NRpcProxy.NProto.TReqCommitTransaction.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 19: NYT.NApi.NRpcProxy.NProto.TReqCommitTransaction.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	397, // 20: NYT.NApi.NRpcProxy.NProto.TRspCommitTransaction.commit_timestamps:type_name -> NYT.NHiveClient.NProto.TTimestampMap
	395, // 21: NYT.NApi.NRpcProxy.NProto.TReqFlushTransaction.transaction_id:type_name -> NYT.NProto.TGuid
	395, // 22: NYT.NApi.NRpcProxy.NProto.TRspFlushTransaction.participant_cell_ids:type_name -> NYT.NProto.TGuid
	395, // 23: NYT.NApi.NRpcProxy.NProto.TReqAbortTransaction.transaction_id:type_name -> NYT.NProto.TGuid
	117, // 24: NYT.NApi.NRpcProxy.NProto.TReqAbortTransaction.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	120, // 25: NYT.NApi.NRpcProxy.NProto.TReqLookupRows.tablet_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletReadOptions
	5,   // 26: NYT.NApi.NRpcProxy.NProto.TReqLookupRows.replica_consistency:type_name -> NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	19,  // 27: NYT.NApi.NRpcProxy.NProto.TReqLookupRows.multiplexing_band:type_name -> NYT.NApi.NRpcProxy.NProto.EMultiplexingBand
	30,  // 28: NYT.NApi.NRpcProxy.NProto.TReqLookupRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	398, // 29: NYT.NApi.NRpcProxy.NProto.TReqLookupRows.versioned_read_options:type_name -> NYT.NTableClient.NProto.TVersionedReadOptions
	30,  // 30: NYT.NApi.NRpcProxy.NProto.TRspLookupRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	44,  // 31: NYT.NApi.NRpcProxy.NProto.TReqVersionedLookupRows.retention_config:type_name -> NYT.NApi.NRpcProxy.NProto.TRetentionConfig
	120, // 32: NYT.NApi.NRpcProxy.NProto.TReqVersionedLookupRows.tablet_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletReadOptions
	5,   // 33: NYT.NApi.NRpcProxy.NProto.TReqVersionedLookupRows.replica_consistency:type_name -> NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	19,  // 34: NYT.NApi.NRpcProxy.NProto.TReqVersionedLookupRows.multiplexing_band:type_name -> NYT.NApi.NRpcProxy.NProto.EMultiplexingBand
	30,  // 35: NYT.NApi.NRpcProxy.NProto.TReqVersionedLookupRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	30,  // 36: NYT.NApi.NRpcProxy.NProto.TRspVersionedLookupRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	353, // 37: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.subrequests:type_name -> NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.TSubrequest
	120, // 38: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.tablet_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletReadOptions
	5,   // 39: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.replica_consistency:type_name -> NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	19,  // 40: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.multiplexing_band:type_name -> NYT.NApi.NRpcProxy.NProto.EMultiplexingBand
	354, // 41: NYT.NApi.NRpcProxy.NProto.TRspMultiLookup.subresponses:type_name -> NYT.NApi.NRpcProxy.NProto.TRspMultiLookup.TSubresponse
	49,  // 42: NYT.NApi.NRpcProxy.NProto.TQueryStatistics.inner_statistics:type_name -> NYT.NApi.NRpcProxy.NProto.TQueryStatistics
	5,   // 43: NYT.NApi.NRpcProxy.NProto.TReqSelectRows.replica_consistency:type_name -> NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	398, // 44: NYT.NApi.NRpcProxy.NProto.TReqSelectRows.versioned_read_options:type_name -> NYT.NTableClient.NProto.TVersionedReadOptions
	118, // 45: NYT.NApi.NRpcProxy.NProto.TReqSelectRows.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	30,  // 46: NYT.NApi.NRpcProxy.NProto.TRspSelectRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	49,  // 47: NYT.NApi.NRpcProxy.NProto.TRspSelectRows.statistics:type_name -> NYT.NApi.NRpcProxy.NProto.TQueryStatistics
	395, // 48: NYT.NApi.NRpcProxy.NProto.TReqAdvanceQueueConsumer.transaction_id:type_name -> NYT.NProto.TGuid
	395, // 49: NYT.NApi.NRpcProxy.NProto.TReqPushQueueProducer.transaction_id:type_name -> NYT.NProto.TGuid
	30,  // 50: NYT.NApi.NRpcProxy.NProto.TReqPushQueueProducer.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	56,  // 51: NYT.NApi.NRpcProxy.NProto.TReqPullQueue.row_batch_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TRowBatchReadOptions
	5,   // 52: NYT.NApi.NRpcProxy.NProto.TReqPullQueue.replica_consistency:type_name -> NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	30,  // 53: NYT.NApi.NRpcProxy.NProto.TRspPullQueue.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	56,  // 54: NYT.NApi.NRpcProxy.NProto.TReqPullQueueConsumer.row_batch_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TRowBatchReadOptions
	5,   // 55: NYT.NApi.NRpcProxy.NProto.TReqPullQueueConsumer.replica_consistency:type_name -> NYT.NApi.NRpcProxy.NProto.EReplicaConsistency
	30,  // 56: NYT.NApi.NRpcProxy.NProto.TRspPullQueueConsumer.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	355, // 57: NYT.NApi.NRpcProxy.NProto.TReqRegisterQueueConsumer.partitions:type_name -> NYT.NApi.NRpcProxy.NProto.TReqRegisterQueueConsumer.TRegistrationPartitions
	356, // 58: NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations.registrations:type_name -> NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations.TQueueConsumerRegistration
	395, // 59: NYT.NApi.NRpcProxy.NProto.TReplicationRowIndex.tablet_id:type_name -> NYT.NProto.TGuid
	395, // 60: NYT.NApi.NRpcProxy.NProto.TReqPullRows.upstream_replica_id:type_name -> NYT.NProto.TGuid
	399, // 61: NYT.NApi.NRpcProxy.NProto.TReqPullRows.replication_progress:type_name -> NYT.NChaosClient.NProto.TReplicationProgress
	73,  // 62: NYT.NApi.NRpcProxy.NProto.TReqPullRows.start_replication_row_indexes:type_name -> NYT.NApi.NRpcProxy.NProto.TReplicationRowIndex
	399, // 63: NYT.NApi.NRpcProxy.NProto.TRspPullRows.replication_progress:type_name -> NYT.NChaosClient.NProto.TReplicationProgress
	73,  // 64: NYT.NApi.NRpcProxy.NProto.TRspPullRows.end_replication_row_indexes:type_name -> NYT.NApi.NRpcProxy.NProto.TReplicationRowIndex
	30,  // 65: NYT.NApi.NRpcProxy.NProto.TRspPullRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	30,  // 66: NYT.NApi.NRpcProxy.NProto.TReqGetInSyncReplicas.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	395, // 67: NYT.NApi.NRpcProxy.NProto.TRspGetInSyncReplicas.replica_ids:type_name -> NYT.NProto.TGuid
	358, // 68: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.tablets:type_name -> NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo
	395, // 69: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.tablet_ids:type_name -> NYT.NProto.TGuid
	360, // 70: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.tablet_errors:type_name -> NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.TErrorList
	395, // 71: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.replica_ids:type_name -> NYT.NProto.TGuid
	360, // 72: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.replication_errors:type_name -> NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.TErrorList
	395, // 73: NYT.NApi.NRpcProxy.NProto.TReqModifyRows.transaction_id:type_name -> NYT.NProto.TGuid
	1,   // 74: NYT.NApi.NRpcProxy.NProto.TReqModifyRows.row_modification_types:type_name -> NYT.NApi.NRpcProxy.NProto.ERowModificationType
	395, // 75: NYT.NApi.NRpcProxy.NProto.TReqModifyRows.upstream_replica_id:type_name -> NYT.NProto.TGuid
	400, // 76: NYT.NApi.NRpcProxy.NProto.TReqModifyRows.row_locks:type_name -> NYT.NTabletClient.NProto.TLockMask
	30,  // 77: NYT.NApi.NRpcProxy.NProto.TReqModifyRows.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	395, // 78: NYT.NApi.NRpcProxy.NProto.TReqBatchModifyRows.transaction_id:type_name -> NYT.NProto.TGuid
	395, // 79: NYT.NApi.NRpcProxy.NProto.TReqBuildSnapshot.cell_id:type_name -> NYT.NProto.TGuid
	395, // 80: NYT.NApi.NRpcProxy.NProto.TReqExitReadOnly.cell_id:type_name -> NYT.NProto.TGuid
	395, // 81: NYT.NApi.NRpcProxy.NProto.TReqDiscombobulateNonvotingPeers.cell_id:type_name -> NYT.NProto.TGuid
	395, // 82: NYT.NApi.NRpcProxy.NProto.TReqGCCollect.cell_id:type_name -> NYT.NProto.TGuid
	395, // 83: NYT.NApi.NRpcProxy.NProto.TReqSuspendCoordinator.coordinator_cell_id:type_name -> NYT.NProto.TGuid
	395, // 84: NYT.NApi.NRpcProxy.NProto.TReqResumeCoordinator.coordinator_cell_id:type_name -> NYT.NProto.TGuid
	395, // 85: NYT.NApi.NRpcProxy.NProto.TReqMigrateReplicationCards.chaos_cell_id:type_name -> NYT.NProto.TGuid
	395, // 86: NYT.NApi.NRpcProxy.NProto.TReqMigrateReplicationCards.destination_cell_id:type_name -> NYT.NProto.TGuid
	395, // 87: NYT.NApi.NRpcProxy.NProto.TReqMigrateReplicationCards.replication_card_ids:type_name -> NYT.NProto.TGuid
	395, // 88: NYT.NApi.NRpcProxy.NProto.TReqSuspendChaosCells.cell_ids:type_name -> NYT.NProto.TGuid
	395, // 89: NYT.NApi.NRpcProxy.NProto.TReqResumeChaosCells.cell_ids:type_name -> NYT.NProto.TGuid
	395, // 90: NYT.NApi.NRpcProxy.NProto.TReqSuspendTabletCells.cell_ids:type_name -> NYT.NProto.TGuid
	395, // 91: NYT.NApi.NRpcProxy.NProto.TReqResumeTabletCells.cell_ids:type_name -> NYT.NProto.TGuid
	24,  // 92: NYT.NApi.NRpcProxy.NProto.TReqAddMaintenance.component:type_name -> NYT.NApi.NRpcProxy.NProto.EMaintenanceComponent
	23,  // 93: NYT.NApi.NRpcProxy.NProto.TReqAddMaintenance.type:type_name -> NYT.NApi.NRpcProxy.NProto.EMaintenanceType
	395, // 94: NYT.NApi.NRpcProxy.NProto.TRspAddMaintenance.id:type_name -> NYT.NProto.TGuid
	361, // 95: NYT.NApi.NRpcProxy.NProto.TRspAddMaintenance.id_per_target:type_name -> NYT.NApi.NRpcProxy.NProto.TRspAddMaintenance.IdPerTargetEntry
	24,  // 96: NYT.NApi.NRpcProxy.NProto.TReqRemoveMaintenance.component:type_name -> NYT.NApi.NRpcProxy.NProto.EMaintenanceComponent
	395, // 97: NYT.NApi.NRpcProxy.NProto.TReqRemoveMaintenance.ids:type_name -> NYT.NProto.TGuid
	23,  // 98: NYT.NApi.NRpcProxy.NProto.TReqRemoveMaintenance.type:type_name -> NYT.NApi.NRpcProxy.NProto.EMaintenanceType
	362, // 99: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.removed_maintenance_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.RemovedMaintenanceCountsEntry
	364, // 100: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.removed_maintenance_counts_per_target:type_name -> NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.RemovedMaintenanceCountsPerTargetEntry
	395, // 101: NYT.NApi.NRpcProxy.NProto.TTransactionalOptions.transaction_id:type_name -> NYT.NProto.TGuid
	366, // 102: NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.transactions:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.TTransactionPrerequisite
	367, // 103: NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.revisions:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.TRevisionPrerequisite
	6,   // 104: NYT.NApi.NRpcProxy.NProto.TMasterReadOptions.read_from:type_name -> NYT.NApi.NRpcProxy.NProto.EMasterReadKind
	395, // 105: NYT.NApi.NRpcProxy.NProto.TMutatingOptions.mutation_id:type_name -> NYT.NProto.TGuid
	9,   // 106: NYT.NApi.NRpcProxy.NProto.TTabletReadOptions.read_from:type_name -> NYT.NApi.NRpcProxy.NProto.ETabletReadKind
	114, // 107: NYT.NApi.NRpcProxy.NProto.TReqExistsNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 108: NYT.NApi.NRpcProxy.NProto.TReqExistsNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	116, // 109: NYT.NApi.NRpcProxy.NProto.TReqExistsNode.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	118, // 110: NYT.NApi.NRpcProxy.NProto.TReqExistsNode.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	29,  // 111: NYT.NApi.NRpcProxy.NProto.TReqGetNode.legacy_attributes:type_name -> NYT.NApi.NRpcProxy.NProto.TLegacyAttributeKeys
	401, // 112: NYT.NApi.NRpcProxy.NProto.TReqGetNode.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	402, // 113: NYT.NApi.NRpcProxy.NProto.TReqGetNode.complexity_limits:type_name -> NYT.NYTree.NProto.TReadRequestComplexityLimits
	114, // 114: NYT.NApi.NRpcProxy.NProto.TReqGetNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 115: NYT.NApi.NRpcProxy.NProto.TReqGetNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	116, // 116: NYT.NApi.NRpcProxy.NProto.TReqGetNode.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	118, // 117: NYT.NApi.NRpcProxy.NProto.TReqGetNode.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	396, // 118: NYT.NApi.NRpcProxy.NProto.TReqGetNode.options:type_name -> NYT.NYTree.NProto.TAttributeDictionary
	29,  // 119: NYT.NApi.NRpcProxy.NProto.TReqListNode.legacy_attributes:type_name -> NYT.NApi.NRpcProxy.NProto.TLegacyAttributeKeys
	401, // 120: NYT.NApi.NRpcProxy.NProto.TReqListNode.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	402, // 121: NYT.NApi.NRpcProxy.NProto.TReqListNode.complexity_limits:type_name -> NYT.NYTree.NProto.TReadRequestComplexityLimits
	114, // 122: NYT.NApi.NRpcProxy.NProto.TReqListNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 123: NYT.NApi.NRpcProxy.NProto.TReqListNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	116, // 124: NYT.NApi.NRpcProxy.NProto.TReqListNode.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	118, // 125: NYT.NApi.NRpcProxy.NProto.TReqListNode.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	396, // 126: NYT.NApi.NRpcProxy.NProto.TReqCreateObject.attributes:type_name -> NYT.NYTree.NProto.TAttributeDictionary
	117, // 127: NYT.NApi.NRpcProxy.NProto.TReqCreateObject.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 128: NYT.NApi.NRpcProxy.NProto.TRspCreateObject.object_id:type_name -> NYT.NProto.TGuid
	131, // 129: NYT.NApi.NRpcProxy.NProto.TTableSchema.columns:type_name -> NYT.NApi.NRpcProxy.NProto.TColumnSchema
	132, // 130: NYT.NApi.NRpcProxy.NProto.TTableSchema.deleted_columns:type_name -> NYT.NApi.NRpcProxy.NProto.TDeletedColumn
	395, // 131: NYT.NApi.NRpcProxy.NProto.TTabletInfo.tablet_id:type_name -> NYT.NProto.TGuid
	395, // 132: NYT.NApi.NRpcProxy.NProto.TTabletInfo.cell_id:type_name -> NYT.NProto.TGuid
	395, // 133: NYT.NApi.NRpcProxy.NProto.TReplicaInfo.replica_id:type_name -> NYT.NProto.TGuid
	395, // 134: NYT.NApi.NRpcProxy.NProto.TIndexInfo.index_table_id:type_name -> NYT.NProto.TGuid
	395, // 135: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo.table_id:type_name -> NYT.NProto.TGuid
	133, // 136: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo.schema:type_name -> NYT.NApi.NRpcProxy.NProto.TTableSchema
	134, // 137: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo.tablets:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletInfo
	395, // 138: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo.upstream_replica_id:type_name -> NYT.NProto.TGuid
	135, // 139: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo.replicas:type_name -> NYT.NApi.NRpcProxy.NProto.TReplicaInfo
	136, // 140: NYT.NApi.NRpcProxy.NProto.TRspGetTableMountInfo.indices:type_name -> NYT.NApi.NRpcProxy.NProto.TIndexInfo
	368, // 141: NYT.NApi.NRpcProxy.NProto.TBackupManifest.clusters:type_name -> NYT.NApi.NRpcProxy.NProto.TBackupManifest.TClusterManifest
	142, // 142: NYT.NApi.NRpcProxy.NProto.TReqCreateTableBackup.manifest:type_name -> NYT.NApi.NRpcProxy.NProto.TBackupManifest
	142, // 143: NYT.NApi.NRpcProxy.NProto.TReqRestoreTableBackup.manifest:type_name -> NYT.NApi.NRpcProxy.NProto.TBackupManifest
	396, // 144: NYT.NApi.NRpcProxy.NProto.TReqCreateNode.attributes:type_name -> NYT.NYTree.NProto.TAttributeDictionary
	114, // 145: NYT.NApi.NRpcProxy.NProto.TReqCreateNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 146: NYT.NApi.NRpcProxy.NProto.TReqCreateNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 147: NYT.NApi.NRpcProxy.NProto.TReqCreateNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 148: NYT.NApi.NRpcProxy.NProto.TRspCreateNode.node_id:type_name -> NYT.NProto.TGuid
	114, // 149: NYT.NApi.NRpcProxy.NProto.TReqRemoveNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 150: NYT.NApi.NRpcProxy.NProto.TReqRemoveNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 151: NYT.NApi.NRpcProxy.NProto.TReqRemoveNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	114, // 152: NYT.NApi.NRpcProxy.NProto.TReqSetNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 153: NYT.NApi.NRpcProxy.NProto.TReqSetNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 154: NYT.NApi.NRpcProxy.NProto.TReqSetNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	118, // 155: NYT.NApi.NRpcProxy.NProto.TReqSetNode.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	369, // 156: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.subrequests:type_name -> NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.TSubrequest
	114, // 157: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 158: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 159: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	118, // 160: NYT.NApi.NRpcProxy.NProto.TReqMultisetAttributesNode.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	114, // 161: NYT.NApi.NRpcProxy.NProto.TReqLockNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 162: NYT.NApi.NRpcProxy.NProto.TReqLockNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 163: NYT.NApi.NRpcProxy.NProto.TReqLockNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 164: NYT.NApi.NRpcProxy.NProto.TRspLockNode.node_id:type_name -> NYT.NProto.TGuid
	395, // 165: NYT.NApi.NRpcProxy.NProto.TRspLockNode.lock_id:type_name -> NYT.NProto.TGuid
	114, // 166: NYT.NApi.NRpcProxy.NProto.TReqUnlockNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 167: NYT.NApi.NRpcProxy.NProto.TReqUnlockNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 168: NYT.NApi.NRpcProxy.NProto.TReqUnlockNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	114, // 169: NYT.NApi.NRpcProxy.NProto.TReqCopyNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 170: NYT.NApi.NRpcProxy.NProto.TReqCopyNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 171: NYT.NApi.NRpcProxy.NProto.TReqCopyNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 172: NYT.NApi.NRpcProxy.NProto.TRspCopyNode.node_id:type_name -> NYT.NProto.TGuid
	114, // 173: NYT.NApi.NRpcProxy.NProto.TReqMoveNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 174: NYT.NApi.NRpcProxy.NProto.TReqMoveNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 175: NYT.NApi.NRpcProxy.NProto.TReqMoveNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 176: NYT.NApi.NRpcProxy.NProto.TRspMoveNode.node_id:type_name -> NYT.NProto.TGuid
	114, // 177: NYT.NApi.NRpcProxy.NProto.TReqLinkNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 178: NYT.NApi.NRpcProxy.NProto.TReqLinkNode.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 179: NYT.NApi.NRpcProxy.NProto.TReqLinkNode.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 180: NYT.NApi.NRpcProxy.NProto.TRspLinkNode.node_id:type_name -> NYT.NProto.TGuid
	370, // 181: NYT.NApi.NRpcProxy.NProto.TReqConcatenateNodes.fetcher:type_name -> NYT.NApi.NRpcProxy.NProto.TReqConcatenateNodes.TFetcher
	114, // 182: NYT.NApi.NRpcProxy.NProto.TReqConcatenateNodes.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	117, // 183: NYT.NApi.NRpcProxy.NProto.TReqConcatenateNodes.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	114, // 184: NYT.NApi.NRpcProxy.NProto.TReqExternalizeNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	114, // 185: NYT.NApi.NRpcProxy.NProto.TReqInternalizeNode.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	395, // 186: NYT.NApi.NRpcProxy.NProto.TReqAttachTransaction.transaction_id:type_name -> NYT.NProto.TGuid
	0,   // 187: NYT.NApi.NRpcProxy.NProto.TRspAttachTransaction.type:type_name -> NYT.NApi.NRpcProxy.NProto.ETransactionType
	2,   // 188: NYT.NApi.NRpcProxy.NProto.TRspAttachTransaction.atomicity:type_name -> NYT.NApi.NRpcProxy.NProto.EAtomicity
	3,   // 189: NYT.NApi.NRpcProxy.NProto.TRspAttachTransaction.durability:type_name -> NYT.NApi.NRpcProxy.NProto.EDurability
	395, // 190: NYT.NApi.NRpcProxy.NProto.TReqDetachTransaction.transaction_id:type_name -> NYT.NProto.TGuid
	395, // 191: NYT.NApi.NRpcProxy.NProto.TReqMountTable.cell_id:type_name -> NYT.NProto.TGuid
	117, // 192: NYT.NApi.NRpcProxy.NProto.TReqMountTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 193: NYT.NApi.NRpcProxy.NProto.TReqMountTable.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	395, // 194: NYT.NApi.NRpcProxy.NProto.TReqMountTable.target_cell_ids:type_name -> NYT.NProto.TGuid
	117, // 195: NYT.NApi.NRpcProxy.NProto.TReqUnmountTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 196: NYT.NApi.NRpcProxy.NProto.TReqUnmountTable.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	117, // 197: NYT.NApi.NRpcProxy.NProto.TReqRemountTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 198: NYT.NApi.NRpcProxy.NProto.TReqRemountTable.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	117, // 199: NYT.NApi.NRpcProxy.NProto.TReqFreezeTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 200: NYT.NApi.NRpcProxy.NProto.TReqFreezeTable.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	117, // 201: NYT.NApi.NRpcProxy.NProto.TReqUnfreezeTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 202: NYT.NApi.NRpcProxy.NProto.TReqUnfreezeTable.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	117, // 203: NYT.NApi.NRpcProxy.NProto.TReqReshardTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 204: NYT.NApi.NRpcProxy.NProto.TReqReshardTable.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	30,  // 205: NYT.NApi.NRpcProxy.NProto.TReqReshardTable.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	117, // 206: NYT.NApi.NRpcProxy.NProto.TReqReshardTableAutomatic.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	119, // 207: NYT.NApi.NRpcProxy.NProto.TReqReshardTableAutomatic.tablet_range_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTabletRangeOptions
	395, // 208: NYT.NApi.NRpcProxy.NProto.TRspReshardTableAutomatic.tablet_actions:type_name -> NYT.NProto.TGuid
	395, // 209: NYT.NApi.NRpcProxy.NProto.TReqAlterTable.upstream_replica_id:type_name -> NYT.NProto.TGuid
	20,  // 210: NYT.NApi.NRpcProxy.NProto.TReqAlterTable.schema_modification:type_name -> NYT.NApi.NRpcProxy.NProto.ETableSchemaModification
	399, // 211: NYT.NApi.NRpcProxy.NProto.TReqAlterTable.replication_progress:type_name -> NYT.NChaosClient.NProto.TReplicationProgress
	395, // 212: NYT.NApi.NRpcProxy.NProto.TReqAlterTable.schema_id:type_name -> NYT.NProto.TGuid
	114, // 213: NYT.NApi.NRpcProxy.NProto.TReqAlterTable.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	117, // 214: NYT.NApi.NRpcProxy.NProto.TReqAlterTable.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 215: NYT.NApi.NRpcProxy.NProto.TReqAlterTableReplica.replica_id:type_name -> NYT.NProto.TGuid
	4,   // 216: NYT.NApi.NRpcProxy.NProto.TReqAlterTableReplica.mode:type_name -> NYT.NApi.NRpcProxy.NProto.ETableReplicaMode
	2,   // 217: NYT.NApi.NRpcProxy.NProto.TReqAlterTableReplica.atomicity:type_name -> NYT.NApi.NRpcProxy.NProto.EAtomicity
	117, // 218: NYT.NApi.NRpcProxy.NProto.TReqAlterTableReplica.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 219: NYT.NApi.NRpcProxy.NProto.TReqAlterReplicationCard.replication_card_id:type_name -> NYT.NProto.TGuid
	395, // 220: NYT.NApi.NRpcProxy.NProto.TReqAlterReplicationCard.replication_card_collocation_id:type_name -> NYT.NProto.TGuid
	117, // 221: NYT.NApi.NRpcProxy.NProto.TReqAlterReplicationCard.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	197, // 222: NYT.NApi.NRpcProxy.NProto.TReqGetColumnarStatistics.fetch_chunk_spec_config:type_name -> NYT.NApi.NRpcProxy.NProto.TFetchChunkSpecConfig
	198, // 223: NYT.NApi.NRpcProxy.NProto.TReqGetColumnarStatistics.fetcher_config:type_name -> NYT.NApi.NRpcProxy.NProto.TFetcherConfig
	21,  // 224: NYT.NApi.NRpcProxy.NProto.TReqGetColumnarStatistics.fetcher_mode:type_name -> NYT.NApi.NRpcProxy.NProto.EColumnarStatisticsFetcherMode
	114, // 225: NYT.NApi.NRpcProxy.NProto.TReqGetColumnarStatistics.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	403, // 226: NYT.NApi.NRpcProxy.NProto.TColumnarStatistics.column_hyperloglog_digests:type_name -> NYT.NProto.THyperLogLogDigest
	200, // 227: NYT.NApi.NRpcProxy.NProto.TRspGetColumnarStatistics.statistics:type_name -> NYT.NApi.NRpcProxy.NProto.TColumnarStatistics
	395, // 228: NYT.NApi.NRpcProxy.NProto.TReqDisableChunkLocations.location_uuids:type_name -> NYT.NProto.TGuid
	395, // 229: NYT.NApi.NRpcProxy.NProto.TRspDisableChunkLocations.location_uuids:type_name -> NYT.NProto.TGuid
	395, // 230: NYT.NApi.NRpcProxy.NProto.TReqDestroyChunkLocations.location_uuids:type_name -> NYT.NProto.TGuid
	395, // 231: NYT.NApi.NRpcProxy.NProto.TRspDestroyChunkLocations.location_uuids:type_name -> NYT.NProto.TGuid
	395, // 232: NYT.NApi.NRpcProxy.NProto.TReqResurrectChunkLocations.location_uuids:type_name -> NYT.NProto.TGuid
	395, // 233: NYT.NApi.NRpcProxy.NProto.TRspResurrectChunkLocations.location_uuids:type_name -> NYT.NProto.TGuid
	197, // 234: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.fetch_chunk_spec_config:type_name -> NYT.NApi.NRpcProxy.NProto.TFetchChunkSpecConfig
	198, // 235: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.fetcher_config:type_name -> NYT.NApi.NRpcProxy.NProto.TFetcherConfig
	371, // 236: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.chunk_slice_fetcher_config:type_name -> NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.TChunkSliceFetcherConfig
	22,  // 237: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.partition_mode:type_name -> NYT.NApi.NRpcProxy.NProto.EPartitionTablesMode
	114, // 238: NYT.NApi.NRpcProxy.NProto.TReqPartitionTables.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	372, // 239: NYT.NApi.NRpcProxy.NProto.TMultiTablePartition.aggregate_statistics:type_name -> NYT.NApi.NRpcProxy.NProto.TMultiTablePartition.TStatistics
	211, // 240: NYT.NApi.NRpcProxy.NProto.TRspPartitionTables.partitions:type_name -> NYT.NApi.NRpcProxy.NProto.TMultiTablePartition
	117, // 241: NYT.NApi.NRpcProxy.NProto.TReqBalanceTabletCells.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 242: NYT.NApi.NRpcProxy.NProto.TRspBalanceTabletCells.tablet_actions:type_name -> NYT.NProto.TGuid
	114, // 243: NYT.NApi.NRpcProxy.NProto.TReqGetFileFromCache.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	116, // 244: NYT.NApi.NRpcProxy.NProto.TReqGetFileFromCache.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	318, // 245: NYT.NApi.NRpcProxy.NProto.TRspGetFileFromCache.result:type_name -> NYT.NApi.NRpcProxy.NProto.TGetFileFromCacheResult
	114, // 246: NYT.NApi.NRpcProxy.NProto.TReqPutFileToCache.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 247: NYT.NApi.NRpcProxy.NProto.TReqPutFileToCache.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	116, // 248: NYT.NApi.NRpcProxy.NProto.TReqPutFileToCache.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	117, // 249: NYT.NApi.NRpcProxy.NProto.TReqPutFileToCache.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	319, // 250: NYT.NApi.NRpcProxy.NProto.TRspPutFileToCache.result:type_name -> NYT.NApi.NRpcProxy.NProto.TPutFileToCacheResult
	10,  // 251: NYT.NApi.NRpcProxy.NProto.TReqStartOperation.type:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationType
	114, // 252: NYT.NApi.NRpcProxy.NProto.TReqStartOperation.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	117, // 253: NYT.NApi.NRpcProxy.NProto.TReqStartOperation.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 254: NYT.NApi.NRpcProxy.NProto.TRspStartOperation.operation_id:type_name -> NYT.NProto.TGuid
	395, // 255: NYT.NApi.NRpcProxy.NProto.TReqAbortOperation.operation_id:type_name -> NYT.NProto.TGuid
	395, // 256: NYT.NApi.NRpcProxy.NProto.TReqSuspendOperation.operation_id:type_name -> NYT.NProto.TGuid
	395, // 257: NYT.NApi.NRpcProxy.NProto.TReqResumeOperation.operation_id:type_name -> NYT.NProto.TGuid
	395, // 258: NYT.NApi.NRpcProxy.NProto.TReqCompleteOperation.operation_id:type_name -> NYT.NProto.TGuid
	395, // 259: NYT.NApi.NRpcProxy.NProto.TReqUpdateOperationParameters.operation_id:type_name -> NYT.NProto.TGuid
	395, // 260: NYT.NApi.NRpcProxy.NProto.TReqPatchOperationSpec.operation_id:type_name -> NYT.NProto.TGuid
	404, // 261: NYT.NApi.NRpcProxy.NProto.TReqPatchOperationSpec.patches:type_name -> NYT.NScheduler.NProto.TSpecPatch
	395, // 262: NYT.NApi.NRpcProxy.NProto.TReqGetOperation.operation_id:type_name -> NYT.NProto.TGuid
	401, // 263: NYT.NApi.NRpcProxy.NProto.TReqGetOperation.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	116, // 264: NYT.NApi.NRpcProxy.NProto.TReqGetOperation.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	12,  // 265: NYT.NApi.NRpcProxy.NProto.TReqListOperations.cursor_direction:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationSortDirection
	11,  // 266: NYT.NApi.NRpcProxy.NProto.TReqListOperations.state_filter:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationState
	10,  // 267: NYT.NApi.NRpcProxy.NProto.TReqListOperations.type_filter:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationType
	29,  // 268: NYT.NApi.NRpcProxy.NProto.TReqListOperations.legacy_attributes:type_name -> NYT.NApi.NRpcProxy.NProto.TLegacyAttributeKeys
	401, // 269: NYT.NApi.NRpcProxy.NProto.TReqListOperations.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	116, // 270: NYT.NApi.NRpcProxy.NProto.TReqListOperations.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	313, // 271: NYT.NApi.NRpcProxy.NProto.TRspListOperations.result:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult
	395, // 272: NYT.NApi.NRpcProxy.NProto.TReqListJobs.operation_id:type_name -> NYT.NProto.TGuid
	13,  // 273: NYT.NApi.NRpcProxy.NProto.TReqListJobs.type:type_name -> NYT.NApi.NRpcProxy.NProto.EJobType
	14,  // 274: NYT.NApi.NRpcProxy.NProto.TReqListJobs.state:type_name -> NYT.NApi.NRpcProxy.NProto.EJobState
	15,  // 275: NYT.NApi.NRpcProxy.NProto.TReqListJobs.sort_field:type_name -> NYT.NApi.NRpcProxy.NProto.EJobSortField
	16,  // 276: NYT.NApi.NRpcProxy.NProto.TReqListJobs.sort_order:type_name -> NYT.NApi.NRpcProxy.NProto.EJobSortDirection
	17,  // 277: NYT.NApi.NRpcProxy.NProto.TReqListJobs.data_source:type_name -> NYT.NApi.NRpcProxy.NProto.EDataSource
	395, // 278: NYT.NApi.NRpcProxy.NProto.TReqListJobs.job_competition_id:type_name -> NYT.NProto.TGuid
	116, // 279: NYT.NApi.NRpcProxy.NProto.TReqListJobs.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	316, // 280: NYT.NApi.NRpcProxy.NProto.TRspListJobs.result:type_name -> NYT.NApi.NRpcProxy.NProto.TListJobsResult
	395, // 281: NYT.NApi.NRpcProxy.NProto.TReqGetJob.operation_id:type_name -> NYT.NProto.TGuid
	395, // 282: NYT.NApi.NRpcProxy.NProto.TReqGetJob.job_id:type_name -> NYT.NProto.TGuid
	29,  // 283: NYT.NApi.NRpcProxy.NProto.TReqGetJob.legacy_attributes:type_name -> NYT.NApi.NRpcProxy.NProto.TLegacyAttributeKeys
	401, // 284: NYT.NApi.NRpcProxy.NProto.TReqGetJob.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	395, // 285: NYT.NApi.NRpcProxy.NProto.TReqGetJobInputPaths.job_id:type_name -> NYT.NProto.TGuid
	25,  // 286: NYT.NApi.NRpcProxy.NProto.TReqGetJobInputPaths.job_spec_source:type_name -> NYT.NApi.NRpcProxy.NProto.EJobSpecSource
	395, // 287: NYT.NApi.NRpcProxy.NProto.TReqGetJobSpec.job_id:type_name -> NYT.NProto.TGuid
	25,  // 288: NYT.NApi.NRpcProxy.NProto.TReqGetJobSpec.job_spec_source:type_name -> NYT.NApi.NRpcProxy.NProto.EJobSpecSource
	395, // 289: NYT.NApi.NRpcProxy.NProto.TReqGetJobStderr.operation_id:type_name -> NYT.NProto.TGuid
	395, // 290: NYT.NApi.NRpcProxy.NProto.TReqGetJobStderr.job_id:type_name -> NYT.NProto.TGuid
	395, // 291: NYT.NApi.NRpcProxy.NProto.TReqGetJobTrace.operation_id:type_name -> NYT.NProto.TGuid
	395, // 292: NYT.NApi.NRpcProxy.NProto.TReqGetJobTrace.job_id:type_name -> NYT.NProto.TGuid
	395, // 293: NYT.NApi.NRpcProxy.NProto.TReqGetJobTrace.trace_id:type_name -> NYT.NProto.TGuid
	317, // 294: NYT.NApi.NRpcProxy.NProto.TRspGetJobTrace.events:type_name -> NYT.NApi.NRpcProxy.NProto.TJobTraceEvent
	395, // 295: NYT.NApi.NRpcProxy.NProto.TReqGetJobFailContext.operation_id:type_name -> NYT.NProto.TGuid
	395, // 296: NYT.NApi.NRpcProxy.NProto.TReqGetJobFailContext.job_id:type_name -> NYT.NProto.TGuid
	395, // 297: NYT.NApi.NRpcProxy.NProto.TReqDumpJobContext.job_id:type_name -> NYT.NProto.TGuid
	395, // 298: NYT.NApi.NRpcProxy.NProto.TReqAbandonJob.job_id:type_name -> NYT.NProto.TGuid
	395, // 299: NYT.NApi.NRpcProxy.NProto.TReqPollJobShell.job_id:type_name -> NYT.NProto.TGuid
	395, // 300: NYT.NApi.NRpcProxy.NProto.TReqAbortJob.job_id:type_name -> NYT.NProto.TGuid
	395, // 301: NYT.NApi.NRpcProxy.NProto.TReqDumpJobProxyLog.job_id:type_name -> NYT.NProto.TGuid
	395, // 302: NYT.NApi.NRpcProxy.NProto.TReqDumpJobProxyLog.operation_id:type_name -> NYT.NProto.TGuid
	114, // 303: NYT.NApi.NRpcProxy.NProto.TReqReadFile.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	118, // 304: NYT.NApi.NRpcProxy.NProto.TReqReadFile.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	395, // 305: NYT.NApi.NRpcProxy.NProto.TReadFileMeta.id:type_name -> NYT.NProto.TGuid
	114, // 306: NYT.NApi.NRpcProxy.NProto.TReqWriteFile.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 307: NYT.NApi.NRpcProxy.NProto.TReqWriteFile.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	114, // 308: NYT.NApi.NRpcProxy.NProto.TReqReadJournal.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	118, // 309: NYT.NApi.NRpcProxy.NProto.TReqReadJournal.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	114, // 310: NYT.NApi.NRpcProxy.NProto.TReqWriteJournal.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 311: NYT.NApi.NRpcProxy.NProto.TReqWriteJournal.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	115, // 312: NYT.NApi.NRpcProxy.NProto.TReqTruncateJournal.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 313: NYT.NApi.NRpcProxy.NProto.TReqTruncateJournal.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	8,   // 314: NYT.NApi.NRpcProxy.NProto.TReqReadTable.desired_rowset_format:type_name -> NYT.NApi.NRpcProxy.NProto.ERowsetFormat
	8,   // 315: NYT.NApi.NRpcProxy.NProto.TReqReadTable.arrow_fallback_rowset_format:type_name -> NYT.NApi.NRpcProxy.NProto.ERowsetFormat
	114, // 316: NYT.NApi.NRpcProxy.NProto.TReqReadTable.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	118, // 317: NYT.NApi.NRpcProxy.NProto.TReqReadTable.suppressable_access_tracking_options:type_name -> NYT.NApi.NRpcProxy.NProto.TSuppressableAccessTrackingOptions
	133, // 318: NYT.NApi.NRpcProxy.NProto.TRspReadTableMeta.schema:type_name -> NYT.NApi.NRpcProxy.NProto.TTableSchema
	31,  // 319: NYT.NApi.NRpcProxy.NProto.TRspReadTableMeta.statistics:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetStatistics
	114, // 320: NYT.NApi.NRpcProxy.NProto.TReqWriteTable.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	133, // 321: NYT.NApi.NRpcProxy.NProto.TWriteTableMeta.schema:type_name -> NYT.NApi.NRpcProxy.NProto.TTableSchema
	395, // 322: NYT.NApi.NRpcProxy.NProto.TReqGetJobInput.job_id:type_name -> NYT.NProto.TGuid
	25,  // 323: NYT.NApi.NRpcProxy.NProto.TReqGetJobInput.job_spec_source:type_name -> NYT.NApi.NRpcProxy.NProto.EJobSpecSource
	117, // 324: NYT.NApi.NRpcProxy.NProto.TReqAddMember.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	115, // 325: NYT.NApi.NRpcProxy.NProto.TReqAddMember.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	117, // 326: NYT.NApi.NRpcProxy.NProto.TReqRemoveMember.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	115, // 327: NYT.NApi.NRpcProxy.NProto.TReqRemoveMember.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	114, // 328: NYT.NApi.NRpcProxy.NProto.TReqCheckPermission.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	115, // 329: NYT.NApi.NRpcProxy.NProto.TReqCheckPermission.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	116, // 330: NYT.NApi.NRpcProxy.NProto.TReqCheckPermission.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	373, // 331: NYT.NApi.NRpcProxy.NProto.TReqCheckPermission.columns:type_name -> NYT.NApi.NRpcProxy.NProto.TReqCheckPermission.TColumns
	320, // 332: NYT.NApi.NRpcProxy.NProto.TRspCheckPermission.result:type_name -> NYT.NApi.NRpcProxy.NProto.TCheckPermissionResult
	374, // 333: NYT.NApi.NRpcProxy.NProto.TRspCheckPermission.columns:type_name -> NYT.NApi.NRpcProxy.NProto.TRspCheckPermission.TColumns
	115, // 334: NYT.NApi.NRpcProxy.NProto.TReqCheckPermissionByAcl.prerequisite_options:type_name -> NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions
	116, // 335: NYT.NApi.NRpcProxy.NProto.TReqCheckPermissionByAcl.master_read_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMasterReadOptions
	321, // 336: NYT.NApi.NRpcProxy.NProto.TRspCheckPermissionByAcl.result:type_name -> NYT.NApi.NRpcProxy.NProto.TCheckPermissionByAclResult
	117, // 337: NYT.NApi.NRpcProxy.NProto.TReqTransferAccountResources.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	117, // 338: NYT.NApi.NRpcProxy.NProto.TReqTransferPoolResources.mutating_options:type_name -> NYT.NApi.NRpcProxy.NProto.TMutatingOptions
	395, // 339: NYT.NApi.NRpcProxy.NProto.TOperation.id:type_name -> NYT.NProto.TGuid
	10,  // 340: NYT.NApi.NRpcProxy.NProto.TOperation.type:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationType
	11,  // 341: NYT.NApi.NRpcProxy.NProto.TOperation.state:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationState
	375, // 342: NYT.NApi.NRpcProxy.NProto.TOperation.pools:type_name -> NYT.NApi.NRpcProxy.NProto.TOperation.TStrings
	312, // 343: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.operations:type_name -> NYT.NApi.NRpcProxy.NProto.TOperation
	376, // 344: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.pool_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolCounts
	377, // 345: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.user_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TUserCounts
	378, // 346: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.state_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationStateCounts
	379, // 347: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.type_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationTypeCounts
	380, // 348: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.pool_tree_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolTreeCounts
	395, // 349: NYT.NApi.NRpcProxy.NProto.TJob.id:type_name -> NYT.NProto.TGuid
	13,  // 350: NYT.NApi.NRpcProxy.NProto.TJob.type:type_name -> NYT.NApi.NRpcProxy.NProto.EJobType
	14,  // 351: NYT.NApi.NRpcProxy.NProto.TJob.state:type_name -> NYT.NApi.NRpcProxy.NProto.EJobState
	395, // 352: NYT.NApi.NRpcProxy.NProto.TJob.operation_id:type_name -> NYT.NProto.TGuid
	14,  // 353: NYT.NApi.NRpcProxy.NProto.TJob.controller_state:type_name -> NYT.NApi.NRpcProxy.NProto.EJobState
	14,  // 354: NYT.NApi.NRpcProxy.NProto.TJob.archive_state:type_name -> NYT.NApi.NRpcProxy.NProto.EJobState
	395, // 355: NYT.NApi.NRpcProxy.NProto.TJob.job_competition_id:type_name -> NYT.NProto.TGuid
	395, // 356: NYT.NApi.NRpcProxy.NProto.TJob.probing_job_competition_id:type_name -> NYT.NProto.TGuid
	386, // 357: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.state_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobStateCounts
	387, // 358: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.type_counts:type_name -> NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobTypeCounts
	314, // 359: NYT.NApi.NRpcProxy.NProto.TListJobsResult.jobs:type_name -> NYT.NApi.NRpcProxy.NProto.TJob
	315, // 360: NYT.NApi.NRpcProxy.NProto.TListJobsResult.statistics:type_name -> NYT.NApi.NRpcProxy.NProto.TListJobsStatistics
	405, // 361: NYT.NApi.NRpcProxy.NProto.TListJobsResult.errors:type_name -> NYT.NProto.TError
	395, // 362: NYT.NApi.NRpcProxy.NProto.TJobTraceEvent.operation_id:type_name -> NYT.NProto.TGuid
	395, // 363: NYT.NApi.NRpcProxy.NProto.TJobTraceEvent.job_id:type_name -> NYT.NProto.TGuid
	395, // 364: NYT.NApi.NRpcProxy.NProto.TJobTraceEvent.trace_id:type_name -> NYT.NProto.TGuid
	18,  // 365: NYT.NApi.NRpcProxy.NProto.TCheckPermissionResult.action:type_name -> NYT.NApi.NRpcProxy.NProto.ESecurityAction
	395, // 366: NYT.NApi.NRpcProxy.NProto.TCheckPermissionResult.object_id:type_name -> NYT.NProto.TGuid
	395, // 367: NYT.NApi.NRpcProxy.NProto.TCheckPermissionResult.subject_id:type_name -> NYT.NProto.TGuid
	18,  // 368: NYT.NApi.NRpcProxy.NProto.TCheckPermissionByAclResult.action:type_name -> NYT.NApi.NRpcProxy.NProto.ESecurityAction
	395, // 369: NYT.NApi.NRpcProxy.NProto.TCheckPermissionByAclResult.subject_id:type_name -> NYT.NProto.TGuid
	26,  // 370: NYT.NApi.NRpcProxy.NProto.TReqStartQuery.engine:type_name -> NYT.NApi.NRpcProxy.NProto.EQueryEngine
	390, // 371: NYT.NApi.NRpcProxy.NProto.TReqStartQuery.files:type_name -> NYT.NApi.NRpcProxy.NProto.TReqStartQuery.TQueryFile
	391, // 372: NYT.NApi.NRpcProxy.NProto.TReqStartQuery.access_control_objects:type_name -> NYT.NApi.NRpcProxy.NProto.TReqStartQuery.TAccessControlObjects
	395, // 373: NYT.NApi.NRpcProxy.NProto.TRspStartQuery.query_id:type_name -> NYT.NProto.TGuid
	395, // 374: NYT.NApi.NRpcProxy.NProto.TReqAbortQuery.query_id:type_name -> NYT.NProto.TGuid
	395, // 375: NYT.NApi.NRpcProxy.NProto.TReqGetQueryResult.query_id:type_name -> NYT.NProto.TGuid
	395, // 376: NYT.NApi.NRpcProxy.NProto.TRspGetQueryResult.query_id:type_name -> NYT.NProto.TGuid
	405, // 377: NYT.NApi.NRpcProxy.NProto.TRspGetQueryResult.error:type_name -> NYT.NProto.TError
	133, // 378: NYT.NApi.NRpcProxy.NProto.TRspGetQueryResult.schema:type_name -> NYT.NApi.NRpcProxy.NProto.TTableSchema
	394, // 379: NYT.NApi.NRpcProxy.NProto.TRspGetQueryResult.data_statistics:type_name -> NYT.NChunkClient.NProto.TDataStatistics
	395, // 380: NYT.NApi.NRpcProxy.NProto.TReqReadQueryResult.query_id:type_name -> NYT.NProto.TGuid
	392, // 381: NYT.NApi.NRpcProxy.NProto.TReqReadQueryResult.columns:type_name -> NYT.NApi.NRpcProxy.NProto.TReqReadQueryResult.TColumns
	30,  // 382: NYT.NApi.NRpcProxy.NProto.TRspReadQueryResult.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	395, // 383: NYT.NApi.NRpcProxy.NProto.TQuery.id:type_name -> NYT.NProto.TGuid
	26,  // 384: NYT.NApi.NRpcProxy.NProto.TQuery.engine:type_name -> NYT.NApi.NRpcProxy.NProto.EQueryEngine
	28,  // 385: NYT.NApi.NRpcProxy.NProto.TQuery.state:type_name -> NYT.NApi.NRpcProxy.NProto.EQueryState
	405, // 386: NYT.NApi.NRpcProxy.NProto.TQuery.error:type_name -> NYT.NProto.TError
	396, // 387: NYT.NApi.NRpcProxy.NProto.TQuery.other_attributes:type_name -> NYT.NYTree.NProto.TAttributeDictionary
	395, // 388: NYT.NApi.NRpcProxy.NProto.TReqGetQuery.query_id:type_name -> NYT.NProto.TGuid
	401, // 389: NYT.NApi.NRpcProxy.NProto.TReqGetQuery.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	330, // 390: NYT.NApi.NRpcProxy.NProto.TRspGetQuery.query:type_name -> NYT.NApi.NRpcProxy.NProto.TQuery
	12,  // 391: NYT.NApi.NRpcProxy.NProto.TReqListQueries.cursor_direction:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationSortDirection
	28,  // 392: NYT.NApi.NRpcProxy.NProto.TReqListQueries.state_filter:type_name -> NYT.NApi.NRpcProxy.NProto.EQueryState
	26,  // 393: NYT.NApi.NRpcProxy.NProto.TReqListQueries.engine_filter:type_name -> NYT.NApi.NRpcProxy.NProto.EQueryEngine
	401, // 394: NYT.NApi.NRpcProxy.NProto.TReqListQueries.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	330, // 395: NYT.NApi.NRpcProxy.NProto.TRspListQueries.queries:type_name -> NYT.NApi.NRpcProxy.NProto.TQuery
	395, // 396: NYT.NApi.NRpcProxy.NProto.TReqAlterQuery.query_id:type_name -> NYT.NProto.TGuid
	393, // 397: NYT.NApi.NRpcProxy.NProto.TReqAlterQuery.access_control_objects:type_name -> NYT.NApi.NRpcProxy.NProto.TReqAlterQuery.TAccessControlObjects
	401, // 398: NYT.NApi.NRpcProxy.NProto.TReqGetQueryTrackerInfo.attributes:type_name -> NYT.NYTree.NProto.TAttributeFilter
	114, // 399: NYT.NApi.NRpcProxy.NProto.TReqStartDistributedWriteSession.transactional_options:type_name -> NYT.NApi.NRpcProxy.NProto.TTransactionalOptions
	395, // 400: NYT.NApi.NRpcProxy.NProto.TReqStartShuffle.parent_transaction_id:type_name -> NYT.NProto.TGuid
	30,  // 401: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.TSubrequest.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	398, // 402: NYT.NApi.NRpcProxy.NProto.TReqMultiLookup.TSubrequest.versioned_read_options:type_name -> NYT.NTableClient.NProto.TVersionedReadOptions
	30,  // 403: NYT.NApi.NRpcProxy.NProto.TRspMultiLookup.TSubresponse.rowset_descriptor:type_name -> NYT.NApi.NRpcProxy.NProto.TRowsetDescriptor
	357, // 404: NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations.TQueueConsumerRegistration.partitions:type_name -> NYT.NApi.NRpcProxy.NProto.TRspListQueueConsumerRegistrations.TQueueConsumerRegistration.TRegistrationPartitions
	359, // 405: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo.replicas:type_name -> NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo.TReplicaInfo
	405, // 406: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo.tablet_errors:type_name -> NYT.NProto.TError
	395, // 407: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo.TReplicaInfo.replica_id:type_name -> NYT.NProto.TGuid
	405, // 408: NYT.NApi.NRpcProxy.NProto.TRspGetTabletInfos.TTabletInfo.TReplicaInfo.replication_error:type_name -> NYT.NProto.TError
	405, // 409: NYT.NApi.NRpcProxy.NProto.TRspGetTabletErrors.TErrorList.errors:type_name -> NYT.NProto.TError
	395, // 410: NYT.NApi.NRpcProxy.NProto.TRspAddMaintenance.IdPerTargetEntry.value:type_name -> NYT.NProto.TGuid
	365, // 411: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.TMaintenanceCounts.counts:type_name -> NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.TMaintenanceCounts.CountsEntry
	363, // 412: NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.RemovedMaintenanceCountsPerTargetEntry.value:type_name -> NYT.NApi.NRpcProxy.NProto.TRspRemoveMaintenance.TMaintenanceCounts
	395, // 413: NYT.NApi.NRpcProxy.NProto.TPrerequisiteOptions.TTransactionPrerequisite.transaction_id:type_name -> NYT.NProto.TGuid
	141, // 414: NYT.NApi.NRpcProxy.NProto.TBackupManifest.TClusterManifest.table_manifests:type_name -> NYT.NApi.NRpcProxy.NProto.TTableBackupManifest
	320, // 415: NYT.NApi.NRpcProxy.NProto.TRspCheckPermission.TColumns.items:type_name -> NYT.NApi.NRpcProxy.NProto.TCheckPermissionResult
	381, // 416: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolCounts.TPoolCount
	382, // 417: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TUserCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TUserCounts.TUserCount
	383, // 418: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationStateCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationStateCounts.TOperationStateCount
	384, // 419: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationTypeCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationTypeCounts.TOperationTypeCount
	385, // 420: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolTreeCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TPoolTreeCounts.EntriesEntry
	11,  // 421: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationStateCounts.TOperationStateCount.state:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationState
	10,  // 422: NYT.NApi.NRpcProxy.NProto.TListOperationsResult.TOperationTypeCounts.TOperationTypeCount.type:type_name -> NYT.NApi.NRpcProxy.NProto.EOperationType
	388, // 423: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobStateCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobStateCounts.TJobStateCount
	389, // 424: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobTypeCounts.entries:type_name -> NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobTypeCounts.TJobTypeCount
	14,  // 425: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobStateCounts.TJobStateCount.state:type_name -> NYT.NApi.NRpcProxy.NProto.EJobState
	13,  // 426: NYT.NApi.NRpcProxy.NProto.TListJobsStatistics.TJobTypeCounts.TJobTypeCount.type:type_name -> NYT.NApi.NRpcProxy.NProto.EJobType
	27,  // 427: NYT.NApi.NRpcProxy.NProto.TReqStartQuery.TQueryFile.type:type_name -> NYT.NApi.NRpcProxy.NProto.EContentType
	428, // [428:428] is the sub-list for method output_type
	428, // [428:428] is the sub-list for method input_type
	428, // [428:428] is the sub-list for extension type_name
	428, // [428:428] is the sub-list for extension extendee
	0,   // [0:428] is the sub-list for field type_name
}

func init() { file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_init() }
func file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_init() {
	if File_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLegacyAttributeKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRowsetDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRowsetStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStartTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPingTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPingTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCommitTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCommitTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqFlushTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspFlushTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAbortTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAbortTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqLookupRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspLookupRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRetentionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqVersionedLookupRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspVersionedLookupRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMultiLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMultiLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TQueryStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSelectRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSelectRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAdvanceQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAdvanceQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPushQueueProducer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPushQueueProducer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRowBatchReadOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPullQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPullQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPullQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPullQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRegisterQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRegisterQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqUnregisterQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspUnregisterQueueConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqListQueueConsumerRegistrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListQueueConsumerRegistrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCreateQueueProducerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCreateQueueProducerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRemoveQueueProducerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRemoveQueueProducerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqExplainQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspExplainQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReplicationRowIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPullRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPullRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetInSyncReplicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetInSyncReplicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetTabletInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTabletInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetTabletErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTabletErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqModifyRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspModifyRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqBatchModifyRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspBatchModifyRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqBuildSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspBuildSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqExitReadOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspExitReadOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMasterExitReadOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMasterExitReadOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDiscombobulateNonvotingPeers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDiscombobulateNonvotingPeers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGCCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGCCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSuspendCoordinator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSuspendCoordinator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqResumeCoordinator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspResumeCoordinator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMigrateReplicationCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMigrateReplicationCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSuspendChaosCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSuspendChaosCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqResumeChaosCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspResumeChaosCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSuspendTabletCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSuspendTabletCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqResumeTabletCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspResumeTabletCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAddMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAddMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRemoveMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRemoveMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTransactionalOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPrerequisiteOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMasterReadOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMutatingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSuppressableAccessTrackingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTabletRangeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTabletReadOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGenerateTimestamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGenerateTimestamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqExistsNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspExistsNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqListNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCreateObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCreateObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TColumnSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeletedColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTableSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTabletInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReplicaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetTableMountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTableMountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetTablePivotKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTablePivotKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTableBackupManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBackupManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCreateTableBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCreateTableBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRestoreTableBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRestoreTableBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCreateNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCreateNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRemoveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRemoveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMultisetAttributesNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMultisetAttributesNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqLockNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspLockNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqUnlockNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspUnlockNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCopyNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCopyNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMoveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMoveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqLinkNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspLinkNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqConcatenateNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspConcatenateNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqExternalizeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspExternalizeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqInternalizeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspInternalizeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAttachTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAttachTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDetachTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDetachTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMountTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMountTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqUnmountTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspUnmountTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRemountTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRemountTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqFreezeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspFreezeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqUnfreezeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspUnfreezeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReshardTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReshardTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReshardTableAutomatic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReshardTableAutomatic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqTrimTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspTrimTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAlterTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAlterTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAlterTableReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAlterTableReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAlterReplicationCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAlterReplicationCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFetchChunkSpecConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFetcherConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetColumnarStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TColumnarStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetColumnarStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDisableChunkLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDisableChunkLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDestroyChunkLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDestroyChunkLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqResurrectChunkLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspResurrectChunkLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRequestRestart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRequestRestart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPartitionTables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMultiTablePartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPartitionTables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqBalanceTabletCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspBalanceTabletCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetFileFromCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetFileFromCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPutFileToCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPutFileToCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStartOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAbortOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAbortOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSuspendOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSuspendOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqResumeOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspResumeOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCompleteOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCompleteOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqUpdateOperationParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspUpdateOperationParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPatchOperationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPatchOperationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqListOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqListJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJobInputPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJobInputPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJobSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJobSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJobStderr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJobStderr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJobTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJobTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJobFailContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJobFailContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDumpJobContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDumpJobContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAbandonJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAbandonJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPollJobShell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPollJobShell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAbortJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAbortJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqDumpJobProxyLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspDumpJobProxyLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReadFileMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqWriteFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspWriteFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReadJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReadJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqWriteJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspWriteJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqTruncateJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspTruncateJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReadTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReadTableMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReadTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqWriteTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TWriteTableMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspWriteTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetJobInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetJobInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAddMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAddMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRemoveMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRemoveMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCheckPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCheckPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCheckPermissionByAcl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCheckPermissionByAcl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqTransferAccountResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspTransferAccountResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqTransferPoolResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspTransferPoolResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCheckClusterLiveness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCheckClusterLiveness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetPipelineSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetPipelineSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSetPipelineSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSetPipelineSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetPipelineDynamicSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetPipelineDynamicSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqSetPipelineDynamicSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspSetPipelineDynamicSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStartPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPausePipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspPausePipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStopPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStopPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetPipelineState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetPipelineState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetFlowView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetFlowView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListJobsStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListJobsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TJobTraceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetFileFromCacheResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPutFileToCacheResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCheckPermissionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCheckPermissionByAclResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStartQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAbortQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAbortQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReadQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReadQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqListQueries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListQueries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAlterQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspAlterQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqGetQueryTrackerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetQueryTrackerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartDistributedWriteSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStartDistributedWriteSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqFinishDistributedWriteSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspFinishDistributedWriteSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqWriteTableFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspWriteTableFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartShuffle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspStartShuffle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReadShuffleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspReadShuffleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqWriteShuffleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspWriteShuffleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRowsetDescriptor_TNameTableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartTransaction_TReplicateToMasterCellTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMultiLookup_TSubrequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspMultiLookup_TSubresponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqRegisterQueueConsumer_TRegistrationPartitions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspListQueueConsumerRegistrations_TQueueConsumerRegistration_TRegistrationPartitions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTabletInfos_TTabletInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTabletInfos_TTabletInfo_TReplicaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspGetTabletErrors_TErrorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspRemoveMaintenance_TMaintenanceCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPrerequisiteOptions_TTransactionPrerequisite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPrerequisiteOptions_TRevisionPrerequisite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBackupManifest_TClusterManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqMultisetAttributesNode_TSubrequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqConcatenateNodes_TFetcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqPartitionTables_TChunkSliceFetcherConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMultiTablePartition_TStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqCheckPermission_TColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRspCheckPermission_TColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TOperation_TStrings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TPoolCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TUserCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TOperationStateCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TOperationTypeCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TPoolTreeCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TPoolCounts_TPoolCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TUserCounts_TUserCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TOperationStateCounts_TOperationStateCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListOperationsResult_TOperationTypeCounts_TOperationTypeCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListJobsStatistics_TJobStateCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListJobsStatistics_TJobTypeCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListJobsStatistics_TJobStateCounts_TJobStateCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListJobsStatistics_TJobTypeCounts_TJobTypeCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartQuery_TQueryFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqStartQuery_TAccessControlObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqReadQueryResult_TColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TReqAlterQuery_TAccessControlObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[192].OneofWrappers = []interface{}{
		(*TReqAbortOperation_OperationId)(nil),
		(*TReqAbortOperation_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[194].OneofWrappers = []interface{}{
		(*TReqSuspendOperation_OperationId)(nil),
		(*TReqSuspendOperation_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[196].OneofWrappers = []interface{}{
		(*TReqResumeOperation_OperationId)(nil),
		(*TReqResumeOperation_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[198].OneofWrappers = []interface{}{
		(*TReqCompleteOperation_OperationId)(nil),
		(*TReqCompleteOperation_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[200].OneofWrappers = []interface{}{
		(*TReqUpdateOperationParameters_OperationId)(nil),
		(*TReqUpdateOperationParameters_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[202].OneofWrappers = []interface{}{
		(*TReqPatchOperationSpec_OperationId)(nil),
		(*TReqPatchOperationSpec_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[204].OneofWrappers = []interface{}{
		(*TReqGetOperation_OperationId)(nil),
		(*TReqGetOperation_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[208].OneofWrappers = []interface{}{
		(*TReqListJobs_OperationId)(nil),
		(*TReqListJobs_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[210].OneofWrappers = []interface{}{
		(*TReqGetJob_OperationId)(nil),
		(*TReqGetJob_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[216].OneofWrappers = []interface{}{
		(*TReqGetJobStderr_OperationId)(nil),
		(*TReqGetJobStderr_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[218].OneofWrappers = []interface{}{
		(*TReqGetJobTrace_OperationId)(nil),
		(*TReqGetJobTrace_OperationAlias)(nil),
	}
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes[220].OneofWrappers = []interface{}{
		(*TReqGetJobFailContext_OperationId)(nil),
		(*TReqGetJobFailContext_OperationAlias)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDesc,
			NumEnums:      29,
			NumMessages:   365,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_goTypes,
		DependencyIndexes: file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_depIdxs,
		EnumInfos:         file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_enumTypes,
		MessageInfos:      file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_msgTypes,
	}.Build()
	File_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto = out.File
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_rawDesc = nil
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_goTypes = nil
	file_yt_yt_proto_yt_client_api_rpc_proxy_proto_api_service_proto_depIdxs = nil
}
