package NYT.NHydra.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/core/misc/proto/error.proto";

import "yt/ytlib/hydra/proto/hydra_manager.proto";

import "yt/ytlib/election/proto/election_service.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqReadChangeLog
{
    required int32 changelog_id = 1;
    required int32 start_record_id = 2;
    required int32 record_count = 3;
}

message TRspReadChangeLog
{
    // Changelog records are passed in the attachment and are packed with PackRefs.
}

////////////////////////////////////////////////////////////////////////////////

message TReqLookupSnapshot
{
    required int32 max_snapshot_id = 1;
    required bool exact_id = 2;
}

message TRspLookupSnapshot
{
    required int32 snapshot_id = 1;
    optional int64 compressed_length = 2;
    optional int64 uncompressed_length = 3;
    optional uint64 checksum = 4;
    optional NYT.NHydra.NProto.TSnapshotMeta meta = 5;
}

////////////////////////////////////////////////////////////////////////////////

message TReqReadSnapshot
{
    required int32 snapshot_id = 1;
    // No offset/length here - snapshots are streamed.
}

message TRspReadSnapshot
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqLookupChangelog
{
    required int32 changelog_id = 1;
}

message TRspLookupChangelog
{
    required int32 record_count = 1;
    optional int64 first_sequence_number = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqGetLatestChangelogId
{ }

message TRspGetLatestChangelogId
{
    required int32 changelog_id = 1;
    required int32 term = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAcquireChangelog
{
    required int32 changelog_id = 1;
    required int32 term = 2;
    optional NYT.NElection.NProto.TPeerPriority priority = 3;
}

message TRspAcquireChangelog
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqPingFollower
{
    required NYT.NProto.TGuid epoch_id = 1;
    optional int64 term = 2;
    repeated int32 alive_peer_ids = 3;
}

message TRspPingFollower
{
    required int32 state = 1; // EPeerState
}

////////////////////////////////////////////////////////////////////////////////

message TReqAcceptMutations
{
    message TSnapshoRequest
    {
        required int32 snapshot_id = 1;
        required int64 sequence_number = 2;
        optional bool read_only = 3;
    }

    // May be useless
    required NYT.NProto.TGuid epoch_id = 1;
    // Sequence number of the first mutation sent via attachments.
    required int64 start_sequence_number = 2;
    // Current committed sequence number. Follower can apply all mutations up to this one.
    required int64 committed_sequence_number = 3;
    // A hint for recovery.
    required int32 committed_segment_id = 4;
    required int32 term = 5;

    optional TSnapshoRequest snapshot_request = 6;

    // Records data is passed via attachments.
}

message TRspAcceptMutations
{
    message TSnapshotResponse
    {
        required int32 snapshot_id = 2;
        required uint64 checksum = 3;
        optional NYT.NProto.TError error = 4;

        reserved 1;
    }

    required bool mutations_accepted = 4;
    required int64 expected_sequence_number = 1;
    required int64 logged_sequence_number = 2;

    optional TSnapshotResponse snapshot_response = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqSyncWithLeader
{
    required NYT.NProto.TGuid epoch_id = 1;
    required int32 term = 2;
}

message TRspSyncWithLeader
{
    required int64 sync_sequence_number = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqCommitMutation
{
    required string type = 1;
    optional NYT.NProto.TGuid mutation_id = 2;
    optional bool retry = 3 [default = false];
    optional int32 reign = 4 [default = 0];
    optional int32 tracto_reign = 1337 [default = 0];
    // Request data is passed via attachment.
}

message TRspCommitMutation
{
    // Response data is passed via attachments.
}

////////////////////////////////////////////////////////////////////////////////

message TReqAbandonLeaderLease
{
    required int32 peer_id = 2;

    reserved 1;
}

message TRspAbandonLeaderLease
{
    optional bool abandoned = 2;

    reserved 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqReportMutationsStateHashes
{
    message TMutationInfo
    {
        required int64 sequence_number = 1;
        required uint64 state_hash = 2;
    }

    repeated TMutationInfo mutations_info = 1;
    required int32 peer_id = 2;
}

message TRspReportMutationsStateHashes
{ }

////////////////////////////////////////////////////////////////////////////////
