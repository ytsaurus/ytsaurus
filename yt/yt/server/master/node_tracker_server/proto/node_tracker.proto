package NYT.NNodeTrackerServer.NProto;

import "yt_proto/yt/client/node_tracker_client/proto/node.proto";

import "yt_proto/yt/core/misc/proto/guid.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqMaterializeNode
{
    required uint32 node_id = 1;
    required NYT.NNodeTrackerClient.NProto.TNodeAddressMap node_addresses = 2;
    repeated string tags = 3;
    required bytes cypress_annotations = 4; // YSON
    required string build_version = 5;
    repeated int32 flavors = 6; // ENodeFlavor
    repeated NYT.NProto.TGuid chunk_location_uuids = 7;
    required string host_name = 8;

    // COMPAT(kvk1920): remove after 24.2.
    optional bool use_imaginary_chunk_locations = 9;

    // COMPAT(gritukan)
    required bool exec_node_is_not_data_node = 10;
    optional int32 node_state = 11; // ENodeState
}

////////////////////////////////////////////////////////////////////////////////

message TReqUnregisterNode
{
    required uint32 node_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqDisposeLocation
{
    required uint32 node_id = 1;
    optional uint32 global_location_index = 3;
    reserved 2;
}

message TReqStartNodeDisposal
{
    required uint32 node_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TMediumStatistics
{
    required int32 medium_index = 1;
    required uint32 chunk_replica_count = 2;
}

message TNodeStatistics
{
    repeated TMediumStatistics medium_statistics = 1;
    required int64 destroyed_chunk_replica_count = 2;
    required int64 chunk_push_replication_queues_size = 3;
    required int64 chunk_pull_replication_queues_size = 4;
    required int64 pull_replication_chunk_count = 5;
}

message TReqSetNodeStatistics
{
    message TEntry
    {
        required uint32 node_id = 1;
        required TNodeStatistics statistics = 2;
    }

    required uint32 cell_tag = 1;
    repeated TEntry entries = 2;
}

message TReqSetNodeAggregatedStateReliability
{
    required uint32 node_id = 1;
    required int32 cell_reliability = 2; // ECellAggregatedStateReliability
    required uint32 cell_tag = 3;
}

message TReqSetNodeState
{
    required uint32 node_id = 1;
    required int32 state = 2; // ENodeState
    required uint32 cell_tag = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqUpdateNodeResources
{
    required uint32 node_id = 1;
    required NYT.NNodeTrackerClient.NProto.TNodeResources resource_usage = 2;
    required NYT.NNodeTrackerClient.NProto.TNodeResources resource_limits = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqUpdateNodesForRole
{
    required int32 node_role = 1; // ENodeRole
    repeated uint32 node_ids = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAddClusterNodeMaintenance
{
    required string node_address = 1;
    optional NYT.NProto.TGuid id = 2;
    required string user_name = 3;
    required int32 type = 4; // EMaintenanceType
    required string comment = 5;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRemoveClusterNodeMaintenance
{
    required string node_address = 1;
    required NYT.NProto.TGuid id = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqResetNodePendingRestartMaintenance
{
    repeated uint32 node_ids = 1;
}

////////////////////////////////////////////////////////////////////////////////
