# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

find_package(linux-headers-generic REQUIRED)

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

get_built_tool_path(
  TOOL_protoc_bin
  TOOL_protoc_dependency
  contrib/tools/protoc/bin
  protoc
)

get_built_tool_path(
  TOOL_cpp_styleguide_bin
  TOOL_cpp_styleguide_dependency
  contrib/tools/protoc/plugins/cpp_styleguide
  cpp_styleguide
)

add_executable(unittester-core-ytree)


target_compile_options(unittester-core-ytree PRIVATE
  -Wdeprecated-this-capture
  -Wimplicit-fallthrough
)

target_link_libraries(unittester-core-ytree PUBLIC
  linux-headers-generic::linux-headers-generic
  contrib-libs-cxxsupp
  yutil
  cpp-testing-gtest
  cpp-testing-gtest_main
  tools-enum_parser-enum_serialization_runtime
  yt-yt-core
  yt-core-test_framework
  contrib-libs-protobuf
)

target_allocator(unittester-core-ytree
  cpp-malloc-jemalloc
)

target_link_options(unittester-core-ytree PRIVATE
  -ldl
  -lrt
  -Wl,--no-as-needed
  -fPIC
  -fPIC
  -lrt
  -ldl
  -lutil
)

target_sources(unittester-core-ytree PRIVATE
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/attributes_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/attribute_filter_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/resolver_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/serialize_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/service_combiner_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/text_yson_convert_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/tree_builder_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/lazy_ypath_service_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/yson_schema_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/yson_struct_update_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/yson_struct_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/ytree_fluent_ut.cpp
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/ytree_ut.cpp
  ${PROJECT_BINARY_DIR}/yt/yt/core/ytree/unittests/proto/test.pb.h
)

target_proto_messages(unittester-core-ytree PRIVATE
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/proto/test.proto
)


add_test(
  NAME
  unittester-core-ytree
  COMMAND
  unittester-core-ytree
)

set_property(
  TEST
  unittester-core-ytree
  PROPERTY
  LABELS
  SMALL
)

set_property(
  TEST
  unittester-core-ytree
  PROPERTY
  ENVIRONMENT
)

target_proto_outs(unittester-core-ytree
  --cpp_out=${PROJECT_BINARY_DIR}/yt
  --cpp_styleguide_out=${PROJECT_BINARY_DIR}/yt
)

target_proto_addincls(unittester-core-ytree
  ./yt
  ${PROJECT_SOURCE_DIR}/yt
  ${PROJECT_BINARY_DIR}
  ${PROJECT_SOURCE_DIR}
  ${PROJECT_SOURCE_DIR}/yt
  ${PROJECT_SOURCE_DIR}/yt
  ${PROJECT_SOURCE_DIR}/contrib/libs/protobuf/src
  ${PROJECT_BINARY_DIR}
  ${PROJECT_SOURCE_DIR}/contrib/libs/protobuf/src
)

generate_enum_serilization(unittester-core-ytree
  ${PROJECT_SOURCE_DIR}/yt/yt/core/ytree/unittests/serialize_ut.h
  INCLUDE_HEADERS
  yt/yt/core/ytree/unittests/serialize_ut.h
)

vcs_info(unittester-core-ytree)

set_property(
  TEST
  unittester-core-ytree
  PROPERTY
  PROCESSORS
  1
)
