package NYT.NTransactionClient.NProto;

import "yt/ytlib/tablet_client/proto/bulk_insert_locking.proto";

import "yt/ytlib/transaction_client/proto/action.proto";

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/core/ytree/proto/attributes.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqStartTransaction
{
    optional NYT.NYTree.NProto.TAttributeDictionary attributes = 1;
    optional string title = 4;

    optional NYT.NProto.TGuid parent_id = 2;
    repeated NYT.NProto.TGuid prerequisite_transaction_ids = 5;

    reserved 6;

    repeated uint32 replicate_to_cell_tags = 7;

    required int64 timeout = 3;
    optional uint64 deadline = 8;

    // COMPAT(h0pless): Remove this when clients will use Cypress transaction service on master.
    optional bool is_cypress_transaction = 10 [default = true];

    reserved 9;
}

message TRspStartTransaction
{
    required NYT.NProto.TGuid id = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRegisterTransactionActions
{
    required NYT.NProto.TGuid transaction_id = 1;
    repeated NYT.NTransactionClient.NProto.TTransactionActionData actions = 2;
}

message TRspRegisterTransactionActions
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqReplicateTransactions
{
    repeated NYT.NProto.TGuid transaction_ids = 1;
    required uint32 destination_cell_tag = 2;

    optional NYT.NProto.TGuid boomerang_wave_id = 3;
    optional int32 boomerang_wave_size = 4;

    optional NYT.NProto.TGuid boomerang_mutation_id = 5;
    optional string boomerang_mutation_type = 6;
    optional bytes boomerang_mutation_data = 7;
}

message TRspReplicateTransactions
{
    // True if at least one transaction replication has been posted as a direct result of the replication request.
    required bool sync_implied = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqIssueLeases
{
    repeated NYT.NProto.TGuid transaction_ids = 1;
    required NYT.NProto.TGuid cell_id = 2;
}

message TRspIssueLeases
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqRegisterLockableDynamicTables
{
    required NYT.NProto.TGuid transaction_id = 1;
    repeated NYT.NTabletClient.NProto.TExternalCellTagToTableIds lockable_dynamic_tables = 2;
}

message TRspRegisterLockableDynamicTables
{ }

////////////////////////////////////////////////////////////////////////////////
