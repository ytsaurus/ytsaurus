package NYT.NDataNodeTrackerClient.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/client/node_tracker_client/proto/node.proto";
import "yt/ytlib/chunk_client/proto/heartbeat.proto";
import "yt/ytlib/chunk_client/proto/medium_directory.proto";

////////////////////////////////////////////////////////////////////////////////

message TMediumOverride
{
    required NYT.NProto.TGuid location_uuid = 1;
    required int32 medium_index = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TMediumOverrides
{
    repeated TMediumOverride overrides = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqModifyReplicas
{
    required uint32 node_id = 1;

    repeated NChunkClient.NProto.TChunkAddInfo added_chunks = 2;
    repeated NChunkClient.NProto.TChunkRemoveInfo removed_chunks = 3;

    repeated NYT.NProto.TGuid location_directory = 4; // TChunkLocationDirectory

    repeated NYT.NProto.TGuid dead_chunk_ids = 5;

    required bool caused_by_node_disposal = 6 [default = false];
}

message TRspModifyReplicas
{
    optional TChunkReplicaAnnouncements replica_announcements = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TChunkReplicaAnnouncements
{
    optional uint64 revision = 1;
    repeated NChunkClient.NProto.TChunkReplicaAnnouncementRequest replica_announcement_requests = 2;
}

message TReplicaAnnouncements
{
    optional TChunkReplicaAnnouncements non_sequoia_announcements = 1;
    optional TChunkReplicaAnnouncements sequoia_announcements = 2;
    optional bool enable_lazy_replica_announcements = 3;
}

message TLocationChunkStatistics
{
    required NYT.NProto.TGuid location_uuid = 1;
    required int32 chunk_count = 2;
}

////////////////////////////////////////////////////////////////////////////////

// COMPAT(danilalexeev): YT-23781.
message TReqFullHeartbeat
{
    required uint32 node_id = 1;

    required NNodeTrackerClient.NProto.TDataNodeStatistics statistics = 2;
    repeated NNodeTrackerClient.NProto.TMediumChunkStatistics per_medium_chunk_counts = 3;
    // Chunk replica counts in _this_ heartbeat.
    repeated TLocationChunkStatistics per_location_chunk_counts = 7;

    repeated NYT.NProto.TGuid location_directory = 6; // TChunkLocationDirectory
    repeated NChunkClient.NProto.TChunkAddInfo chunks = 4;

    optional bool write_sessions_disabled = 5;
}

message TRspFullHeartbeat
{
    //! Hydra revision.
    optional uint64 revision = 1;

    //! COMPAT(aleksandra-zh)
    repeated NChunkClient.NProto.TChunkReplicaAnnouncementRequest replica_announcement_requests = 2;
    optional bool enable_lazy_replica_announcements = 3;

    optional TReplicaAnnouncements replica_announcements = 6;

    optional NChunkClient.NProto.TMediumDirectory medium_directory = 4;
    optional TMediumOverrides medium_overrides = 5;
}

////////////////////////////////////////////////////////////////////////////////

message TReqLocationFullHeartbeat
{
    required uint32 node_id = 1;
    required NYT.NProto.TGuid location_uuid = 2;
    required NNodeTrackerClient.NProto.TChunkLocationStatistics statistics = 3;
    repeated NChunkClient.NProto.TChunkAddInfo chunks = 4;
}

message TRspLocationFullHeartbeat
{
    // TODO(danilalexeev): YT-23781. Make required.
    optional TReplicaAnnouncements replica_announcements = 1;
}

message TReqFinalizeFullHeartbeatSession
{
    required uint32 node_id = 1;
    required NNodeTrackerClient.NProto.TDataNodeStatistics statistics = 2;
}

message TRspFinalizeFullHeartbeatSession
{
    optional NChunkClient.NProto.TMediumDirectory medium_directory = 1;
    optional TMediumOverrides medium_overrides = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqIncrementalHeartbeat
{
    required uint32 node_id = 1;

    required NNodeTrackerClient.NProto.TDataNodeStatistics statistics = 2;

    repeated NYT.NProto.TGuid location_directory = 7; // TChunkLocationDirectory
    repeated NChunkClient.NProto.TChunkAddInfo added_chunks = 3;
    repeated NChunkClient.NProto.TChunkRemoveInfo removed_chunks = 4;

    optional bool write_sessions_disabled = 5;

    optional int64 sequence_number = 8 [default = 0];

    message TConfirmedReplicaAnnouncementRequest
    {
        required NYT.NProto.TGuid chunk_id = 1;
        required uint64 revision = 2;
    }
    repeated TConfirmedReplicaAnnouncementRequest confirmed_replica_announcement_requests = 6;
}

message TRspIncrementalHeartbeat
{
    optional bool disable_write_sessions = 1;

    //! Hydra revision.
    optional uint64 revision = 2;

    //! COMPAT(aleksandra-zh)
    repeated NChunkClient.NProto.TChunkReplicaAnnouncementRequest replica_announcement_requests = 3;
    optional bool enable_lazy_replica_announcements = 4;

    optional TReplicaAnnouncements replica_announcements = 7;

    optional NChunkClient.NProto.TMediumDirectory medium_directory = 5;
    optional TMediumOverrides medium_overrides = 6;
}

////////////////////////////////////////////////////////////////////////////////
