package NYT.NChunkClient.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/client/chunk_client/proto/read_limit.proto";

////////////////////////////////////////////////////////////////////////////////

// Describes a portion of TChunkSpec.
message TChunkSlice
{
    reserved 1;

    // Lower boundary, inclusive.
    required TReadLimit lower_limit = 2;

    // Upper boundary, exclusive.
    required TReadLimit upper_limit = 3;

    optional int64 row_count_override = 4;
    optional int64 data_weight_override = 5;
}

message TSliceRequest
{
    required NYT.NProto.TGuid chunk_id = 1;
    optional TReadLimit lower_limit = 2;
    optional TReadLimit upper_limit = 3;
    optional int32 erasure_codec = 4;
    optional int64 slice_data_weight = 5;
    // If false, chunks are sliced by row indexes and
    // lower_key and upper_key contain estimated values.
    // If true, chunks are sliced by key, each slice contains the whole key
    optional bool slice_by_keys = 6;
    optional int32 key_column_count = 7;
    // After how much data weight the key is considered maniac.
    // If not set, keys are never considered maniacs.
    optional int64 min_maniac_data_weight = 8;
}

////////////////////////////////////////////////////////////////////////////////
