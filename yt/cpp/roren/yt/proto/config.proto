package NRoren;

// Configuration for single MapReduce operation
message TOperationConfig
{
    // Patch for operation spec in yson format.
    // Map fields are merged with existing, other fields overrides default spec derived by Roren.
    //
    // If operation runs multiple transforms and spec patches for these transforms conflict
    // i.e. contain different values for the same key, exception will be thrown when starting pipeline.
    optional string SpecPatch = 1;
}

message TYtPipelineConfig
{
    // YT cluster to run pipeline. hahn, arnod, freud, etc
    required string Cluster = 1;

    // WorkingDir to create temporary intermediate tables.
    // While you can set it to "//tmp", it is not recommended for production processes.
    // https://yt.yandex-team.ru/docs/best_practices/howtorunproduction#zakazhite-neobhodimye-resursy
    required string WorkingDir = 2;

    // Set pool to run calculations under dedicated resources.
    optional string Pool = 3;

    // Set external transaction id. If value set, transaction must exists.
    // All Roren operations run under this transaction.
    // Roren program doesn't ping this transaction and doesn't commit or abort it
    optional string TransactionId = 4;

    // Configuration for particular operations.
    // In general it's recommended to avoid such configurations.
    //
    // To use it you need to give your transform a name, e.g.:
    //
    //      pCollection | "MyParDo" >> ParDo(...) | ...
    //
    // Then put a configuration to OperationConfig, e.g.:
    //
    //          TNode spec = ...;
    //          (*config.MutableOperationConfig())["MyParDo"].SetSpecPatch(NodeToYsonString(specPatch));
    map<string, TOperationConfig> OperatinonConfig = 6;

    // Limit for the number of concurrent YT operations.
    optional int32 ConcurrencyLimit = 7 [default = 10];

    // Enable protobuf format for intermediate tables.
    optional bool EnableProtoFormatForIntermediates = 8 [default = false];

    // TODO(@yurial) Remove after ROREN-119.
    optional bool CheckNoHangingNodes = 9 [default = true];
}
